// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="arr_mult_1d_arr_mult_1d,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7v585t-ffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.901250,HLS_SYN_LAT=2403,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=673,HLS_SYN_LUT=6703,HLS_VERSION=2021_1}" *)

module arr_mult_1d (
        ap_clk,
        ap_rst_n,
        inA_0_Addr_A,
        inA_0_EN_A,
        inA_0_WEN_A,
        inA_0_Din_A,
        inA_0_Dout_A,
        inA_0_Clk_A,
        inA_0_Rst_A,
        inA_0_Addr_B,
        inA_0_EN_B,
        inA_0_WEN_B,
        inA_0_Din_B,
        inA_0_Dout_B,
        inA_0_Clk_B,
        inA_0_Rst_B,
        inA_1_Addr_A,
        inA_1_EN_A,
        inA_1_WEN_A,
        inA_1_Din_A,
        inA_1_Dout_A,
        inA_1_Clk_A,
        inA_1_Rst_A,
        inA_1_Addr_B,
        inA_1_EN_B,
        inA_1_WEN_B,
        inA_1_Din_B,
        inA_1_Dout_B,
        inA_1_Clk_B,
        inA_1_Rst_B,
        inA_2_Addr_A,
        inA_2_EN_A,
        inA_2_WEN_A,
        inA_2_Din_A,
        inA_2_Dout_A,
        inA_2_Clk_A,
        inA_2_Rst_A,
        inA_2_Addr_B,
        inA_2_EN_B,
        inA_2_WEN_B,
        inA_2_Din_B,
        inA_2_Dout_B,
        inA_2_Clk_B,
        inA_2_Rst_B,
        inA_3_Addr_A,
        inA_3_EN_A,
        inA_3_WEN_A,
        inA_3_Din_A,
        inA_3_Dout_A,
        inA_3_Clk_A,
        inA_3_Rst_A,
        inA_3_Addr_B,
        inA_3_EN_B,
        inA_3_WEN_B,
        inA_3_Din_B,
        inA_3_Dout_B,
        inA_3_Clk_B,
        inA_3_Rst_B,
        inA_4_Addr_A,
        inA_4_EN_A,
        inA_4_WEN_A,
        inA_4_Din_A,
        inA_4_Dout_A,
        inA_4_Clk_A,
        inA_4_Rst_A,
        inA_4_Addr_B,
        inA_4_EN_B,
        inA_4_WEN_B,
        inA_4_Din_B,
        inA_4_Dout_B,
        inA_4_Clk_B,
        inA_4_Rst_B,
        inA_5_Addr_A,
        inA_5_EN_A,
        inA_5_WEN_A,
        inA_5_Din_A,
        inA_5_Dout_A,
        inA_5_Clk_A,
        inA_5_Rst_A,
        inA_5_Addr_B,
        inA_5_EN_B,
        inA_5_WEN_B,
        inA_5_Din_B,
        inA_5_Dout_B,
        inA_5_Clk_B,
        inA_5_Rst_B,
        inA_6_Addr_A,
        inA_6_EN_A,
        inA_6_WEN_A,
        inA_6_Din_A,
        inA_6_Dout_A,
        inA_6_Clk_A,
        inA_6_Rst_A,
        inA_6_Addr_B,
        inA_6_EN_B,
        inA_6_WEN_B,
        inA_6_Din_B,
        inA_6_Dout_B,
        inA_6_Clk_B,
        inA_6_Rst_B,
        inA_7_Addr_A,
        inA_7_EN_A,
        inA_7_WEN_A,
        inA_7_Din_A,
        inA_7_Dout_A,
        inA_7_Clk_A,
        inA_7_Rst_A,
        inA_7_Addr_B,
        inA_7_EN_B,
        inA_7_WEN_B,
        inA_7_Din_B,
        inA_7_Dout_B,
        inA_7_Clk_B,
        inA_7_Rst_B,
        inA_8_Addr_A,
        inA_8_EN_A,
        inA_8_WEN_A,
        inA_8_Din_A,
        inA_8_Dout_A,
        inA_8_Clk_A,
        inA_8_Rst_A,
        inA_8_Addr_B,
        inA_8_EN_B,
        inA_8_WEN_B,
        inA_8_Din_B,
        inA_8_Dout_B,
        inA_8_Clk_B,
        inA_8_Rst_B,
        inA_9_Addr_A,
        inA_9_EN_A,
        inA_9_WEN_A,
        inA_9_Din_A,
        inA_9_Dout_A,
        inA_9_Clk_A,
        inA_9_Rst_A,
        inA_9_Addr_B,
        inA_9_EN_B,
        inA_9_WEN_B,
        inA_9_Din_B,
        inA_9_Dout_B,
        inA_9_Clk_B,
        inA_9_Rst_B,
        inA_10_Addr_A,
        inA_10_EN_A,
        inA_10_WEN_A,
        inA_10_Din_A,
        inA_10_Dout_A,
        inA_10_Clk_A,
        inA_10_Rst_A,
        inA_10_Addr_B,
        inA_10_EN_B,
        inA_10_WEN_B,
        inA_10_Din_B,
        inA_10_Dout_B,
        inA_10_Clk_B,
        inA_10_Rst_B,
        inA_11_Addr_A,
        inA_11_EN_A,
        inA_11_WEN_A,
        inA_11_Din_A,
        inA_11_Dout_A,
        inA_11_Clk_A,
        inA_11_Rst_A,
        inA_11_Addr_B,
        inA_11_EN_B,
        inA_11_WEN_B,
        inA_11_Din_B,
        inA_11_Dout_B,
        inA_11_Clk_B,
        inA_11_Rst_B,
        inA_12_Addr_A,
        inA_12_EN_A,
        inA_12_WEN_A,
        inA_12_Din_A,
        inA_12_Dout_A,
        inA_12_Clk_A,
        inA_12_Rst_A,
        inA_12_Addr_B,
        inA_12_EN_B,
        inA_12_WEN_B,
        inA_12_Din_B,
        inA_12_Dout_B,
        inA_12_Clk_B,
        inA_12_Rst_B,
        inA_13_Addr_A,
        inA_13_EN_A,
        inA_13_WEN_A,
        inA_13_Din_A,
        inA_13_Dout_A,
        inA_13_Clk_A,
        inA_13_Rst_A,
        inA_13_Addr_B,
        inA_13_EN_B,
        inA_13_WEN_B,
        inA_13_Din_B,
        inA_13_Dout_B,
        inA_13_Clk_B,
        inA_13_Rst_B,
        inA_14_Addr_A,
        inA_14_EN_A,
        inA_14_WEN_A,
        inA_14_Din_A,
        inA_14_Dout_A,
        inA_14_Clk_A,
        inA_14_Rst_A,
        inA_14_Addr_B,
        inA_14_EN_B,
        inA_14_WEN_B,
        inA_14_Din_B,
        inA_14_Dout_B,
        inA_14_Clk_B,
        inA_14_Rst_B,
        inA_15_Addr_A,
        inA_15_EN_A,
        inA_15_WEN_A,
        inA_15_Din_A,
        inA_15_Dout_A,
        inA_15_Clk_A,
        inA_15_Rst_A,
        inA_15_Addr_B,
        inA_15_EN_B,
        inA_15_WEN_B,
        inA_15_Din_B,
        inA_15_Dout_B,
        inA_15_Clk_B,
        inA_15_Rst_B,
        inA_16_Addr_A,
        inA_16_EN_A,
        inA_16_WEN_A,
        inA_16_Din_A,
        inA_16_Dout_A,
        inA_16_Clk_A,
        inA_16_Rst_A,
        inA_16_Addr_B,
        inA_16_EN_B,
        inA_16_WEN_B,
        inA_16_Din_B,
        inA_16_Dout_B,
        inA_16_Clk_B,
        inA_16_Rst_B,
        inA_17_Addr_A,
        inA_17_EN_A,
        inA_17_WEN_A,
        inA_17_Din_A,
        inA_17_Dout_A,
        inA_17_Clk_A,
        inA_17_Rst_A,
        inA_17_Addr_B,
        inA_17_EN_B,
        inA_17_WEN_B,
        inA_17_Din_B,
        inA_17_Dout_B,
        inA_17_Clk_B,
        inA_17_Rst_B,
        inA_18_Addr_A,
        inA_18_EN_A,
        inA_18_WEN_A,
        inA_18_Din_A,
        inA_18_Dout_A,
        inA_18_Clk_A,
        inA_18_Rst_A,
        inA_18_Addr_B,
        inA_18_EN_B,
        inA_18_WEN_B,
        inA_18_Din_B,
        inA_18_Dout_B,
        inA_18_Clk_B,
        inA_18_Rst_B,
        inA_19_Addr_A,
        inA_19_EN_A,
        inA_19_WEN_A,
        inA_19_Din_A,
        inA_19_Dout_A,
        inA_19_Clk_A,
        inA_19_Rst_A,
        inA_19_Addr_B,
        inA_19_EN_B,
        inA_19_WEN_B,
        inA_19_Din_B,
        inA_19_Dout_B,
        inA_19_Clk_B,
        inA_19_Rst_B,
        inB_0_Addr_A,
        inB_0_EN_A,
        inB_0_WEN_A,
        inB_0_Din_A,
        inB_0_Dout_A,
        inB_0_Clk_A,
        inB_0_Rst_A,
        inB_1_Addr_A,
        inB_1_EN_A,
        inB_1_WEN_A,
        inB_1_Din_A,
        inB_1_Dout_A,
        inB_1_Clk_A,
        inB_1_Rst_A,
        inB_2_Addr_A,
        inB_2_EN_A,
        inB_2_WEN_A,
        inB_2_Din_A,
        inB_2_Dout_A,
        inB_2_Clk_A,
        inB_2_Rst_A,
        inB_3_Addr_A,
        inB_3_EN_A,
        inB_3_WEN_A,
        inB_3_Din_A,
        inB_3_Dout_A,
        inB_3_Clk_A,
        inB_3_Rst_A,
        inB_4_Addr_A,
        inB_4_EN_A,
        inB_4_WEN_A,
        inB_4_Din_A,
        inB_4_Dout_A,
        inB_4_Clk_A,
        inB_4_Rst_A,
        inB_5_Addr_A,
        inB_5_EN_A,
        inB_5_WEN_A,
        inB_5_Din_A,
        inB_5_Dout_A,
        inB_5_Clk_A,
        inB_5_Rst_A,
        inB_6_Addr_A,
        inB_6_EN_A,
        inB_6_WEN_A,
        inB_6_Din_A,
        inB_6_Dout_A,
        inB_6_Clk_A,
        inB_6_Rst_A,
        inB_7_Addr_A,
        inB_7_EN_A,
        inB_7_WEN_A,
        inB_7_Din_A,
        inB_7_Dout_A,
        inB_7_Clk_A,
        inB_7_Rst_A,
        inB_8_Addr_A,
        inB_8_EN_A,
        inB_8_WEN_A,
        inB_8_Din_A,
        inB_8_Dout_A,
        inB_8_Clk_A,
        inB_8_Rst_A,
        inB_9_Addr_A,
        inB_9_EN_A,
        inB_9_WEN_A,
        inB_9_Din_A,
        inB_9_Dout_A,
        inB_9_Clk_A,
        inB_9_Rst_A,
        inB_10_Addr_A,
        inB_10_EN_A,
        inB_10_WEN_A,
        inB_10_Din_A,
        inB_10_Dout_A,
        inB_10_Clk_A,
        inB_10_Rst_A,
        inB_11_Addr_A,
        inB_11_EN_A,
        inB_11_WEN_A,
        inB_11_Din_A,
        inB_11_Dout_A,
        inB_11_Clk_A,
        inB_11_Rst_A,
        inB_12_Addr_A,
        inB_12_EN_A,
        inB_12_WEN_A,
        inB_12_Din_A,
        inB_12_Dout_A,
        inB_12_Clk_A,
        inB_12_Rst_A,
        inB_13_Addr_A,
        inB_13_EN_A,
        inB_13_WEN_A,
        inB_13_Din_A,
        inB_13_Dout_A,
        inB_13_Clk_A,
        inB_13_Rst_A,
        inB_14_Addr_A,
        inB_14_EN_A,
        inB_14_WEN_A,
        inB_14_Din_A,
        inB_14_Dout_A,
        inB_14_Clk_A,
        inB_14_Rst_A,
        inB_15_Addr_A,
        inB_15_EN_A,
        inB_15_WEN_A,
        inB_15_Din_A,
        inB_15_Dout_A,
        inB_15_Clk_A,
        inB_15_Rst_A,
        inB_16_Addr_A,
        inB_16_EN_A,
        inB_16_WEN_A,
        inB_16_Din_A,
        inB_16_Dout_A,
        inB_16_Clk_A,
        inB_16_Rst_A,
        inB_17_Addr_A,
        inB_17_EN_A,
        inB_17_WEN_A,
        inB_17_Din_A,
        inB_17_Dout_A,
        inB_17_Clk_A,
        inB_17_Rst_A,
        inB_18_Addr_A,
        inB_18_EN_A,
        inB_18_WEN_A,
        inB_18_Din_A,
        inB_18_Dout_A,
        inB_18_Clk_A,
        inB_18_Rst_A,
        inB_19_Addr_A,
        inB_19_EN_A,
        inB_19_WEN_A,
        inB_19_Din_A,
        inB_19_Dout_A,
        inB_19_Clk_A,
        inB_19_Rst_A,
        inB_20_Addr_A,
        inB_20_EN_A,
        inB_20_WEN_A,
        inB_20_Din_A,
        inB_20_Dout_A,
        inB_20_Clk_A,
        inB_20_Rst_A,
        inB_21_Addr_A,
        inB_21_EN_A,
        inB_21_WEN_A,
        inB_21_Din_A,
        inB_21_Dout_A,
        inB_21_Clk_A,
        inB_21_Rst_A,
        inB_22_Addr_A,
        inB_22_EN_A,
        inB_22_WEN_A,
        inB_22_Din_A,
        inB_22_Dout_A,
        inB_22_Clk_A,
        inB_22_Rst_A,
        inB_23_Addr_A,
        inB_23_EN_A,
        inB_23_WEN_A,
        inB_23_Din_A,
        inB_23_Dout_A,
        inB_23_Clk_A,
        inB_23_Rst_A,
        out_0_Addr_A,
        out_0_EN_A,
        out_0_WEN_A,
        out_0_Din_A,
        out_0_Dout_A,
        out_0_Clk_A,
        out_0_Rst_A,
        out_1_Addr_A,
        out_1_EN_A,
        out_1_WEN_A,
        out_1_Din_A,
        out_1_Dout_A,
        out_1_Clk_A,
        out_1_Rst_A,
        out_2_Addr_A,
        out_2_EN_A,
        out_2_WEN_A,
        out_2_Din_A,
        out_2_Dout_A,
        out_2_Clk_A,
        out_2_Rst_A,
        out_3_Addr_A,
        out_3_EN_A,
        out_3_WEN_A,
        out_3_Din_A,
        out_3_Dout_A,
        out_3_Clk_A,
        out_3_Rst_A,
        out_4_Addr_A,
        out_4_EN_A,
        out_4_WEN_A,
        out_4_Din_A,
        out_4_Dout_A,
        out_4_Clk_A,
        out_4_Rst_A,
        out_5_Addr_A,
        out_5_EN_A,
        out_5_WEN_A,
        out_5_Din_A,
        out_5_Dout_A,
        out_5_Clk_A,
        out_5_Rst_A,
        out_6_Addr_A,
        out_6_EN_A,
        out_6_WEN_A,
        out_6_Din_A,
        out_6_Dout_A,
        out_6_Clk_A,
        out_6_Rst_A,
        out_7_Addr_A,
        out_7_EN_A,
        out_7_WEN_A,
        out_7_Din_A,
        out_7_Dout_A,
        out_7_Clk_A,
        out_7_Rst_A,
        out_8_Addr_A,
        out_8_EN_A,
        out_8_WEN_A,
        out_8_Din_A,
        out_8_Dout_A,
        out_8_Clk_A,
        out_8_Rst_A,
        out_9_Addr_A,
        out_9_EN_A,
        out_9_WEN_A,
        out_9_Din_A,
        out_9_Dout_A,
        out_9_Clk_A,
        out_9_Rst_A,
        out_10_Addr_A,
        out_10_EN_A,
        out_10_WEN_A,
        out_10_Din_A,
        out_10_Dout_A,
        out_10_Clk_A,
        out_10_Rst_A,
        out_11_Addr_A,
        out_11_EN_A,
        out_11_WEN_A,
        out_11_Din_A,
        out_11_Dout_A,
        out_11_Clk_A,
        out_11_Rst_A,
        out_12_Addr_A,
        out_12_EN_A,
        out_12_WEN_A,
        out_12_Din_A,
        out_12_Dout_A,
        out_12_Clk_A,
        out_12_Rst_A,
        out_13_Addr_A,
        out_13_EN_A,
        out_13_WEN_A,
        out_13_Din_A,
        out_13_Dout_A,
        out_13_Clk_A,
        out_13_Rst_A,
        out_14_Addr_A,
        out_14_EN_A,
        out_14_WEN_A,
        out_14_Din_A,
        out_14_Dout_A,
        out_14_Clk_A,
        out_14_Rst_A,
        out_15_Addr_A,
        out_15_EN_A,
        out_15_WEN_A,
        out_15_Din_A,
        out_15_Dout_A,
        out_15_Clk_A,
        out_15_Rst_A,
        out_16_Addr_A,
        out_16_EN_A,
        out_16_WEN_A,
        out_16_Din_A,
        out_16_Dout_A,
        out_16_Clk_A,
        out_16_Rst_A,
        out_17_Addr_A,
        out_17_EN_A,
        out_17_WEN_A,
        out_17_Din_A,
        out_17_Dout_A,
        out_17_Clk_A,
        out_17_Rst_A,
        out_18_Addr_A,
        out_18_EN_A,
        out_18_WEN_A,
        out_18_Din_A,
        out_18_Dout_A,
        out_18_Clk_A,
        out_18_Rst_A,
        out_19_Addr_A,
        out_19_EN_A,
        out_19_WEN_A,
        out_19_Din_A,
        out_19_Dout_A,
        out_19_Clk_A,
        out_19_Rst_A,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 12'd1;
parameter    ap_ST_fsm_pp0_stage1 = 12'd2;
parameter    ap_ST_fsm_pp0_stage2 = 12'd4;
parameter    ap_ST_fsm_pp0_stage3 = 12'd8;
parameter    ap_ST_fsm_pp0_stage4 = 12'd16;
parameter    ap_ST_fsm_pp0_stage5 = 12'd32;
parameter    ap_ST_fsm_pp0_stage6 = 12'd64;
parameter    ap_ST_fsm_pp0_stage7 = 12'd128;
parameter    ap_ST_fsm_pp0_stage8 = 12'd256;
parameter    ap_ST_fsm_pp0_stage9 = 12'd512;
parameter    ap_ST_fsm_pp0_stage10 = 12'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 12'd2048;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] inA_0_Addr_A;
output   inA_0_EN_A;
output  [3:0] inA_0_WEN_A;
output  [31:0] inA_0_Din_A;
input  [31:0] inA_0_Dout_A;
output   inA_0_Clk_A;
output   inA_0_Rst_A;
output  [31:0] inA_0_Addr_B;
output   inA_0_EN_B;
output  [3:0] inA_0_WEN_B;
output  [31:0] inA_0_Din_B;
input  [31:0] inA_0_Dout_B;
output   inA_0_Clk_B;
output   inA_0_Rst_B;
output  [31:0] inA_1_Addr_A;
output   inA_1_EN_A;
output  [3:0] inA_1_WEN_A;
output  [31:0] inA_1_Din_A;
input  [31:0] inA_1_Dout_A;
output   inA_1_Clk_A;
output   inA_1_Rst_A;
output  [31:0] inA_1_Addr_B;
output   inA_1_EN_B;
output  [3:0] inA_1_WEN_B;
output  [31:0] inA_1_Din_B;
input  [31:0] inA_1_Dout_B;
output   inA_1_Clk_B;
output   inA_1_Rst_B;
output  [31:0] inA_2_Addr_A;
output   inA_2_EN_A;
output  [3:0] inA_2_WEN_A;
output  [31:0] inA_2_Din_A;
input  [31:0] inA_2_Dout_A;
output   inA_2_Clk_A;
output   inA_2_Rst_A;
output  [31:0] inA_2_Addr_B;
output   inA_2_EN_B;
output  [3:0] inA_2_WEN_B;
output  [31:0] inA_2_Din_B;
input  [31:0] inA_2_Dout_B;
output   inA_2_Clk_B;
output   inA_2_Rst_B;
output  [31:0] inA_3_Addr_A;
output   inA_3_EN_A;
output  [3:0] inA_3_WEN_A;
output  [31:0] inA_3_Din_A;
input  [31:0] inA_3_Dout_A;
output   inA_3_Clk_A;
output   inA_3_Rst_A;
output  [31:0] inA_3_Addr_B;
output   inA_3_EN_B;
output  [3:0] inA_3_WEN_B;
output  [31:0] inA_3_Din_B;
input  [31:0] inA_3_Dout_B;
output   inA_3_Clk_B;
output   inA_3_Rst_B;
output  [31:0] inA_4_Addr_A;
output   inA_4_EN_A;
output  [3:0] inA_4_WEN_A;
output  [31:0] inA_4_Din_A;
input  [31:0] inA_4_Dout_A;
output   inA_4_Clk_A;
output   inA_4_Rst_A;
output  [31:0] inA_4_Addr_B;
output   inA_4_EN_B;
output  [3:0] inA_4_WEN_B;
output  [31:0] inA_4_Din_B;
input  [31:0] inA_4_Dout_B;
output   inA_4_Clk_B;
output   inA_4_Rst_B;
output  [31:0] inA_5_Addr_A;
output   inA_5_EN_A;
output  [3:0] inA_5_WEN_A;
output  [31:0] inA_5_Din_A;
input  [31:0] inA_5_Dout_A;
output   inA_5_Clk_A;
output   inA_5_Rst_A;
output  [31:0] inA_5_Addr_B;
output   inA_5_EN_B;
output  [3:0] inA_5_WEN_B;
output  [31:0] inA_5_Din_B;
input  [31:0] inA_5_Dout_B;
output   inA_5_Clk_B;
output   inA_5_Rst_B;
output  [31:0] inA_6_Addr_A;
output   inA_6_EN_A;
output  [3:0] inA_6_WEN_A;
output  [31:0] inA_6_Din_A;
input  [31:0] inA_6_Dout_A;
output   inA_6_Clk_A;
output   inA_6_Rst_A;
output  [31:0] inA_6_Addr_B;
output   inA_6_EN_B;
output  [3:0] inA_6_WEN_B;
output  [31:0] inA_6_Din_B;
input  [31:0] inA_6_Dout_B;
output   inA_6_Clk_B;
output   inA_6_Rst_B;
output  [31:0] inA_7_Addr_A;
output   inA_7_EN_A;
output  [3:0] inA_7_WEN_A;
output  [31:0] inA_7_Din_A;
input  [31:0] inA_7_Dout_A;
output   inA_7_Clk_A;
output   inA_7_Rst_A;
output  [31:0] inA_7_Addr_B;
output   inA_7_EN_B;
output  [3:0] inA_7_WEN_B;
output  [31:0] inA_7_Din_B;
input  [31:0] inA_7_Dout_B;
output   inA_7_Clk_B;
output   inA_7_Rst_B;
output  [31:0] inA_8_Addr_A;
output   inA_8_EN_A;
output  [3:0] inA_8_WEN_A;
output  [31:0] inA_8_Din_A;
input  [31:0] inA_8_Dout_A;
output   inA_8_Clk_A;
output   inA_8_Rst_A;
output  [31:0] inA_8_Addr_B;
output   inA_8_EN_B;
output  [3:0] inA_8_WEN_B;
output  [31:0] inA_8_Din_B;
input  [31:0] inA_8_Dout_B;
output   inA_8_Clk_B;
output   inA_8_Rst_B;
output  [31:0] inA_9_Addr_A;
output   inA_9_EN_A;
output  [3:0] inA_9_WEN_A;
output  [31:0] inA_9_Din_A;
input  [31:0] inA_9_Dout_A;
output   inA_9_Clk_A;
output   inA_9_Rst_A;
output  [31:0] inA_9_Addr_B;
output   inA_9_EN_B;
output  [3:0] inA_9_WEN_B;
output  [31:0] inA_9_Din_B;
input  [31:0] inA_9_Dout_B;
output   inA_9_Clk_B;
output   inA_9_Rst_B;
output  [31:0] inA_10_Addr_A;
output   inA_10_EN_A;
output  [3:0] inA_10_WEN_A;
output  [31:0] inA_10_Din_A;
input  [31:0] inA_10_Dout_A;
output   inA_10_Clk_A;
output   inA_10_Rst_A;
output  [31:0] inA_10_Addr_B;
output   inA_10_EN_B;
output  [3:0] inA_10_WEN_B;
output  [31:0] inA_10_Din_B;
input  [31:0] inA_10_Dout_B;
output   inA_10_Clk_B;
output   inA_10_Rst_B;
output  [31:0] inA_11_Addr_A;
output   inA_11_EN_A;
output  [3:0] inA_11_WEN_A;
output  [31:0] inA_11_Din_A;
input  [31:0] inA_11_Dout_A;
output   inA_11_Clk_A;
output   inA_11_Rst_A;
output  [31:0] inA_11_Addr_B;
output   inA_11_EN_B;
output  [3:0] inA_11_WEN_B;
output  [31:0] inA_11_Din_B;
input  [31:0] inA_11_Dout_B;
output   inA_11_Clk_B;
output   inA_11_Rst_B;
output  [31:0] inA_12_Addr_A;
output   inA_12_EN_A;
output  [3:0] inA_12_WEN_A;
output  [31:0] inA_12_Din_A;
input  [31:0] inA_12_Dout_A;
output   inA_12_Clk_A;
output   inA_12_Rst_A;
output  [31:0] inA_12_Addr_B;
output   inA_12_EN_B;
output  [3:0] inA_12_WEN_B;
output  [31:0] inA_12_Din_B;
input  [31:0] inA_12_Dout_B;
output   inA_12_Clk_B;
output   inA_12_Rst_B;
output  [31:0] inA_13_Addr_A;
output   inA_13_EN_A;
output  [3:0] inA_13_WEN_A;
output  [31:0] inA_13_Din_A;
input  [31:0] inA_13_Dout_A;
output   inA_13_Clk_A;
output   inA_13_Rst_A;
output  [31:0] inA_13_Addr_B;
output   inA_13_EN_B;
output  [3:0] inA_13_WEN_B;
output  [31:0] inA_13_Din_B;
input  [31:0] inA_13_Dout_B;
output   inA_13_Clk_B;
output   inA_13_Rst_B;
output  [31:0] inA_14_Addr_A;
output   inA_14_EN_A;
output  [3:0] inA_14_WEN_A;
output  [31:0] inA_14_Din_A;
input  [31:0] inA_14_Dout_A;
output   inA_14_Clk_A;
output   inA_14_Rst_A;
output  [31:0] inA_14_Addr_B;
output   inA_14_EN_B;
output  [3:0] inA_14_WEN_B;
output  [31:0] inA_14_Din_B;
input  [31:0] inA_14_Dout_B;
output   inA_14_Clk_B;
output   inA_14_Rst_B;
output  [31:0] inA_15_Addr_A;
output   inA_15_EN_A;
output  [3:0] inA_15_WEN_A;
output  [31:0] inA_15_Din_A;
input  [31:0] inA_15_Dout_A;
output   inA_15_Clk_A;
output   inA_15_Rst_A;
output  [31:0] inA_15_Addr_B;
output   inA_15_EN_B;
output  [3:0] inA_15_WEN_B;
output  [31:0] inA_15_Din_B;
input  [31:0] inA_15_Dout_B;
output   inA_15_Clk_B;
output   inA_15_Rst_B;
output  [31:0] inA_16_Addr_A;
output   inA_16_EN_A;
output  [3:0] inA_16_WEN_A;
output  [31:0] inA_16_Din_A;
input  [31:0] inA_16_Dout_A;
output   inA_16_Clk_A;
output   inA_16_Rst_A;
output  [31:0] inA_16_Addr_B;
output   inA_16_EN_B;
output  [3:0] inA_16_WEN_B;
output  [31:0] inA_16_Din_B;
input  [31:0] inA_16_Dout_B;
output   inA_16_Clk_B;
output   inA_16_Rst_B;
output  [31:0] inA_17_Addr_A;
output   inA_17_EN_A;
output  [3:0] inA_17_WEN_A;
output  [31:0] inA_17_Din_A;
input  [31:0] inA_17_Dout_A;
output   inA_17_Clk_A;
output   inA_17_Rst_A;
output  [31:0] inA_17_Addr_B;
output   inA_17_EN_B;
output  [3:0] inA_17_WEN_B;
output  [31:0] inA_17_Din_B;
input  [31:0] inA_17_Dout_B;
output   inA_17_Clk_B;
output   inA_17_Rst_B;
output  [31:0] inA_18_Addr_A;
output   inA_18_EN_A;
output  [3:0] inA_18_WEN_A;
output  [31:0] inA_18_Din_A;
input  [31:0] inA_18_Dout_A;
output   inA_18_Clk_A;
output   inA_18_Rst_A;
output  [31:0] inA_18_Addr_B;
output   inA_18_EN_B;
output  [3:0] inA_18_WEN_B;
output  [31:0] inA_18_Din_B;
input  [31:0] inA_18_Dout_B;
output   inA_18_Clk_B;
output   inA_18_Rst_B;
output  [31:0] inA_19_Addr_A;
output   inA_19_EN_A;
output  [3:0] inA_19_WEN_A;
output  [31:0] inA_19_Din_A;
input  [31:0] inA_19_Dout_A;
output   inA_19_Clk_A;
output   inA_19_Rst_A;
output  [31:0] inA_19_Addr_B;
output   inA_19_EN_B;
output  [3:0] inA_19_WEN_B;
output  [31:0] inA_19_Din_B;
input  [31:0] inA_19_Dout_B;
output   inA_19_Clk_B;
output   inA_19_Rst_B;
output  [31:0] inB_0_Addr_A;
output   inB_0_EN_A;
output  [3:0] inB_0_WEN_A;
output  [31:0] inB_0_Din_A;
input  [31:0] inB_0_Dout_A;
output   inB_0_Clk_A;
output   inB_0_Rst_A;
output  [31:0] inB_1_Addr_A;
output   inB_1_EN_A;
output  [3:0] inB_1_WEN_A;
output  [31:0] inB_1_Din_A;
input  [31:0] inB_1_Dout_A;
output   inB_1_Clk_A;
output   inB_1_Rst_A;
output  [31:0] inB_2_Addr_A;
output   inB_2_EN_A;
output  [3:0] inB_2_WEN_A;
output  [31:0] inB_2_Din_A;
input  [31:0] inB_2_Dout_A;
output   inB_2_Clk_A;
output   inB_2_Rst_A;
output  [31:0] inB_3_Addr_A;
output   inB_3_EN_A;
output  [3:0] inB_3_WEN_A;
output  [31:0] inB_3_Din_A;
input  [31:0] inB_3_Dout_A;
output   inB_3_Clk_A;
output   inB_3_Rst_A;
output  [31:0] inB_4_Addr_A;
output   inB_4_EN_A;
output  [3:0] inB_4_WEN_A;
output  [31:0] inB_4_Din_A;
input  [31:0] inB_4_Dout_A;
output   inB_4_Clk_A;
output   inB_4_Rst_A;
output  [31:0] inB_5_Addr_A;
output   inB_5_EN_A;
output  [3:0] inB_5_WEN_A;
output  [31:0] inB_5_Din_A;
input  [31:0] inB_5_Dout_A;
output   inB_5_Clk_A;
output   inB_5_Rst_A;
output  [31:0] inB_6_Addr_A;
output   inB_6_EN_A;
output  [3:0] inB_6_WEN_A;
output  [31:0] inB_6_Din_A;
input  [31:0] inB_6_Dout_A;
output   inB_6_Clk_A;
output   inB_6_Rst_A;
output  [31:0] inB_7_Addr_A;
output   inB_7_EN_A;
output  [3:0] inB_7_WEN_A;
output  [31:0] inB_7_Din_A;
input  [31:0] inB_7_Dout_A;
output   inB_7_Clk_A;
output   inB_7_Rst_A;
output  [31:0] inB_8_Addr_A;
output   inB_8_EN_A;
output  [3:0] inB_8_WEN_A;
output  [31:0] inB_8_Din_A;
input  [31:0] inB_8_Dout_A;
output   inB_8_Clk_A;
output   inB_8_Rst_A;
output  [31:0] inB_9_Addr_A;
output   inB_9_EN_A;
output  [3:0] inB_9_WEN_A;
output  [31:0] inB_9_Din_A;
input  [31:0] inB_9_Dout_A;
output   inB_9_Clk_A;
output   inB_9_Rst_A;
output  [31:0] inB_10_Addr_A;
output   inB_10_EN_A;
output  [3:0] inB_10_WEN_A;
output  [31:0] inB_10_Din_A;
input  [31:0] inB_10_Dout_A;
output   inB_10_Clk_A;
output   inB_10_Rst_A;
output  [31:0] inB_11_Addr_A;
output   inB_11_EN_A;
output  [3:0] inB_11_WEN_A;
output  [31:0] inB_11_Din_A;
input  [31:0] inB_11_Dout_A;
output   inB_11_Clk_A;
output   inB_11_Rst_A;
output  [31:0] inB_12_Addr_A;
output   inB_12_EN_A;
output  [3:0] inB_12_WEN_A;
output  [31:0] inB_12_Din_A;
input  [31:0] inB_12_Dout_A;
output   inB_12_Clk_A;
output   inB_12_Rst_A;
output  [31:0] inB_13_Addr_A;
output   inB_13_EN_A;
output  [3:0] inB_13_WEN_A;
output  [31:0] inB_13_Din_A;
input  [31:0] inB_13_Dout_A;
output   inB_13_Clk_A;
output   inB_13_Rst_A;
output  [31:0] inB_14_Addr_A;
output   inB_14_EN_A;
output  [3:0] inB_14_WEN_A;
output  [31:0] inB_14_Din_A;
input  [31:0] inB_14_Dout_A;
output   inB_14_Clk_A;
output   inB_14_Rst_A;
output  [31:0] inB_15_Addr_A;
output   inB_15_EN_A;
output  [3:0] inB_15_WEN_A;
output  [31:0] inB_15_Din_A;
input  [31:0] inB_15_Dout_A;
output   inB_15_Clk_A;
output   inB_15_Rst_A;
output  [31:0] inB_16_Addr_A;
output   inB_16_EN_A;
output  [3:0] inB_16_WEN_A;
output  [31:0] inB_16_Din_A;
input  [31:0] inB_16_Dout_A;
output   inB_16_Clk_A;
output   inB_16_Rst_A;
output  [31:0] inB_17_Addr_A;
output   inB_17_EN_A;
output  [3:0] inB_17_WEN_A;
output  [31:0] inB_17_Din_A;
input  [31:0] inB_17_Dout_A;
output   inB_17_Clk_A;
output   inB_17_Rst_A;
output  [31:0] inB_18_Addr_A;
output   inB_18_EN_A;
output  [3:0] inB_18_WEN_A;
output  [31:0] inB_18_Din_A;
input  [31:0] inB_18_Dout_A;
output   inB_18_Clk_A;
output   inB_18_Rst_A;
output  [31:0] inB_19_Addr_A;
output   inB_19_EN_A;
output  [3:0] inB_19_WEN_A;
output  [31:0] inB_19_Din_A;
input  [31:0] inB_19_Dout_A;
output   inB_19_Clk_A;
output   inB_19_Rst_A;
output  [31:0] inB_20_Addr_A;
output   inB_20_EN_A;
output  [3:0] inB_20_WEN_A;
output  [31:0] inB_20_Din_A;
input  [31:0] inB_20_Dout_A;
output   inB_20_Clk_A;
output   inB_20_Rst_A;
output  [31:0] inB_21_Addr_A;
output   inB_21_EN_A;
output  [3:0] inB_21_WEN_A;
output  [31:0] inB_21_Din_A;
input  [31:0] inB_21_Dout_A;
output   inB_21_Clk_A;
output   inB_21_Rst_A;
output  [31:0] inB_22_Addr_A;
output   inB_22_EN_A;
output  [3:0] inB_22_WEN_A;
output  [31:0] inB_22_Din_A;
input  [31:0] inB_22_Dout_A;
output   inB_22_Clk_A;
output   inB_22_Rst_A;
output  [31:0] inB_23_Addr_A;
output   inB_23_EN_A;
output  [3:0] inB_23_WEN_A;
output  [31:0] inB_23_Din_A;
input  [31:0] inB_23_Dout_A;
output   inB_23_Clk_A;
output   inB_23_Rst_A;
output  [31:0] out_0_Addr_A;
output   out_0_EN_A;
output  [3:0] out_0_WEN_A;
output  [31:0] out_0_Din_A;
input  [31:0] out_0_Dout_A;
output   out_0_Clk_A;
output   out_0_Rst_A;
output  [31:0] out_1_Addr_A;
output   out_1_EN_A;
output  [3:0] out_1_WEN_A;
output  [31:0] out_1_Din_A;
input  [31:0] out_1_Dout_A;
output   out_1_Clk_A;
output   out_1_Rst_A;
output  [31:0] out_2_Addr_A;
output   out_2_EN_A;
output  [3:0] out_2_WEN_A;
output  [31:0] out_2_Din_A;
input  [31:0] out_2_Dout_A;
output   out_2_Clk_A;
output   out_2_Rst_A;
output  [31:0] out_3_Addr_A;
output   out_3_EN_A;
output  [3:0] out_3_WEN_A;
output  [31:0] out_3_Din_A;
input  [31:0] out_3_Dout_A;
output   out_3_Clk_A;
output   out_3_Rst_A;
output  [31:0] out_4_Addr_A;
output   out_4_EN_A;
output  [3:0] out_4_WEN_A;
output  [31:0] out_4_Din_A;
input  [31:0] out_4_Dout_A;
output   out_4_Clk_A;
output   out_4_Rst_A;
output  [31:0] out_5_Addr_A;
output   out_5_EN_A;
output  [3:0] out_5_WEN_A;
output  [31:0] out_5_Din_A;
input  [31:0] out_5_Dout_A;
output   out_5_Clk_A;
output   out_5_Rst_A;
output  [31:0] out_6_Addr_A;
output   out_6_EN_A;
output  [3:0] out_6_WEN_A;
output  [31:0] out_6_Din_A;
input  [31:0] out_6_Dout_A;
output   out_6_Clk_A;
output   out_6_Rst_A;
output  [31:0] out_7_Addr_A;
output   out_7_EN_A;
output  [3:0] out_7_WEN_A;
output  [31:0] out_7_Din_A;
input  [31:0] out_7_Dout_A;
output   out_7_Clk_A;
output   out_7_Rst_A;
output  [31:0] out_8_Addr_A;
output   out_8_EN_A;
output  [3:0] out_8_WEN_A;
output  [31:0] out_8_Din_A;
input  [31:0] out_8_Dout_A;
output   out_8_Clk_A;
output   out_8_Rst_A;
output  [31:0] out_9_Addr_A;
output   out_9_EN_A;
output  [3:0] out_9_WEN_A;
output  [31:0] out_9_Din_A;
input  [31:0] out_9_Dout_A;
output   out_9_Clk_A;
output   out_9_Rst_A;
output  [31:0] out_10_Addr_A;
output   out_10_EN_A;
output  [3:0] out_10_WEN_A;
output  [31:0] out_10_Din_A;
input  [31:0] out_10_Dout_A;
output   out_10_Clk_A;
output   out_10_Rst_A;
output  [31:0] out_11_Addr_A;
output   out_11_EN_A;
output  [3:0] out_11_WEN_A;
output  [31:0] out_11_Din_A;
input  [31:0] out_11_Dout_A;
output   out_11_Clk_A;
output   out_11_Rst_A;
output  [31:0] out_12_Addr_A;
output   out_12_EN_A;
output  [3:0] out_12_WEN_A;
output  [31:0] out_12_Din_A;
input  [31:0] out_12_Dout_A;
output   out_12_Clk_A;
output   out_12_Rst_A;
output  [31:0] out_13_Addr_A;
output   out_13_EN_A;
output  [3:0] out_13_WEN_A;
output  [31:0] out_13_Din_A;
input  [31:0] out_13_Dout_A;
output   out_13_Clk_A;
output   out_13_Rst_A;
output  [31:0] out_14_Addr_A;
output   out_14_EN_A;
output  [3:0] out_14_WEN_A;
output  [31:0] out_14_Din_A;
input  [31:0] out_14_Dout_A;
output   out_14_Clk_A;
output   out_14_Rst_A;
output  [31:0] out_15_Addr_A;
output   out_15_EN_A;
output  [3:0] out_15_WEN_A;
output  [31:0] out_15_Din_A;
input  [31:0] out_15_Dout_A;
output   out_15_Clk_A;
output   out_15_Rst_A;
output  [31:0] out_16_Addr_A;
output   out_16_EN_A;
output  [3:0] out_16_WEN_A;
output  [31:0] out_16_Din_A;
input  [31:0] out_16_Dout_A;
output   out_16_Clk_A;
output   out_16_Rst_A;
output  [31:0] out_17_Addr_A;
output   out_17_EN_A;
output  [3:0] out_17_WEN_A;
output  [31:0] out_17_Din_A;
input  [31:0] out_17_Dout_A;
output   out_17_Clk_A;
output   out_17_Rst_A;
output  [31:0] out_18_Addr_A;
output   out_18_EN_A;
output  [3:0] out_18_WEN_A;
output  [31:0] out_18_Din_A;
input  [31:0] out_18_Dout_A;
output   out_18_Clk_A;
output   out_18_Rst_A;
output  [31:0] out_19_Addr_A;
output   out_19_EN_A;
output  [3:0] out_19_WEN_A;
output  [31:0] out_19_Din_A;
input  [31:0] out_19_Dout_A;
output   out_19_Clk_A;
output   out_19_Rst_A;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg inA_0_EN_A;
reg inA_0_EN_B;
reg inA_1_EN_A;
reg inA_1_EN_B;
reg inA_2_EN_A;
reg inA_2_EN_B;
reg inA_3_EN_A;
reg inA_3_EN_B;
reg inA_4_EN_A;
reg inA_4_EN_B;
reg inA_5_EN_A;
reg inA_5_EN_B;
reg inA_6_EN_A;
reg inA_6_EN_B;
reg inA_7_EN_A;
reg inA_7_EN_B;
reg inA_8_EN_A;
reg inA_8_EN_B;
reg inA_9_EN_A;
reg inA_9_EN_B;
reg inA_10_EN_A;
reg inA_10_EN_B;
reg inA_11_EN_A;
reg inA_11_EN_B;
reg inA_12_EN_A;
reg inA_12_EN_B;
reg inA_13_EN_A;
reg inA_13_EN_B;
reg inA_14_EN_A;
reg inA_14_EN_B;
reg inA_15_EN_A;
reg inA_15_EN_B;
reg inA_16_EN_A;
reg inA_16_EN_B;
reg inA_17_EN_A;
reg inA_17_EN_B;
reg inA_18_EN_A;
reg inA_18_EN_B;
reg inA_19_EN_A;
reg inA_19_EN_B;
reg inB_0_EN_A;
reg inB_1_EN_A;
reg inB_2_EN_A;
reg inB_3_EN_A;
reg inB_4_EN_A;
reg inB_5_EN_A;
reg inB_6_EN_A;
reg inB_7_EN_A;
reg inB_8_EN_A;
reg inB_9_EN_A;
reg inB_10_EN_A;
reg inB_11_EN_A;
reg inB_12_EN_A;
reg inB_13_EN_A;
reg inB_14_EN_A;
reg inB_15_EN_A;
reg inB_16_EN_A;
reg inB_17_EN_A;
reg inB_18_EN_A;
reg inB_19_EN_A;
reg inB_20_EN_A;
reg inB_21_EN_A;
reg inB_22_EN_A;
reg inB_23_EN_A;
reg out_0_EN_A;
reg[3:0] out_0_WEN_A;
reg out_1_EN_A;
reg[3:0] out_1_WEN_A;
reg out_2_EN_A;
reg[3:0] out_2_WEN_A;
reg out_3_EN_A;
reg[3:0] out_3_WEN_A;
reg out_4_EN_A;
reg[3:0] out_4_WEN_A;
reg out_5_EN_A;
reg[3:0] out_5_WEN_A;
reg out_6_EN_A;
reg[3:0] out_6_WEN_A;
reg out_7_EN_A;
reg[3:0] out_7_WEN_A;
reg out_8_EN_A;
reg[3:0] out_8_WEN_A;
reg out_9_EN_A;
reg[3:0] out_9_WEN_A;
reg out_10_EN_A;
reg[3:0] out_10_WEN_A;
reg out_11_EN_A;
reg[3:0] out_11_WEN_A;
reg out_12_EN_A;
reg[3:0] out_12_WEN_A;
reg out_13_EN_A;
reg[3:0] out_13_WEN_A;
reg out_14_EN_A;
reg[3:0] out_14_WEN_A;
reg out_15_EN_A;
reg[3:0] out_15_WEN_A;
reg out_16_EN_A;
reg[3:0] out_16_WEN_A;
reg out_17_EN_A;
reg[3:0] out_17_WEN_A;
reg out_18_EN_A;
reg[3:0] out_18_WEN_A;
reg out_19_EN_A;
reg[3:0] out_19_WEN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_ready;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state14_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln1057_reg_9481;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1057_fu_6450_p2;
wire   [7:0] add_ln1057_fu_6456_p2;
reg   [7:0] add_ln1057_reg_9485;
wire   [3:0] select_ln18_fu_6474_p3;
reg   [3:0] select_ln18_reg_9490;
wire   [4:0] select_ln1057_fu_6488_p3;
reg   [4:0] select_ln1057_reg_9495;
reg   [4:0] select_ln1057_reg_9495_pp0_iter1_reg;
wire   [63:0] j_V_cast_fu_6496_p1;
reg   [63:0] j_V_cast_reg_9500;
reg   [63:0] j_V_cast_reg_9500_pp0_iter1_reg;
reg   [31:0] inB_23_load_reg_9644;
wire    ap_block_pp0_stage1_11001;
wire  signed [9:0] trunc_ln870_fu_6524_p1;
reg  signed [9:0] trunc_ln870_reg_9649;
wire  signed [9:0] trunc_ln870_1_fu_6528_p1;
reg  signed [9:0] trunc_ln870_1_reg_9654;
wire  signed [9:0] trunc_ln870_2_fu_6532_p1;
reg  signed [9:0] trunc_ln870_2_reg_9659;
wire  signed [9:0] trunc_ln870_3_fu_6536_p1;
reg  signed [9:0] trunc_ln870_3_reg_9664;
wire  signed [9:0] trunc_ln870_4_fu_6540_p1;
reg  signed [9:0] trunc_ln870_4_reg_9669;
wire  signed [9:0] trunc_ln870_5_fu_6544_p1;
reg  signed [9:0] trunc_ln870_5_reg_9674;
wire  signed [9:0] trunc_ln870_6_fu_6548_p1;
reg  signed [9:0] trunc_ln870_6_reg_9679;
wire  signed [9:0] trunc_ln870_7_fu_6552_p1;
reg  signed [9:0] trunc_ln870_7_reg_9684;
wire  signed [9:0] trunc_ln870_8_fu_6556_p1;
reg  signed [9:0] trunc_ln870_8_reg_9689;
wire   [9:0] mul_ln870_9_fu_6568_p2;
reg   [9:0] mul_ln870_9_reg_9694;
wire  signed [9:0] trunc_ln870_10_fu_6574_p1;
reg  signed [9:0] trunc_ln870_10_reg_9699;
wire  signed [9:0] trunc_ln870_11_fu_6578_p1;
reg  signed [9:0] trunc_ln870_11_reg_9704;
wire  signed [9:0] trunc_ln870_12_fu_6582_p1;
reg  signed [9:0] trunc_ln870_12_reg_9709;
wire  signed [9:0] trunc_ln870_13_fu_6586_p1;
reg  signed [9:0] trunc_ln870_13_reg_9714;
wire  signed [9:0] trunc_ln870_14_fu_6590_p1;
reg  signed [9:0] trunc_ln870_14_reg_9719;
wire  signed [9:0] trunc_ln870_15_fu_6594_p1;
reg  signed [9:0] trunc_ln870_15_reg_9724;
wire  signed [9:0] trunc_ln870_16_fu_6598_p1;
reg  signed [9:0] trunc_ln870_16_reg_9729;
wire  signed [9:0] trunc_ln870_17_fu_6602_p1;
reg  signed [9:0] trunc_ln870_17_reg_9734;
wire  signed [9:0] trunc_ln870_18_fu_6606_p1;
reg  signed [9:0] trunc_ln870_18_reg_9739;
wire  signed [9:0] trunc_ln870_19_fu_6610_p1;
reg  signed [9:0] trunc_ln870_19_reg_9744;
wire  signed [9:0] trunc_ln870_20_fu_6614_p1;
reg  signed [9:0] trunc_ln870_20_reg_9749;
wire  signed [9:0] trunc_ln870_21_fu_6618_p1;
reg  signed [9:0] trunc_ln870_21_reg_9754;
wire  signed [9:0] trunc_ln870_22_fu_6622_p1;
reg  signed [9:0] trunc_ln870_22_reg_9759;
wire   [9:0] mul_ln870_fu_6648_p2;
reg   [9:0] mul_ln870_reg_9864;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [9:0] mul_ln870_1_fu_6657_p2;
reg   [9:0] mul_ln870_1_reg_9869;
wire   [9:0] mul_ln870_2_fu_6673_p2;
reg   [9:0] mul_ln870_2_reg_9884;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [9:0] mul_ln870_3_fu_6682_p2;
reg   [9:0] mul_ln870_3_reg_9889;
wire   [9:0] mul_ln870_4_fu_6691_p2;
reg   [9:0] mul_ln870_4_reg_9894;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [9:0] mul_ln870_5_fu_6700_p2;
reg   [9:0] mul_ln870_5_reg_9899;
wire   [9:0] add_ln870_14_fu_6709_p2;
reg   [9:0] add_ln870_14_reg_9904;
wire   [9:0] mul_ln870_6_fu_6718_p2;
reg   [9:0] mul_ln870_6_reg_9909;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [9:0] mul_ln870_7_fu_6727_p2;
reg   [9:0] mul_ln870_7_reg_9914;
wire   [9:0] add_ln870_16_fu_6736_p2;
reg   [9:0] add_ln870_16_reg_9919;
wire   [9:0] grp_fu_7053_p3;
reg  signed [9:0] add_ln870_20_reg_9924;
wire   [9:0] add_ln870_18_fu_6759_p2;
reg   [9:0] add_ln870_18_reg_9929;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
(* use_dsp48 = "no" *) wire   [9:0] add_ln870_21_fu_6764_p2;
reg   [9:0] add_ln870_21_reg_9934;
wire   [9:0] mul_ln870_11_fu_6773_p2;
reg   [9:0] mul_ln870_11_reg_9939;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [9:0] mul_ln870_12_fu_6782_p2;
reg   [9:0] mul_ln870_12_reg_9944;
wire   [9:0] add_ln870_23_fu_6800_p2;
reg   [9:0] add_ln870_23_reg_9949;
wire   [9:0] mul_ln870_14_fu_6819_p2;
reg   [9:0] mul_ln870_14_reg_9954;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [9:0] add_ln870_7_fu_6824_p2;
reg   [9:0] add_ln870_7_reg_9959;
wire   [9:0] mul_ln870_15_fu_6833_p2;
reg   [9:0] mul_ln870_15_reg_9964;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire   [9:0] mul_ln870_16_fu_6842_p2;
reg   [9:0] mul_ln870_16_reg_9969;
wire   [9:0] mul_ln870_17_fu_6851_p2;
reg   [9:0] mul_ln870_17_reg_9974;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [9:0] mul_ln870_18_fu_6860_p2;
reg   [9:0] mul_ln870_18_reg_9979;
wire   [9:0] add_ln870_11_fu_6878_p2;
reg   [9:0] add_ln870_11_reg_9984;
wire   [9:0] mul_ln870_19_fu_6888_p2;
reg   [9:0] mul_ln870_19_reg_9989;
wire    ap_block_pp0_stage11_11001;
wire   [9:0] mul_ln870_20_fu_6897_p2;
reg   [9:0] mul_ln870_20_reg_9994;
wire   [9:0] mul_ln870_21_fu_6906_p2;
reg   [9:0] mul_ln870_21_reg_9999;
wire   [9:0] add_ln870_2_fu_6920_p2;
reg   [9:0] add_ln870_2_reg_10004;
wire   [9:0] add_ln870_5_fu_6929_p2;
reg   [9:0] add_ln870_5_reg_10009;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [31:0] ap_phi_mux_phi_ln870_9_phi_fu_4895_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892;
reg   [31:0] ap_phi_mux_phi_ln870_phi_fu_4960_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_reg_4957;
reg   [31:0] ap_phi_mux_phi_ln870_1_phi_fu_5025_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022;
reg   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087;
reg   [31:0] ap_phi_mux_phi_ln870_2_phi_fu_5135_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132;
reg   [31:0] ap_phi_mux_phi_ln870_3_phi_fu_5200_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197;
reg   [31:0] ap_phi_mux_phi_ln870_4_phi_fu_5265_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262;
reg   [31:0] ap_phi_mux_phi_ln870_5_phi_fu_5330_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327;
reg   [31:0] ap_phi_mux_phi_ln870_6_phi_fu_5395_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392;
reg   [31:0] ap_phi_mux_phi_ln870_7_phi_fu_5460_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457;
reg   [31:0] ap_phi_mux_phi_ln870_8_phi_fu_5525_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522;
reg   [31:0] ap_phi_mux_phi_ln870_10_phi_fu_5590_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587;
reg   [31:0] ap_phi_mux_phi_ln870_11_phi_fu_5655_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652;
reg   [31:0] ap_phi_mux_phi_ln870_12_phi_fu_5720_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717;
reg   [31:0] ap_phi_mux_phi_ln870_13_phi_fu_5785_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782;
reg   [31:0] ap_phi_mux_phi_ln870_14_phi_fu_5850_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847;
reg   [31:0] ap_phi_mux_phi_ln870_15_phi_fu_5915_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912;
reg   [31:0] ap_phi_mux_phi_ln870_16_phi_fu_5980_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977;
reg   [31:0] ap_phi_mux_phi_ln870_17_phi_fu_6045_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042;
reg   [31:0] ap_phi_mux_phi_ln870_18_phi_fu_6110_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107;
reg   [31:0] ap_phi_mux_phi_ln870_19_phi_fu_6175_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172;
reg   [31:0] ap_phi_mux_phi_ln870_20_phi_fu_6240_p40;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237;
reg   [31:0] ap_phi_mux_phi_ln870_21_phi_fu_6305_p40;
wire   [31:0] ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302;
reg   [31:0] ap_phi_mux_phi_ln870_22_phi_fu_6370_p40;
wire   [31:0] ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg   [3:0] j_V_fu_268;
wire   [3:0] add_ln870_1_fu_6626_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_V_load;
reg   [4:0] i_V_fu_272;
reg   [4:0] ap_sig_allocacmp_i_V_load;
reg   [7:0] indvar_flatten_fu_276;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] inB_23_Addr_A_orig;
wire   [31:0] inB_0_Addr_A_orig;
wire   [31:0] inB_1_Addr_A_orig;
wire   [31:0] inB_2_Addr_A_orig;
wire   [31:0] inB_3_Addr_A_orig;
wire   [31:0] inB_4_Addr_A_orig;
wire   [31:0] inB_5_Addr_A_orig;
wire   [31:0] inB_6_Addr_A_orig;
wire   [31:0] inB_7_Addr_A_orig;
wire   [31:0] inB_8_Addr_A_orig;
wire   [31:0] inB_9_Addr_A_orig;
wire   [31:0] inB_10_Addr_A_orig;
wire   [31:0] inB_11_Addr_A_orig;
wire   [31:0] inB_12_Addr_A_orig;
wire   [31:0] inB_13_Addr_A_orig;
wire   [31:0] inB_14_Addr_A_orig;
wire   [31:0] inB_15_Addr_A_orig;
wire   [31:0] inB_16_Addr_A_orig;
wire   [31:0] inB_17_Addr_A_orig;
wire   [31:0] inB_18_Addr_A_orig;
wire   [31:0] inB_19_Addr_A_orig;
wire   [31:0] inB_20_Addr_A_orig;
wire   [31:0] inB_21_Addr_A_orig;
wire   [31:0] inB_22_Addr_A_orig;
reg   [31:0] inA_18_Addr_B_orig;
reg   [31:0] inA_18_Addr_A_orig;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
reg   [31:0] inA_17_Addr_B_orig;
reg   [31:0] inA_17_Addr_A_orig;
reg   [31:0] inA_16_Addr_B_orig;
reg   [31:0] inA_16_Addr_A_orig;
reg   [31:0] inA_15_Addr_B_orig;
reg   [31:0] inA_15_Addr_A_orig;
reg   [31:0] inA_14_Addr_B_orig;
reg   [31:0] inA_14_Addr_A_orig;
reg   [31:0] inA_13_Addr_B_orig;
reg   [31:0] inA_13_Addr_A_orig;
reg   [31:0] inA_12_Addr_B_orig;
reg   [31:0] inA_12_Addr_A_orig;
reg   [31:0] inA_11_Addr_B_orig;
reg   [31:0] inA_11_Addr_A_orig;
reg   [31:0] inA_10_Addr_B_orig;
reg   [31:0] inA_10_Addr_A_orig;
reg   [31:0] inA_9_Addr_B_orig;
reg   [31:0] inA_9_Addr_A_orig;
reg   [31:0] inA_8_Addr_B_orig;
reg   [31:0] inA_8_Addr_A_orig;
reg   [31:0] inA_7_Addr_B_orig;
reg   [31:0] inA_7_Addr_A_orig;
reg   [31:0] inA_6_Addr_B_orig;
reg   [31:0] inA_6_Addr_A_orig;
reg   [31:0] inA_5_Addr_B_orig;
reg   [31:0] inA_5_Addr_A_orig;
reg   [31:0] inA_4_Addr_B_orig;
reg   [31:0] inA_4_Addr_A_orig;
reg   [31:0] inA_3_Addr_B_orig;
reg   [31:0] inA_3_Addr_A_orig;
reg   [31:0] inA_2_Addr_B_orig;
reg   [31:0] inA_2_Addr_A_orig;
reg   [31:0] inA_1_Addr_B_orig;
reg   [31:0] inA_1_Addr_A_orig;
reg   [31:0] inA_0_Addr_B_orig;
reg   [31:0] inA_0_Addr_A_orig;
reg   [31:0] inA_19_Addr_B_orig;
reg   [31:0] inA_19_Addr_A_orig;
wire   [31:0] out_18_Addr_A_orig;
wire   [31:0] out_17_Addr_A_orig;
wire   [31:0] out_16_Addr_A_orig;
wire   [31:0] out_15_Addr_A_orig;
wire   [31:0] out_14_Addr_A_orig;
wire   [31:0] out_13_Addr_A_orig;
wire   [31:0] out_12_Addr_A_orig;
wire   [31:0] out_11_Addr_A_orig;
wire   [31:0] out_10_Addr_A_orig;
wire   [31:0] out_9_Addr_A_orig;
wire   [31:0] out_8_Addr_A_orig;
wire   [31:0] out_7_Addr_A_orig;
wire   [31:0] out_6_Addr_A_orig;
wire   [31:0] out_5_Addr_A_orig;
wire   [31:0] out_4_Addr_A_orig;
wire   [31:0] out_3_Addr_A_orig;
wire   [31:0] out_2_Addr_A_orig;
wire   [31:0] out_1_Addr_A_orig;
wire   [31:0] out_0_Addr_A_orig;
wire   [31:0] out_19_Addr_A_orig;
wire   [0:0] icmp_ln1057_1_fu_6468_p2;
wire   [4:0] add_ln870_fu_6482_p2;
wire  signed [9:0] mul_ln870_9_fu_6568_p0;
wire  signed [9:0] mul_ln870_9_fu_6568_p1;
wire  signed [9:0] mul_ln870_fu_6648_p1;
wire  signed [9:0] mul_ln870_1_fu_6657_p1;
wire  signed [9:0] mul_ln870_2_fu_6673_p1;
wire  signed [9:0] mul_ln870_3_fu_6682_p1;
wire  signed [9:0] mul_ln870_4_fu_6691_p1;
wire  signed [9:0] mul_ln870_5_fu_6700_p1;
wire   [9:0] add_ln870_13_fu_6705_p2;
wire  signed [9:0] mul_ln870_6_fu_6718_p1;
wire  signed [9:0] mul_ln870_7_fu_6727_p1;
wire   [9:0] add_ln870_15_fu_6732_p2;
wire  signed [9:0] mul_ln870_8_fu_6745_p1;
wire  signed [9:0] mul_ln870_10_fu_6754_p1;
wire   [9:0] mul_ln870_8_fu_6745_p2;
wire   [9:0] mul_ln870_10_fu_6754_p2;
wire  signed [9:0] mul_ln870_11_fu_6773_p1;
wire  signed [9:0] mul_ln870_12_fu_6782_p1;
wire   [9:0] add_ln870_19_fu_6791_p2;
wire   [9:0] add_ln870_22_fu_6795_p2;
wire   [9:0] add_ln870_17_fu_6787_p2;
wire  signed [9:0] mul_ln870_13_fu_6810_p1;
wire  signed [9:0] mul_ln870_14_fu_6819_p1;
wire   [9:0] mul_ln870_13_fu_6810_p2;
wire  signed [9:0] mul_ln870_15_fu_6833_p1;
wire  signed [9:0] mul_ln870_16_fu_6842_p1;
wire  signed [9:0] mul_ln870_17_fu_6851_p1;
wire  signed [9:0] mul_ln870_18_fu_6860_p1;
wire   [9:0] add_ln870_9_fu_6869_p2;
wire   [9:0] add_ln870_10_fu_6873_p2;
wire   [9:0] add_ln870_8_fu_6865_p2;
wire  signed [9:0] mul_ln870_19_fu_6888_p1;
wire  signed [9:0] mul_ln870_20_fu_6897_p1;
wire  signed [9:0] mul_ln870_21_fu_6906_p1;
wire  signed [9:0] mul_ln870_22_fu_6915_p1;
wire   [9:0] mul_ln870_22_fu_6915_p2;
wire   [9:0] add_ln870_4_fu_6925_p2;
wire   [9:0] add_ln870_3_fu_6934_p2;
wire   [9:0] add_ln870_6_fu_6938_p2;
wire   [9:0] add_ln870_12_fu_6943_p2;
wire   [9:0] add_ln870_24_fu_6948_p2;
wire  signed [9:0] grp_fu_7053_p0;
wire  signed [9:0] grp_fu_7053_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_3492;
reg    ap_condition_2766;
reg    ap_condition_1940;
reg    ap_condition_3501;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

arr_mult_1d_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U1(
    .din0(mul_ln870_9_fu_6568_p0),
    .din1(mul_ln870_9_fu_6568_p1),
    .dout(mul_ln870_9_fu_6568_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U2(
    .din0(trunc_ln870_reg_9649),
    .din1(mul_ln870_fu_6648_p1),
    .dout(mul_ln870_fu_6648_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U3(
    .din0(trunc_ln870_1_reg_9654),
    .din1(mul_ln870_1_fu_6657_p1),
    .dout(mul_ln870_1_fu_6657_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U4(
    .din0(trunc_ln870_2_reg_9659),
    .din1(mul_ln870_2_fu_6673_p1),
    .dout(mul_ln870_2_fu_6673_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U5(
    .din0(trunc_ln870_3_reg_9664),
    .din1(mul_ln870_3_fu_6682_p1),
    .dout(mul_ln870_3_fu_6682_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U6(
    .din0(trunc_ln870_4_reg_9669),
    .din1(mul_ln870_4_fu_6691_p1),
    .dout(mul_ln870_4_fu_6691_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U7(
    .din0(trunc_ln870_5_reg_9674),
    .din1(mul_ln870_5_fu_6700_p1),
    .dout(mul_ln870_5_fu_6700_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U8(
    .din0(trunc_ln870_6_reg_9679),
    .din1(mul_ln870_6_fu_6718_p1),
    .dout(mul_ln870_6_fu_6718_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U9(
    .din0(trunc_ln870_7_reg_9684),
    .din1(mul_ln870_7_fu_6727_p1),
    .dout(mul_ln870_7_fu_6727_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U10(
    .din0(trunc_ln870_8_reg_9689),
    .din1(mul_ln870_8_fu_6745_p1),
    .dout(mul_ln870_8_fu_6745_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U11(
    .din0(trunc_ln870_10_reg_9699),
    .din1(mul_ln870_10_fu_6754_p1),
    .dout(mul_ln870_10_fu_6754_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U12(
    .din0(trunc_ln870_11_reg_9704),
    .din1(mul_ln870_11_fu_6773_p1),
    .dout(mul_ln870_11_fu_6773_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U13(
    .din0(trunc_ln870_12_reg_9709),
    .din1(mul_ln870_12_fu_6782_p1),
    .dout(mul_ln870_12_fu_6782_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U14(
    .din0(trunc_ln870_13_reg_9714),
    .din1(mul_ln870_13_fu_6810_p1),
    .dout(mul_ln870_13_fu_6810_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U15(
    .din0(trunc_ln870_14_reg_9719),
    .din1(mul_ln870_14_fu_6819_p1),
    .dout(mul_ln870_14_fu_6819_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U16(
    .din0(trunc_ln870_15_reg_9724),
    .din1(mul_ln870_15_fu_6833_p1),
    .dout(mul_ln870_15_fu_6833_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U17(
    .din0(trunc_ln870_16_reg_9729),
    .din1(mul_ln870_16_fu_6842_p1),
    .dout(mul_ln870_16_fu_6842_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U18(
    .din0(trunc_ln870_17_reg_9734),
    .din1(mul_ln870_17_fu_6851_p1),
    .dout(mul_ln870_17_fu_6851_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U19(
    .din0(trunc_ln870_18_reg_9739),
    .din1(mul_ln870_18_fu_6860_p1),
    .dout(mul_ln870_18_fu_6860_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U20(
    .din0(trunc_ln870_19_reg_9744),
    .din1(mul_ln870_19_fu_6888_p1),
    .dout(mul_ln870_19_fu_6888_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U21(
    .din0(trunc_ln870_20_reg_9749),
    .din1(mul_ln870_20_fu_6897_p1),
    .dout(mul_ln870_20_fu_6897_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U22(
    .din0(trunc_ln870_21_reg_9754),
    .din1(mul_ln870_21_fu_6906_p1),
    .dout(mul_ln870_21_fu_6906_p2)
);

arr_mult_1d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U23(
    .din0(trunc_ln870_22_reg_9759),
    .din1(mul_ln870_22_fu_6915_p1),
    .dout(mul_ln870_22_fu_6915_p2)
);

arr_mult_1d_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_7053_p0),
    .din1(grp_fu_7053_p1),
    .din2(mul_ln870_9_reg_9694),
    .ce(1'b1),
    .dout(grp_fu_7053_p3)
);

arr_mult_1d_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2766)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_0_Dout_A;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_3501)) begin
            i_V_fu_272 <= 5'd0;
        end else if ((1'b1 == ap_condition_1940)) begin
            i_V_fu_272 <= select_ln1057_reg_9495;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_3501)) begin
            indvar_flatten_fu_276 <= 8'd0;
        end else if ((1'b1 == ap_condition_1940)) begin
            indvar_flatten_fu_276 <= add_ln1057_reg_9485;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_3501)) begin
            j_V_fu_268 <= 4'd0;
        end else if ((1'b1 == ap_condition_1940)) begin
            j_V_fu_268 <= add_ln870_1_fu_6626_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1057_reg_9485 <= add_ln1057_fu_6456_p2;
        add_ln870_2_reg_10004 <= add_ln870_2_fu_6920_p2;
        add_ln870_5_reg_10009 <= add_ln870_5_fu_6929_p2;
        icmp_ln1057_reg_9481 <= icmp_ln1057_fu_6450_p2;
        j_V_cast_reg_9500_pp0_iter1_reg[3 : 0] <= j_V_cast_reg_9500[3 : 0];
        mul_ln870_21_reg_9999 <= mul_ln870_21_fu_6906_p2;
        select_ln1057_reg_9495_pp0_iter1_reg <= select_ln1057_reg_9495;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln870_11_reg_9984 <= add_ln870_11_fu_6878_p2;
        mul_ln870_17_reg_9974 <= mul_ln870_17_fu_6851_p2;
        mul_ln870_18_reg_9979 <= mul_ln870_18_fu_6860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln870_14_reg_9904 <= add_ln870_14_fu_6709_p2;
        mul_ln870_4_reg_9894 <= mul_ln870_4_fu_6691_p2;
        mul_ln870_5_reg_9899 <= mul_ln870_5_fu_6700_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln870_16_reg_9919 <= add_ln870_16_fu_6736_p2;
        mul_ln870_6_reg_9909 <= mul_ln870_6_fu_6718_p2;
        mul_ln870_7_reg_9914 <= mul_ln870_7_fu_6727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln870_18_reg_9929 <= add_ln870_18_fu_6759_p2;
        add_ln870_21_reg_9934 <= add_ln870_21_fu_6764_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln870_20_reg_9924 <= grp_fu_7053_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln870_23_reg_9949 <= add_ln870_23_fu_6800_p2;
        mul_ln870_11_reg_9939 <= mul_ln870_11_fu_6773_p2;
        mul_ln870_12_reg_9944 <= mul_ln870_12_fu_6782_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        add_ln870_7_reg_9959 <= add_ln870_7_fu_6824_p2;
        mul_ln870_14_reg_9954 <= mul_ln870_14_fu_6819_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        inB_23_load_reg_9644 <= inB_23_Dout_A;
        mul_ln870_9_reg_9694 <= mul_ln870_9_fu_6568_p2;
        trunc_ln870_10_reg_9699 <= trunc_ln870_10_fu_6574_p1;
        trunc_ln870_11_reg_9704 <= trunc_ln870_11_fu_6578_p1;
        trunc_ln870_12_reg_9709 <= trunc_ln870_12_fu_6582_p1;
        trunc_ln870_13_reg_9714 <= trunc_ln870_13_fu_6586_p1;
        trunc_ln870_14_reg_9719 <= trunc_ln870_14_fu_6590_p1;
        trunc_ln870_15_reg_9724 <= trunc_ln870_15_fu_6594_p1;
        trunc_ln870_16_reg_9729 <= trunc_ln870_16_fu_6598_p1;
        trunc_ln870_17_reg_9734 <= trunc_ln870_17_fu_6602_p1;
        trunc_ln870_18_reg_9739 <= trunc_ln870_18_fu_6606_p1;
        trunc_ln870_19_reg_9744 <= trunc_ln870_19_fu_6610_p1;
        trunc_ln870_1_reg_9654 <= trunc_ln870_1_fu_6528_p1;
        trunc_ln870_20_reg_9749 <= trunc_ln870_20_fu_6614_p1;
        trunc_ln870_21_reg_9754 <= trunc_ln870_21_fu_6618_p1;
        trunc_ln870_22_reg_9759 <= trunc_ln870_22_fu_6622_p1;
        trunc_ln870_2_reg_9659 <= trunc_ln870_2_fu_6532_p1;
        trunc_ln870_3_reg_9664 <= trunc_ln870_3_fu_6536_p1;
        trunc_ln870_4_reg_9669 <= trunc_ln870_4_fu_6540_p1;
        trunc_ln870_5_reg_9674 <= trunc_ln870_5_fu_6544_p1;
        trunc_ln870_6_reg_9679 <= trunc_ln870_6_fu_6548_p1;
        trunc_ln870_7_reg_9684 <= trunc_ln870_7_fu_6552_p1;
        trunc_ln870_8_reg_9689 <= trunc_ln870_8_fu_6556_p1;
        trunc_ln870_reg_9649 <= trunc_ln870_fu_6524_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1057_fu_6450_p2 == 1'd0))) begin
        j_V_cast_reg_9500[3 : 0] <= j_V_cast_fu_6496_p1[3 : 0];
        select_ln1057_reg_9495 <= select_ln1057_fu_6488_p3;
        select_ln18_reg_9490 <= select_ln18_fu_6474_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul_ln870_15_reg_9964 <= mul_ln870_15_fu_6833_p2;
        mul_ln870_16_reg_9969 <= mul_ln870_16_fu_6842_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        mul_ln870_19_reg_9989 <= mul_ln870_19_fu_6888_p2;
        mul_ln870_20_reg_9994 <= mul_ln870_20_fu_6897_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln870_1_reg_9869 <= mul_ln870_1_fu_6657_p2;
        mul_ln870_reg_9864 <= mul_ln870_fu_6648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln870_2_reg_9884 <= mul_ln870_2_fu_6673_p2;
        mul_ln870_3_reg_9889 <= mul_ln870_3_fu_6682_p2;
    end
end

always @ (*) begin
    if (((icmp_ln1057_reg_9481 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587;
        end
    end else begin
        ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 = ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652;
        end
    end else begin
        ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 = ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717;
        end
    end else begin
        ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 = ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782;
        end
    end else begin
        ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 = ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847;
        end
    end else begin
        ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 = ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912;
        end
    end else begin
        ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 = ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977;
        end
    end else begin
        ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 = ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042;
        end
    end else begin
        ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 = ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107;
        end
    end else begin
        ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 = ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172;
        end
    end else begin
        ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 = ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022;
        end
    end else begin
        ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 = ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237;
        end
    end else begin
        ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 = ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302;
        end
    end else begin
        ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 = ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367;
        end
    end else begin
        ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 = ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132;
        end
    end else begin
        ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 = ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197;
        end
    end else begin
        ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 = ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262;
        end
    end else begin
        ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 = ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327;
        end
    end else begin
        ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 = ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392;
        end
    end else begin
        ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 = ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_19_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_18_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_17_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_16_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_15_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_14_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_13_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_12_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_11_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_10_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_9_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_8_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_7_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_6_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_5_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_4_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_3_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_2_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_1_Dout_A;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = inA_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457;
        end
    end else begin
        ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 = ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522;
        end
    end else begin
        ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 = ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892;
        end
    end else begin
        ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 = ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_9481 == 1'd0)) begin
        if ((1'b1 == ap_condition_3492)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_19_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd18)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_18_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd17)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_17_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd16)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_16_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd15)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_15_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd14)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_14_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd13)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_13_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd12)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_12_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd11)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_11_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd10)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_10_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd9)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_9_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd8)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_8_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd7)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_7_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd6)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_6_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd5)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_5_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd4)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_4_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd3)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_3_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd2)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_2_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd1)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_1_Dout_B;
        end else if ((select_ln1057_reg_9495 == 5'd0)) begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = inA_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 = ap_phi_reg_pp0_iter0_phi_ln870_reg_4957;
        end
    end else begin
        ap_phi_mux_phi_ln870_phi_fu_4960_p40 = ap_phi_reg_pp0_iter0_phi_ln870_reg_4957;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_V_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_V_load = i_V_fu_272;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_276;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_V_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_V_load = j_V_fu_268;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_0_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_0_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_0_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_0_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_0_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_0_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_0_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_0_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_0_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_0_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_0_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_0_Addr_A_orig = 64'd23;
        end else begin
            inA_0_Addr_A_orig = 'bx;
        end
    end else begin
        inA_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_0_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_0_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_0_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_0_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_0_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_0_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_0_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_0_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_0_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_0_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_0_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_0_Addr_B_orig = 64'd9;
        end else begin
            inA_0_Addr_B_orig = 'bx;
        end
    end else begin
        inA_0_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_0_EN_A = 1'b1;
    end else begin
        inA_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_0_EN_B = 1'b1;
    end else begin
        inA_0_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_10_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_10_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_10_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_10_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_10_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_10_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_10_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_10_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_10_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_10_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_10_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_10_Addr_A_orig = 64'd23;
        end else begin
            inA_10_Addr_A_orig = 'bx;
        end
    end else begin
        inA_10_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_10_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_10_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_10_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_10_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_10_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_10_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_10_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_10_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_10_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_10_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_10_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_10_Addr_B_orig = 64'd9;
        end else begin
            inA_10_Addr_B_orig = 'bx;
        end
    end else begin
        inA_10_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_10_EN_A = 1'b1;
    end else begin
        inA_10_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_10_EN_B = 1'b1;
    end else begin
        inA_10_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_11_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_11_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_11_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_11_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_11_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_11_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_11_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_11_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_11_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_11_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_11_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_11_Addr_A_orig = 64'd23;
        end else begin
            inA_11_Addr_A_orig = 'bx;
        end
    end else begin
        inA_11_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_11_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_11_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_11_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_11_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_11_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_11_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_11_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_11_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_11_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_11_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_11_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_11_Addr_B_orig = 64'd9;
        end else begin
            inA_11_Addr_B_orig = 'bx;
        end
    end else begin
        inA_11_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_11_EN_A = 1'b1;
    end else begin
        inA_11_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_11_EN_B = 1'b1;
    end else begin
        inA_11_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_12_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_12_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_12_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_12_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_12_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_12_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_12_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_12_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_12_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_12_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_12_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_12_Addr_A_orig = 64'd23;
        end else begin
            inA_12_Addr_A_orig = 'bx;
        end
    end else begin
        inA_12_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_12_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_12_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_12_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_12_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_12_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_12_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_12_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_12_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_12_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_12_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_12_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_12_Addr_B_orig = 64'd9;
        end else begin
            inA_12_Addr_B_orig = 'bx;
        end
    end else begin
        inA_12_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_12_EN_A = 1'b1;
    end else begin
        inA_12_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_12_EN_B = 1'b1;
    end else begin
        inA_12_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_13_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_13_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_13_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_13_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_13_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_13_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_13_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_13_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_13_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_13_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_13_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_13_Addr_A_orig = 64'd23;
        end else begin
            inA_13_Addr_A_orig = 'bx;
        end
    end else begin
        inA_13_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_13_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_13_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_13_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_13_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_13_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_13_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_13_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_13_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_13_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_13_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_13_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_13_Addr_B_orig = 64'd9;
        end else begin
            inA_13_Addr_B_orig = 'bx;
        end
    end else begin
        inA_13_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_13_EN_A = 1'b1;
    end else begin
        inA_13_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_13_EN_B = 1'b1;
    end else begin
        inA_13_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_14_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_14_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_14_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_14_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_14_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_14_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_14_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_14_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_14_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_14_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_14_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_14_Addr_A_orig = 64'd23;
        end else begin
            inA_14_Addr_A_orig = 'bx;
        end
    end else begin
        inA_14_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_14_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_14_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_14_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_14_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_14_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_14_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_14_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_14_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_14_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_14_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_14_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_14_Addr_B_orig = 64'd9;
        end else begin
            inA_14_Addr_B_orig = 'bx;
        end
    end else begin
        inA_14_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_14_EN_A = 1'b1;
    end else begin
        inA_14_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_14_EN_B = 1'b1;
    end else begin
        inA_14_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_15_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_15_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_15_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_15_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_15_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_15_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_15_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_15_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_15_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_15_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_15_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_15_Addr_A_orig = 64'd23;
        end else begin
            inA_15_Addr_A_orig = 'bx;
        end
    end else begin
        inA_15_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_15_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_15_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_15_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_15_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_15_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_15_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_15_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_15_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_15_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_15_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_15_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_15_Addr_B_orig = 64'd9;
        end else begin
            inA_15_Addr_B_orig = 'bx;
        end
    end else begin
        inA_15_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_15_EN_A = 1'b1;
    end else begin
        inA_15_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_15_EN_B = 1'b1;
    end else begin
        inA_15_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_16_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_16_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_16_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_16_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_16_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_16_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_16_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_16_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_16_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_16_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_16_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_16_Addr_A_orig = 64'd23;
        end else begin
            inA_16_Addr_A_orig = 'bx;
        end
    end else begin
        inA_16_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_16_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_16_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_16_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_16_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_16_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_16_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_16_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_16_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_16_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_16_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_16_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_16_Addr_B_orig = 64'd9;
        end else begin
            inA_16_Addr_B_orig = 'bx;
        end
    end else begin
        inA_16_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_16_EN_A = 1'b1;
    end else begin
        inA_16_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_16_EN_B = 1'b1;
    end else begin
        inA_16_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_17_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_17_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_17_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_17_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_17_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_17_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_17_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_17_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_17_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_17_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_17_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_17_Addr_A_orig = 64'd23;
        end else begin
            inA_17_Addr_A_orig = 'bx;
        end
    end else begin
        inA_17_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_17_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_17_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_17_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_17_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_17_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_17_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_17_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_17_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_17_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_17_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_17_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_17_Addr_B_orig = 64'd9;
        end else begin
            inA_17_Addr_B_orig = 'bx;
        end
    end else begin
        inA_17_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_17_EN_A = 1'b1;
    end else begin
        inA_17_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_17_EN_B = 1'b1;
    end else begin
        inA_17_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_18_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_18_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_18_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_18_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_18_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_18_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_18_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_18_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_18_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_18_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_18_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_18_Addr_A_orig = 64'd23;
        end else begin
            inA_18_Addr_A_orig = 'bx;
        end
    end else begin
        inA_18_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_18_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_18_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_18_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_18_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_18_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_18_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_18_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_18_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_18_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_18_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_18_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_18_Addr_B_orig = 64'd9;
        end else begin
            inA_18_Addr_B_orig = 'bx;
        end
    end else begin
        inA_18_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_18_EN_A = 1'b1;
    end else begin
        inA_18_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_18_EN_B = 1'b1;
    end else begin
        inA_18_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_19_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_19_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_19_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_19_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_19_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_19_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_19_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_19_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_19_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_19_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_19_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_19_Addr_A_orig = 64'd23;
        end else begin
            inA_19_Addr_A_orig = 'bx;
        end
    end else begin
        inA_19_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_19_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_19_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_19_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_19_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_19_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_19_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_19_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_19_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_19_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_19_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_19_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_19_Addr_B_orig = 64'd9;
        end else begin
            inA_19_Addr_B_orig = 'bx;
        end
    end else begin
        inA_19_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_19_EN_A = 1'b1;
    end else begin
        inA_19_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_19_EN_B = 1'b1;
    end else begin
        inA_19_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_1_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_1_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_1_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_1_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_1_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_1_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_1_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_1_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_1_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_1_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_1_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_1_Addr_A_orig = 64'd23;
        end else begin
            inA_1_Addr_A_orig = 'bx;
        end
    end else begin
        inA_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_1_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_1_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_1_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_1_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_1_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_1_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_1_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_1_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_1_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_1_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_1_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_1_Addr_B_orig = 64'd9;
        end else begin
            inA_1_Addr_B_orig = 'bx;
        end
    end else begin
        inA_1_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_1_EN_A = 1'b1;
    end else begin
        inA_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_1_EN_B = 1'b1;
    end else begin
        inA_1_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_2_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_2_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_2_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_2_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_2_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_2_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_2_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_2_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_2_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_2_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_2_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_2_Addr_A_orig = 64'd23;
        end else begin
            inA_2_Addr_A_orig = 'bx;
        end
    end else begin
        inA_2_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_2_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_2_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_2_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_2_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_2_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_2_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_2_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_2_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_2_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_2_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_2_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_2_Addr_B_orig = 64'd9;
        end else begin
            inA_2_Addr_B_orig = 'bx;
        end
    end else begin
        inA_2_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_2_EN_A = 1'b1;
    end else begin
        inA_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_2_EN_B = 1'b1;
    end else begin
        inA_2_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_3_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_3_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_3_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_3_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_3_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_3_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_3_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_3_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_3_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_3_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_3_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_3_Addr_A_orig = 64'd23;
        end else begin
            inA_3_Addr_A_orig = 'bx;
        end
    end else begin
        inA_3_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_3_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_3_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_3_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_3_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_3_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_3_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_3_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_3_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_3_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_3_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_3_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_3_Addr_B_orig = 64'd9;
        end else begin
            inA_3_Addr_B_orig = 'bx;
        end
    end else begin
        inA_3_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_3_EN_A = 1'b1;
    end else begin
        inA_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_3_EN_B = 1'b1;
    end else begin
        inA_3_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_4_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_4_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_4_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_4_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_4_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_4_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_4_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_4_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_4_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_4_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_4_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_4_Addr_A_orig = 64'd23;
        end else begin
            inA_4_Addr_A_orig = 'bx;
        end
    end else begin
        inA_4_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_4_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_4_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_4_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_4_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_4_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_4_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_4_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_4_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_4_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_4_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_4_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_4_Addr_B_orig = 64'd9;
        end else begin
            inA_4_Addr_B_orig = 'bx;
        end
    end else begin
        inA_4_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_4_EN_A = 1'b1;
    end else begin
        inA_4_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_4_EN_B = 1'b1;
    end else begin
        inA_4_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_5_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_5_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_5_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_5_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_5_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_5_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_5_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_5_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_5_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_5_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_5_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_5_Addr_A_orig = 64'd23;
        end else begin
            inA_5_Addr_A_orig = 'bx;
        end
    end else begin
        inA_5_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_5_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_5_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_5_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_5_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_5_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_5_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_5_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_5_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_5_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_5_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_5_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_5_Addr_B_orig = 64'd9;
        end else begin
            inA_5_Addr_B_orig = 'bx;
        end
    end else begin
        inA_5_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_5_EN_A = 1'b1;
    end else begin
        inA_5_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_5_EN_B = 1'b1;
    end else begin
        inA_5_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_6_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_6_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_6_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_6_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_6_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_6_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_6_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_6_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_6_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_6_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_6_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_6_Addr_A_orig = 64'd23;
        end else begin
            inA_6_Addr_A_orig = 'bx;
        end
    end else begin
        inA_6_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_6_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_6_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_6_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_6_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_6_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_6_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_6_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_6_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_6_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_6_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_6_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_6_Addr_B_orig = 64'd9;
        end else begin
            inA_6_Addr_B_orig = 'bx;
        end
    end else begin
        inA_6_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_6_EN_A = 1'b1;
    end else begin
        inA_6_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_6_EN_B = 1'b1;
    end else begin
        inA_6_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_7_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_7_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_7_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_7_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_7_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_7_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_7_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_7_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_7_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_7_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_7_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_7_Addr_A_orig = 64'd23;
        end else begin
            inA_7_Addr_A_orig = 'bx;
        end
    end else begin
        inA_7_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_7_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_7_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_7_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_7_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_7_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_7_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_7_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_7_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_7_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_7_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_7_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_7_Addr_B_orig = 64'd9;
        end else begin
            inA_7_Addr_B_orig = 'bx;
        end
    end else begin
        inA_7_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_7_EN_A = 1'b1;
    end else begin
        inA_7_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_7_EN_B = 1'b1;
    end else begin
        inA_7_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_8_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_8_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_8_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_8_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_8_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_8_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_8_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_8_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_8_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_8_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_8_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_8_Addr_A_orig = 64'd23;
        end else begin
            inA_8_Addr_A_orig = 'bx;
        end
    end else begin
        inA_8_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_8_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_8_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_8_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_8_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_8_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_8_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_8_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_8_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_8_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_8_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_8_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_8_Addr_B_orig = 64'd9;
        end else begin
            inA_8_Addr_B_orig = 'bx;
        end
    end else begin
        inA_8_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_8_EN_A = 1'b1;
    end else begin
        inA_8_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_8_EN_B = 1'b1;
    end else begin
        inA_8_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_9_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_9_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_9_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_9_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_9_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_9_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_9_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_9_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_9_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_9_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_9_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_9_Addr_A_orig = 64'd23;
        end else begin
            inA_9_Addr_A_orig = 'bx;
        end
    end else begin
        inA_9_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inA_9_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inA_9_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inA_9_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inA_9_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inA_9_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inA_9_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inA_9_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inA_9_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inA_9_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inA_9_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inA_9_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inA_9_Addr_B_orig = 64'd9;
        end else begin
            inA_9_Addr_B_orig = 'bx;
        end
    end else begin
        inA_9_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_9_EN_A = 1'b1;
    end else begin
        inA_9_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inA_9_EN_B = 1'b1;
    end else begin
        inA_9_EN_B = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_0_EN_A = 1'b1;
    end else begin
        inB_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_10_EN_A = 1'b1;
    end else begin
        inB_10_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_11_EN_A = 1'b1;
    end else begin
        inB_11_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_12_EN_A = 1'b1;
    end else begin
        inB_12_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_13_EN_A = 1'b1;
    end else begin
        inB_13_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_14_EN_A = 1'b1;
    end else begin
        inB_14_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_15_EN_A = 1'b1;
    end else begin
        inB_15_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_16_EN_A = 1'b1;
    end else begin
        inB_16_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_17_EN_A = 1'b1;
    end else begin
        inB_17_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_18_EN_A = 1'b1;
    end else begin
        inB_18_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_19_EN_A = 1'b1;
    end else begin
        inB_19_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_1_EN_A = 1'b1;
    end else begin
        inB_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_20_EN_A = 1'b1;
    end else begin
        inB_20_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_21_EN_A = 1'b1;
    end else begin
        inB_21_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_22_EN_A = 1'b1;
    end else begin
        inB_22_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_23_EN_A = 1'b1;
    end else begin
        inB_23_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_2_EN_A = 1'b1;
    end else begin
        inB_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_3_EN_A = 1'b1;
    end else begin
        inB_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_4_EN_A = 1'b1;
    end else begin
        inB_4_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_5_EN_A = 1'b1;
    end else begin
        inB_5_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_6_EN_A = 1'b1;
    end else begin
        inB_6_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_7_EN_A = 1'b1;
    end else begin
        inB_7_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_8_EN_A = 1'b1;
    end else begin
        inB_8_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inB_9_EN_A = 1'b1;
    end else begin
        inB_9_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_0_EN_A = 1'b1;
    end else begin
        out_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd0))) begin
        out_0_WEN_A = 4'd7;
    end else begin
        out_0_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_10_EN_A = 1'b1;
    end else begin
        out_10_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd10))) begin
        out_10_WEN_A = 4'd7;
    end else begin
        out_10_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_11_EN_A = 1'b1;
    end else begin
        out_11_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd11))) begin
        out_11_WEN_A = 4'd7;
    end else begin
        out_11_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_12_EN_A = 1'b1;
    end else begin
        out_12_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd12))) begin
        out_12_WEN_A = 4'd7;
    end else begin
        out_12_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_13_EN_A = 1'b1;
    end else begin
        out_13_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd13))) begin
        out_13_WEN_A = 4'd7;
    end else begin
        out_13_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_14_EN_A = 1'b1;
    end else begin
        out_14_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd14))) begin
        out_14_WEN_A = 4'd7;
    end else begin
        out_14_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_15_EN_A = 1'b1;
    end else begin
        out_15_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd15))) begin
        out_15_WEN_A = 4'd7;
    end else begin
        out_15_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_16_EN_A = 1'b1;
    end else begin
        out_16_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd16))) begin
        out_16_WEN_A = 4'd7;
    end else begin
        out_16_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_17_EN_A = 1'b1;
    end else begin
        out_17_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd17))) begin
        out_17_WEN_A = 4'd7;
    end else begin
        out_17_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_18_EN_A = 1'b1;
    end else begin
        out_18_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd18))) begin
        out_18_WEN_A = 4'd7;
    end else begin
        out_18_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_19_EN_A = 1'b1;
    end else begin
        out_19_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd19) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd20) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd21) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd22) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd23) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd24) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd25) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd26) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd27) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd28) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd29) | ((select_ln1057_reg_9495_pp0_iter1_reg == 5'd30) | (select_ln1057_reg_9495_pp0_iter1_reg == 5'd31))))))))))))))) begin
        out_19_WEN_A = 4'd7;
    end else begin
        out_19_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_1_EN_A = 1'b1;
    end else begin
        out_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd1))) begin
        out_1_WEN_A = 4'd7;
    end else begin
        out_1_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_2_EN_A = 1'b1;
    end else begin
        out_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd2))) begin
        out_2_WEN_A = 4'd7;
    end else begin
        out_2_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_3_EN_A = 1'b1;
    end else begin
        out_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd3))) begin
        out_3_WEN_A = 4'd7;
    end else begin
        out_3_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_4_EN_A = 1'b1;
    end else begin
        out_4_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd4))) begin
        out_4_WEN_A = 4'd7;
    end else begin
        out_4_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_5_EN_A = 1'b1;
    end else begin
        out_5_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd5))) begin
        out_5_WEN_A = 4'd7;
    end else begin
        out_5_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_6_EN_A = 1'b1;
    end else begin
        out_6_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd6))) begin
        out_6_WEN_A = 4'd7;
    end else begin
        out_6_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_7_EN_A = 1'b1;
    end else begin
        out_7_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd7))) begin
        out_7_WEN_A = 4'd7;
    end else begin
        out_7_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_8_EN_A = 1'b1;
    end else begin
        out_8_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd8))) begin
        out_8_WEN_A = 4'd7;
    end else begin
        out_8_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_9_EN_A = 1'b1;
    end else begin
        out_9_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_9495_pp0_iter1_reg == 5'd9))) begin
        out_9_WEN_A = 4'd7;
    end else begin
        out_9_WEN_A = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1057_fu_6456_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln870_10_fu_6873_p2 = (add_ln870_9_fu_6869_p2 + mul_ln870_14_reg_9954);

assign add_ln870_11_fu_6878_p2 = (add_ln870_10_fu_6873_p2 + add_ln870_8_fu_6865_p2);

assign add_ln870_12_fu_6943_p2 = (add_ln870_11_reg_9984 + add_ln870_6_fu_6938_p2);

assign add_ln870_13_fu_6705_p2 = (mul_ln870_1_reg_9869 + mul_ln870_2_reg_9884);

assign add_ln870_14_fu_6709_p2 = (add_ln870_13_fu_6705_p2 + mul_ln870_reg_9864);

assign add_ln870_15_fu_6732_p2 = (mul_ln870_3_reg_9889 + mul_ln870_5_reg_9899);

assign add_ln870_16_fu_6736_p2 = (add_ln870_15_fu_6732_p2 + mul_ln870_4_reg_9894);

assign add_ln870_17_fu_6787_p2 = (add_ln870_16_reg_9919 + add_ln870_14_reg_9904);

assign add_ln870_18_fu_6759_p2 = (mul_ln870_6_reg_9909 + mul_ln870_8_fu_6745_p2);

assign add_ln870_19_fu_6791_p2 = (add_ln870_18_reg_9929 + mul_ln870_7_reg_9914);

assign add_ln870_1_fu_6626_p2 = (select_ln18_reg_9490 + 4'd1);

assign add_ln870_21_fu_6764_p2 = ($signed(add_ln870_20_reg_9924) + $signed(mul_ln870_10_fu_6754_p2));

assign add_ln870_22_fu_6795_p2 = (add_ln870_21_reg_9934 + add_ln870_19_fu_6791_p2);

assign add_ln870_23_fu_6800_p2 = (add_ln870_22_fu_6795_p2 + add_ln870_17_fu_6787_p2);

assign add_ln870_24_fu_6948_p2 = (add_ln870_23_reg_9949 + add_ln870_12_fu_6943_p2);

assign add_ln870_2_fu_6920_p2 = (mul_ln870_22_fu_6915_p2 + mul_ln870_20_reg_9994);

assign add_ln870_3_fu_6934_p2 = (add_ln870_2_reg_10004 + mul_ln870_21_reg_9999);

assign add_ln870_4_fu_6925_p2 = (mul_ln870_19_reg_9989 + mul_ln870_18_reg_9979);

assign add_ln870_5_fu_6929_p2 = (add_ln870_4_fu_6925_p2 + mul_ln870_17_reg_9974);

assign add_ln870_6_fu_6938_p2 = (add_ln870_5_reg_10009 + add_ln870_3_fu_6934_p2);

assign add_ln870_7_fu_6824_p2 = (mul_ln870_13_fu_6810_p2 + mul_ln870_12_reg_9944);

assign add_ln870_8_fu_6865_p2 = (add_ln870_7_reg_9959 + mul_ln870_11_reg_9939);

assign add_ln870_9_fu_6869_p2 = (mul_ln870_16_reg_9969 + mul_ln870_15_reg_9964);

assign add_ln870_fu_6482_p2 = (ap_sig_allocacmp_i_V_load + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1940 = ((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_2766 = ((icmp_ln1057_reg_9481 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_3492 = (~(select_ln1057_reg_9495 == 5'd0) & ~(select_ln1057_reg_9495 == 5'd1) & ~(select_ln1057_reg_9495 == 5'd2) & ~(select_ln1057_reg_9495 == 5'd3) & ~(select_ln1057_reg_9495 == 5'd4) & ~(select_ln1057_reg_9495 == 5'd5) & ~(select_ln1057_reg_9495 == 5'd6) & ~(select_ln1057_reg_9495 == 5'd7) & ~(select_ln1057_reg_9495 == 5'd8) & ~(select_ln1057_reg_9495 == 5'd9) & ~(select_ln1057_reg_9495 == 5'd10) & ~(select_ln1057_reg_9495 == 5'd11) & ~(select_ln1057_reg_9495 == 5'd12) & ~(select_ln1057_reg_9495 == 5'd13) & ~(select_ln1057_reg_9495 == 5'd14) & ~(select_ln1057_reg_9495 == 5'd15) & ~(select_ln1057_reg_9495 == 5'd16) & ~(select_ln1057_reg_9495 == 5'd17) & ~(select_ln1057_reg_9495 == 5'd18));
end

always @ (*) begin
    ap_condition_3501 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_reg_4957 = 'bx;

assign ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302 = 'bx;

assign ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_7053_p0 = inB_23_load_reg_9644[9:0];

assign grp_fu_7053_p1 = ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087[9:0];

assign icmp_ln1057_1_fu_6468_p2 = ((ap_sig_allocacmp_j_V_load == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_6450_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd200) ? 1'b1 : 1'b0);

assign inA_0_Addr_A = inA_0_Addr_A_orig << 32'd2;

assign inA_0_Addr_B = inA_0_Addr_B_orig << 32'd2;

assign inA_0_Clk_A = ap_clk;

assign inA_0_Clk_B = ap_clk;

assign inA_0_Din_A = 32'd0;

assign inA_0_Din_B = 32'd0;

assign inA_0_Rst_A = ap_rst_n_inv;

assign inA_0_Rst_B = ap_rst_n_inv;

assign inA_0_WEN_A = 4'd0;

assign inA_0_WEN_B = 4'd0;

assign inA_10_Addr_A = inA_10_Addr_A_orig << 32'd2;

assign inA_10_Addr_B = inA_10_Addr_B_orig << 32'd2;

assign inA_10_Clk_A = ap_clk;

assign inA_10_Clk_B = ap_clk;

assign inA_10_Din_A = 32'd0;

assign inA_10_Din_B = 32'd0;

assign inA_10_Rst_A = ap_rst_n_inv;

assign inA_10_Rst_B = ap_rst_n_inv;

assign inA_10_WEN_A = 4'd0;

assign inA_10_WEN_B = 4'd0;

assign inA_11_Addr_A = inA_11_Addr_A_orig << 32'd2;

assign inA_11_Addr_B = inA_11_Addr_B_orig << 32'd2;

assign inA_11_Clk_A = ap_clk;

assign inA_11_Clk_B = ap_clk;

assign inA_11_Din_A = 32'd0;

assign inA_11_Din_B = 32'd0;

assign inA_11_Rst_A = ap_rst_n_inv;

assign inA_11_Rst_B = ap_rst_n_inv;

assign inA_11_WEN_A = 4'd0;

assign inA_11_WEN_B = 4'd0;

assign inA_12_Addr_A = inA_12_Addr_A_orig << 32'd2;

assign inA_12_Addr_B = inA_12_Addr_B_orig << 32'd2;

assign inA_12_Clk_A = ap_clk;

assign inA_12_Clk_B = ap_clk;

assign inA_12_Din_A = 32'd0;

assign inA_12_Din_B = 32'd0;

assign inA_12_Rst_A = ap_rst_n_inv;

assign inA_12_Rst_B = ap_rst_n_inv;

assign inA_12_WEN_A = 4'd0;

assign inA_12_WEN_B = 4'd0;

assign inA_13_Addr_A = inA_13_Addr_A_orig << 32'd2;

assign inA_13_Addr_B = inA_13_Addr_B_orig << 32'd2;

assign inA_13_Clk_A = ap_clk;

assign inA_13_Clk_B = ap_clk;

assign inA_13_Din_A = 32'd0;

assign inA_13_Din_B = 32'd0;

assign inA_13_Rst_A = ap_rst_n_inv;

assign inA_13_Rst_B = ap_rst_n_inv;

assign inA_13_WEN_A = 4'd0;

assign inA_13_WEN_B = 4'd0;

assign inA_14_Addr_A = inA_14_Addr_A_orig << 32'd2;

assign inA_14_Addr_B = inA_14_Addr_B_orig << 32'd2;

assign inA_14_Clk_A = ap_clk;

assign inA_14_Clk_B = ap_clk;

assign inA_14_Din_A = 32'd0;

assign inA_14_Din_B = 32'd0;

assign inA_14_Rst_A = ap_rst_n_inv;

assign inA_14_Rst_B = ap_rst_n_inv;

assign inA_14_WEN_A = 4'd0;

assign inA_14_WEN_B = 4'd0;

assign inA_15_Addr_A = inA_15_Addr_A_orig << 32'd2;

assign inA_15_Addr_B = inA_15_Addr_B_orig << 32'd2;

assign inA_15_Clk_A = ap_clk;

assign inA_15_Clk_B = ap_clk;

assign inA_15_Din_A = 32'd0;

assign inA_15_Din_B = 32'd0;

assign inA_15_Rst_A = ap_rst_n_inv;

assign inA_15_Rst_B = ap_rst_n_inv;

assign inA_15_WEN_A = 4'd0;

assign inA_15_WEN_B = 4'd0;

assign inA_16_Addr_A = inA_16_Addr_A_orig << 32'd2;

assign inA_16_Addr_B = inA_16_Addr_B_orig << 32'd2;

assign inA_16_Clk_A = ap_clk;

assign inA_16_Clk_B = ap_clk;

assign inA_16_Din_A = 32'd0;

assign inA_16_Din_B = 32'd0;

assign inA_16_Rst_A = ap_rst_n_inv;

assign inA_16_Rst_B = ap_rst_n_inv;

assign inA_16_WEN_A = 4'd0;

assign inA_16_WEN_B = 4'd0;

assign inA_17_Addr_A = inA_17_Addr_A_orig << 32'd2;

assign inA_17_Addr_B = inA_17_Addr_B_orig << 32'd2;

assign inA_17_Clk_A = ap_clk;

assign inA_17_Clk_B = ap_clk;

assign inA_17_Din_A = 32'd0;

assign inA_17_Din_B = 32'd0;

assign inA_17_Rst_A = ap_rst_n_inv;

assign inA_17_Rst_B = ap_rst_n_inv;

assign inA_17_WEN_A = 4'd0;

assign inA_17_WEN_B = 4'd0;

assign inA_18_Addr_A = inA_18_Addr_A_orig << 32'd2;

assign inA_18_Addr_B = inA_18_Addr_B_orig << 32'd2;

assign inA_18_Clk_A = ap_clk;

assign inA_18_Clk_B = ap_clk;

assign inA_18_Din_A = 32'd0;

assign inA_18_Din_B = 32'd0;

assign inA_18_Rst_A = ap_rst_n_inv;

assign inA_18_Rst_B = ap_rst_n_inv;

assign inA_18_WEN_A = 4'd0;

assign inA_18_WEN_B = 4'd0;

assign inA_19_Addr_A = inA_19_Addr_A_orig << 32'd2;

assign inA_19_Addr_B = inA_19_Addr_B_orig << 32'd2;

assign inA_19_Clk_A = ap_clk;

assign inA_19_Clk_B = ap_clk;

assign inA_19_Din_A = 32'd0;

assign inA_19_Din_B = 32'd0;

assign inA_19_Rst_A = ap_rst_n_inv;

assign inA_19_Rst_B = ap_rst_n_inv;

assign inA_19_WEN_A = 4'd0;

assign inA_19_WEN_B = 4'd0;

assign inA_1_Addr_A = inA_1_Addr_A_orig << 32'd2;

assign inA_1_Addr_B = inA_1_Addr_B_orig << 32'd2;

assign inA_1_Clk_A = ap_clk;

assign inA_1_Clk_B = ap_clk;

assign inA_1_Din_A = 32'd0;

assign inA_1_Din_B = 32'd0;

assign inA_1_Rst_A = ap_rst_n_inv;

assign inA_1_Rst_B = ap_rst_n_inv;

assign inA_1_WEN_A = 4'd0;

assign inA_1_WEN_B = 4'd0;

assign inA_2_Addr_A = inA_2_Addr_A_orig << 32'd2;

assign inA_2_Addr_B = inA_2_Addr_B_orig << 32'd2;

assign inA_2_Clk_A = ap_clk;

assign inA_2_Clk_B = ap_clk;

assign inA_2_Din_A = 32'd0;

assign inA_2_Din_B = 32'd0;

assign inA_2_Rst_A = ap_rst_n_inv;

assign inA_2_Rst_B = ap_rst_n_inv;

assign inA_2_WEN_A = 4'd0;

assign inA_2_WEN_B = 4'd0;

assign inA_3_Addr_A = inA_3_Addr_A_orig << 32'd2;

assign inA_3_Addr_B = inA_3_Addr_B_orig << 32'd2;

assign inA_3_Clk_A = ap_clk;

assign inA_3_Clk_B = ap_clk;

assign inA_3_Din_A = 32'd0;

assign inA_3_Din_B = 32'd0;

assign inA_3_Rst_A = ap_rst_n_inv;

assign inA_3_Rst_B = ap_rst_n_inv;

assign inA_3_WEN_A = 4'd0;

assign inA_3_WEN_B = 4'd0;

assign inA_4_Addr_A = inA_4_Addr_A_orig << 32'd2;

assign inA_4_Addr_B = inA_4_Addr_B_orig << 32'd2;

assign inA_4_Clk_A = ap_clk;

assign inA_4_Clk_B = ap_clk;

assign inA_4_Din_A = 32'd0;

assign inA_4_Din_B = 32'd0;

assign inA_4_Rst_A = ap_rst_n_inv;

assign inA_4_Rst_B = ap_rst_n_inv;

assign inA_4_WEN_A = 4'd0;

assign inA_4_WEN_B = 4'd0;

assign inA_5_Addr_A = inA_5_Addr_A_orig << 32'd2;

assign inA_5_Addr_B = inA_5_Addr_B_orig << 32'd2;

assign inA_5_Clk_A = ap_clk;

assign inA_5_Clk_B = ap_clk;

assign inA_5_Din_A = 32'd0;

assign inA_5_Din_B = 32'd0;

assign inA_5_Rst_A = ap_rst_n_inv;

assign inA_5_Rst_B = ap_rst_n_inv;

assign inA_5_WEN_A = 4'd0;

assign inA_5_WEN_B = 4'd0;

assign inA_6_Addr_A = inA_6_Addr_A_orig << 32'd2;

assign inA_6_Addr_B = inA_6_Addr_B_orig << 32'd2;

assign inA_6_Clk_A = ap_clk;

assign inA_6_Clk_B = ap_clk;

assign inA_6_Din_A = 32'd0;

assign inA_6_Din_B = 32'd0;

assign inA_6_Rst_A = ap_rst_n_inv;

assign inA_6_Rst_B = ap_rst_n_inv;

assign inA_6_WEN_A = 4'd0;

assign inA_6_WEN_B = 4'd0;

assign inA_7_Addr_A = inA_7_Addr_A_orig << 32'd2;

assign inA_7_Addr_B = inA_7_Addr_B_orig << 32'd2;

assign inA_7_Clk_A = ap_clk;

assign inA_7_Clk_B = ap_clk;

assign inA_7_Din_A = 32'd0;

assign inA_7_Din_B = 32'd0;

assign inA_7_Rst_A = ap_rst_n_inv;

assign inA_7_Rst_B = ap_rst_n_inv;

assign inA_7_WEN_A = 4'd0;

assign inA_7_WEN_B = 4'd0;

assign inA_8_Addr_A = inA_8_Addr_A_orig << 32'd2;

assign inA_8_Addr_B = inA_8_Addr_B_orig << 32'd2;

assign inA_8_Clk_A = ap_clk;

assign inA_8_Clk_B = ap_clk;

assign inA_8_Din_A = 32'd0;

assign inA_8_Din_B = 32'd0;

assign inA_8_Rst_A = ap_rst_n_inv;

assign inA_8_Rst_B = ap_rst_n_inv;

assign inA_8_WEN_A = 4'd0;

assign inA_8_WEN_B = 4'd0;

assign inA_9_Addr_A = inA_9_Addr_A_orig << 32'd2;

assign inA_9_Addr_B = inA_9_Addr_B_orig << 32'd2;

assign inA_9_Clk_A = ap_clk;

assign inA_9_Clk_B = ap_clk;

assign inA_9_Din_A = 32'd0;

assign inA_9_Din_B = 32'd0;

assign inA_9_Rst_A = ap_rst_n_inv;

assign inA_9_Rst_B = ap_rst_n_inv;

assign inA_9_WEN_A = 4'd0;

assign inA_9_WEN_B = 4'd0;

assign inB_0_Addr_A = inB_0_Addr_A_orig << 32'd2;

assign inB_0_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_0_Clk_A = ap_clk;

assign inB_0_Din_A = 32'd0;

assign inB_0_Rst_A = ap_rst_n_inv;

assign inB_0_WEN_A = 4'd0;

assign inB_10_Addr_A = inB_10_Addr_A_orig << 32'd2;

assign inB_10_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_10_Clk_A = ap_clk;

assign inB_10_Din_A = 32'd0;

assign inB_10_Rst_A = ap_rst_n_inv;

assign inB_10_WEN_A = 4'd0;

assign inB_11_Addr_A = inB_11_Addr_A_orig << 32'd2;

assign inB_11_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_11_Clk_A = ap_clk;

assign inB_11_Din_A = 32'd0;

assign inB_11_Rst_A = ap_rst_n_inv;

assign inB_11_WEN_A = 4'd0;

assign inB_12_Addr_A = inB_12_Addr_A_orig << 32'd2;

assign inB_12_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_12_Clk_A = ap_clk;

assign inB_12_Din_A = 32'd0;

assign inB_12_Rst_A = ap_rst_n_inv;

assign inB_12_WEN_A = 4'd0;

assign inB_13_Addr_A = inB_13_Addr_A_orig << 32'd2;

assign inB_13_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_13_Clk_A = ap_clk;

assign inB_13_Din_A = 32'd0;

assign inB_13_Rst_A = ap_rst_n_inv;

assign inB_13_WEN_A = 4'd0;

assign inB_14_Addr_A = inB_14_Addr_A_orig << 32'd2;

assign inB_14_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_14_Clk_A = ap_clk;

assign inB_14_Din_A = 32'd0;

assign inB_14_Rst_A = ap_rst_n_inv;

assign inB_14_WEN_A = 4'd0;

assign inB_15_Addr_A = inB_15_Addr_A_orig << 32'd2;

assign inB_15_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_15_Clk_A = ap_clk;

assign inB_15_Din_A = 32'd0;

assign inB_15_Rst_A = ap_rst_n_inv;

assign inB_15_WEN_A = 4'd0;

assign inB_16_Addr_A = inB_16_Addr_A_orig << 32'd2;

assign inB_16_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_16_Clk_A = ap_clk;

assign inB_16_Din_A = 32'd0;

assign inB_16_Rst_A = ap_rst_n_inv;

assign inB_16_WEN_A = 4'd0;

assign inB_17_Addr_A = inB_17_Addr_A_orig << 32'd2;

assign inB_17_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_17_Clk_A = ap_clk;

assign inB_17_Din_A = 32'd0;

assign inB_17_Rst_A = ap_rst_n_inv;

assign inB_17_WEN_A = 4'd0;

assign inB_18_Addr_A = inB_18_Addr_A_orig << 32'd2;

assign inB_18_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_18_Clk_A = ap_clk;

assign inB_18_Din_A = 32'd0;

assign inB_18_Rst_A = ap_rst_n_inv;

assign inB_18_WEN_A = 4'd0;

assign inB_19_Addr_A = inB_19_Addr_A_orig << 32'd2;

assign inB_19_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_19_Clk_A = ap_clk;

assign inB_19_Din_A = 32'd0;

assign inB_19_Rst_A = ap_rst_n_inv;

assign inB_19_WEN_A = 4'd0;

assign inB_1_Addr_A = inB_1_Addr_A_orig << 32'd2;

assign inB_1_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_1_Clk_A = ap_clk;

assign inB_1_Din_A = 32'd0;

assign inB_1_Rst_A = ap_rst_n_inv;

assign inB_1_WEN_A = 4'd0;

assign inB_20_Addr_A = inB_20_Addr_A_orig << 32'd2;

assign inB_20_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_20_Clk_A = ap_clk;

assign inB_20_Din_A = 32'd0;

assign inB_20_Rst_A = ap_rst_n_inv;

assign inB_20_WEN_A = 4'd0;

assign inB_21_Addr_A = inB_21_Addr_A_orig << 32'd2;

assign inB_21_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_21_Clk_A = ap_clk;

assign inB_21_Din_A = 32'd0;

assign inB_21_Rst_A = ap_rst_n_inv;

assign inB_21_WEN_A = 4'd0;

assign inB_22_Addr_A = inB_22_Addr_A_orig << 32'd2;

assign inB_22_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_22_Clk_A = ap_clk;

assign inB_22_Din_A = 32'd0;

assign inB_22_Rst_A = ap_rst_n_inv;

assign inB_22_WEN_A = 4'd0;

assign inB_23_Addr_A = inB_23_Addr_A_orig << 32'd2;

assign inB_23_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_23_Clk_A = ap_clk;

assign inB_23_Din_A = 32'd0;

assign inB_23_Rst_A = ap_rst_n_inv;

assign inB_23_WEN_A = 4'd0;

assign inB_2_Addr_A = inB_2_Addr_A_orig << 32'd2;

assign inB_2_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_2_Clk_A = ap_clk;

assign inB_2_Din_A = 32'd0;

assign inB_2_Rst_A = ap_rst_n_inv;

assign inB_2_WEN_A = 4'd0;

assign inB_3_Addr_A = inB_3_Addr_A_orig << 32'd2;

assign inB_3_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_3_Clk_A = ap_clk;

assign inB_3_Din_A = 32'd0;

assign inB_3_Rst_A = ap_rst_n_inv;

assign inB_3_WEN_A = 4'd0;

assign inB_4_Addr_A = inB_4_Addr_A_orig << 32'd2;

assign inB_4_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_4_Clk_A = ap_clk;

assign inB_4_Din_A = 32'd0;

assign inB_4_Rst_A = ap_rst_n_inv;

assign inB_4_WEN_A = 4'd0;

assign inB_5_Addr_A = inB_5_Addr_A_orig << 32'd2;

assign inB_5_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_5_Clk_A = ap_clk;

assign inB_5_Din_A = 32'd0;

assign inB_5_Rst_A = ap_rst_n_inv;

assign inB_5_WEN_A = 4'd0;

assign inB_6_Addr_A = inB_6_Addr_A_orig << 32'd2;

assign inB_6_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_6_Clk_A = ap_clk;

assign inB_6_Din_A = 32'd0;

assign inB_6_Rst_A = ap_rst_n_inv;

assign inB_6_WEN_A = 4'd0;

assign inB_7_Addr_A = inB_7_Addr_A_orig << 32'd2;

assign inB_7_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_7_Clk_A = ap_clk;

assign inB_7_Din_A = 32'd0;

assign inB_7_Rst_A = ap_rst_n_inv;

assign inB_7_WEN_A = 4'd0;

assign inB_8_Addr_A = inB_8_Addr_A_orig << 32'd2;

assign inB_8_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_8_Clk_A = ap_clk;

assign inB_8_Din_A = 32'd0;

assign inB_8_Rst_A = ap_rst_n_inv;

assign inB_8_WEN_A = 4'd0;

assign inB_9_Addr_A = inB_9_Addr_A_orig << 32'd2;

assign inB_9_Addr_A_orig = j_V_cast_fu_6496_p1;

assign inB_9_Clk_A = ap_clk;

assign inB_9_Din_A = 32'd0;

assign inB_9_Rst_A = ap_rst_n_inv;

assign inB_9_WEN_A = 4'd0;

assign j_V_cast_fu_6496_p1 = select_ln18_fu_6474_p3;

assign mul_ln870_10_fu_6754_p1 = ap_phi_mux_phi_ln870_10_phi_fu_5590_p40[9:0];

assign mul_ln870_11_fu_6773_p1 = ap_phi_mux_phi_ln870_11_phi_fu_5655_p40[9:0];

assign mul_ln870_12_fu_6782_p1 = ap_phi_mux_phi_ln870_12_phi_fu_5720_p40[9:0];

assign mul_ln870_13_fu_6810_p1 = ap_phi_mux_phi_ln870_13_phi_fu_5785_p40[9:0];

assign mul_ln870_14_fu_6819_p1 = ap_phi_mux_phi_ln870_14_phi_fu_5850_p40[9:0];

assign mul_ln870_15_fu_6833_p1 = ap_phi_mux_phi_ln870_15_phi_fu_5915_p40[9:0];

assign mul_ln870_16_fu_6842_p1 = ap_phi_mux_phi_ln870_16_phi_fu_5980_p40[9:0];

assign mul_ln870_17_fu_6851_p1 = ap_phi_mux_phi_ln870_17_phi_fu_6045_p40[9:0];

assign mul_ln870_18_fu_6860_p1 = ap_phi_mux_phi_ln870_18_phi_fu_6110_p40[9:0];

assign mul_ln870_19_fu_6888_p1 = ap_phi_mux_phi_ln870_19_phi_fu_6175_p40[9:0];

assign mul_ln870_1_fu_6657_p1 = ap_phi_mux_phi_ln870_1_phi_fu_5025_p40[9:0];

assign mul_ln870_20_fu_6897_p1 = ap_phi_mux_phi_ln870_20_phi_fu_6240_p40[9:0];

assign mul_ln870_21_fu_6906_p1 = ap_phi_mux_phi_ln870_21_phi_fu_6305_p40[9:0];

assign mul_ln870_22_fu_6915_p1 = ap_phi_mux_phi_ln870_22_phi_fu_6370_p40[9:0];

assign mul_ln870_2_fu_6673_p1 = ap_phi_mux_phi_ln870_2_phi_fu_5135_p40[9:0];

assign mul_ln870_3_fu_6682_p1 = ap_phi_mux_phi_ln870_3_phi_fu_5200_p40[9:0];

assign mul_ln870_4_fu_6691_p1 = ap_phi_mux_phi_ln870_4_phi_fu_5265_p40[9:0];

assign mul_ln870_5_fu_6700_p1 = ap_phi_mux_phi_ln870_5_phi_fu_5330_p40[9:0];

assign mul_ln870_6_fu_6718_p1 = ap_phi_mux_phi_ln870_6_phi_fu_5395_p40[9:0];

assign mul_ln870_7_fu_6727_p1 = ap_phi_mux_phi_ln870_7_phi_fu_5460_p40[9:0];

assign mul_ln870_8_fu_6745_p1 = ap_phi_mux_phi_ln870_8_phi_fu_5525_p40[9:0];

assign mul_ln870_9_fu_6568_p0 = inB_9_Dout_A[9:0];

assign mul_ln870_9_fu_6568_p1 = ap_phi_mux_phi_ln870_9_phi_fu_4895_p40[9:0];

assign mul_ln870_fu_6648_p1 = ap_phi_mux_phi_ln870_phi_fu_4960_p40[9:0];

assign out_0_Addr_A = out_0_Addr_A_orig << 32'd2;

assign out_0_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_0_Clk_A = ap_clk;

assign out_0_Din_A = add_ln870_24_fu_6948_p2;

assign out_0_Rst_A = ap_rst_n_inv;

assign out_10_Addr_A = out_10_Addr_A_orig << 32'd2;

assign out_10_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_10_Clk_A = ap_clk;

assign out_10_Din_A = add_ln870_24_fu_6948_p2;

assign out_10_Rst_A = ap_rst_n_inv;

assign out_11_Addr_A = out_11_Addr_A_orig << 32'd2;

assign out_11_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_11_Clk_A = ap_clk;

assign out_11_Din_A = add_ln870_24_fu_6948_p2;

assign out_11_Rst_A = ap_rst_n_inv;

assign out_12_Addr_A = out_12_Addr_A_orig << 32'd2;

assign out_12_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_12_Clk_A = ap_clk;

assign out_12_Din_A = add_ln870_24_fu_6948_p2;

assign out_12_Rst_A = ap_rst_n_inv;

assign out_13_Addr_A = out_13_Addr_A_orig << 32'd2;

assign out_13_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_13_Clk_A = ap_clk;

assign out_13_Din_A = add_ln870_24_fu_6948_p2;

assign out_13_Rst_A = ap_rst_n_inv;

assign out_14_Addr_A = out_14_Addr_A_orig << 32'd2;

assign out_14_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_14_Clk_A = ap_clk;

assign out_14_Din_A = add_ln870_24_fu_6948_p2;

assign out_14_Rst_A = ap_rst_n_inv;

assign out_15_Addr_A = out_15_Addr_A_orig << 32'd2;

assign out_15_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_15_Clk_A = ap_clk;

assign out_15_Din_A = add_ln870_24_fu_6948_p2;

assign out_15_Rst_A = ap_rst_n_inv;

assign out_16_Addr_A = out_16_Addr_A_orig << 32'd2;

assign out_16_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_16_Clk_A = ap_clk;

assign out_16_Din_A = add_ln870_24_fu_6948_p2;

assign out_16_Rst_A = ap_rst_n_inv;

assign out_17_Addr_A = out_17_Addr_A_orig << 32'd2;

assign out_17_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_17_Clk_A = ap_clk;

assign out_17_Din_A = add_ln870_24_fu_6948_p2;

assign out_17_Rst_A = ap_rst_n_inv;

assign out_18_Addr_A = out_18_Addr_A_orig << 32'd2;

assign out_18_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_18_Clk_A = ap_clk;

assign out_18_Din_A = add_ln870_24_fu_6948_p2;

assign out_18_Rst_A = ap_rst_n_inv;

assign out_19_Addr_A = out_19_Addr_A_orig << 32'd2;

assign out_19_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_19_Clk_A = ap_clk;

assign out_19_Din_A = add_ln870_24_fu_6948_p2;

assign out_19_Rst_A = ap_rst_n_inv;

assign out_1_Addr_A = out_1_Addr_A_orig << 32'd2;

assign out_1_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_1_Clk_A = ap_clk;

assign out_1_Din_A = add_ln870_24_fu_6948_p2;

assign out_1_Rst_A = ap_rst_n_inv;

assign out_2_Addr_A = out_2_Addr_A_orig << 32'd2;

assign out_2_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_2_Clk_A = ap_clk;

assign out_2_Din_A = add_ln870_24_fu_6948_p2;

assign out_2_Rst_A = ap_rst_n_inv;

assign out_3_Addr_A = out_3_Addr_A_orig << 32'd2;

assign out_3_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_3_Clk_A = ap_clk;

assign out_3_Din_A = add_ln870_24_fu_6948_p2;

assign out_3_Rst_A = ap_rst_n_inv;

assign out_4_Addr_A = out_4_Addr_A_orig << 32'd2;

assign out_4_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_4_Clk_A = ap_clk;

assign out_4_Din_A = add_ln870_24_fu_6948_p2;

assign out_4_Rst_A = ap_rst_n_inv;

assign out_5_Addr_A = out_5_Addr_A_orig << 32'd2;

assign out_5_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_5_Clk_A = ap_clk;

assign out_5_Din_A = add_ln870_24_fu_6948_p2;

assign out_5_Rst_A = ap_rst_n_inv;

assign out_6_Addr_A = out_6_Addr_A_orig << 32'd2;

assign out_6_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_6_Clk_A = ap_clk;

assign out_6_Din_A = add_ln870_24_fu_6948_p2;

assign out_6_Rst_A = ap_rst_n_inv;

assign out_7_Addr_A = out_7_Addr_A_orig << 32'd2;

assign out_7_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_7_Clk_A = ap_clk;

assign out_7_Din_A = add_ln870_24_fu_6948_p2;

assign out_7_Rst_A = ap_rst_n_inv;

assign out_8_Addr_A = out_8_Addr_A_orig << 32'd2;

assign out_8_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_8_Clk_A = ap_clk;

assign out_8_Din_A = add_ln870_24_fu_6948_p2;

assign out_8_Rst_A = ap_rst_n_inv;

assign out_9_Addr_A = out_9_Addr_A_orig << 32'd2;

assign out_9_Addr_A_orig = j_V_cast_reg_9500_pp0_iter1_reg;

assign out_9_Clk_A = ap_clk;

assign out_9_Din_A = add_ln870_24_fu_6948_p2;

assign out_9_Rst_A = ap_rst_n_inv;

assign select_ln1057_fu_6488_p3 = ((icmp_ln1057_1_fu_6468_p2[0:0] == 1'b1) ? add_ln870_fu_6482_p2 : ap_sig_allocacmp_i_V_load);

assign select_ln18_fu_6474_p3 = ((icmp_ln1057_1_fu_6468_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_V_load);

assign trunc_ln870_10_fu_6574_p1 = inB_10_Dout_A[9:0];

assign trunc_ln870_11_fu_6578_p1 = inB_11_Dout_A[9:0];

assign trunc_ln870_12_fu_6582_p1 = inB_12_Dout_A[9:0];

assign trunc_ln870_13_fu_6586_p1 = inB_13_Dout_A[9:0];

assign trunc_ln870_14_fu_6590_p1 = inB_14_Dout_A[9:0];

assign trunc_ln870_15_fu_6594_p1 = inB_15_Dout_A[9:0];

assign trunc_ln870_16_fu_6598_p1 = inB_16_Dout_A[9:0];

assign trunc_ln870_17_fu_6602_p1 = inB_17_Dout_A[9:0];

assign trunc_ln870_18_fu_6606_p1 = inB_18_Dout_A[9:0];

assign trunc_ln870_19_fu_6610_p1 = inB_19_Dout_A[9:0];

assign trunc_ln870_1_fu_6528_p1 = inB_1_Dout_A[9:0];

assign trunc_ln870_20_fu_6614_p1 = inB_20_Dout_A[9:0];

assign trunc_ln870_21_fu_6618_p1 = inB_21_Dout_A[9:0];

assign trunc_ln870_22_fu_6622_p1 = inB_22_Dout_A[9:0];

assign trunc_ln870_2_fu_6532_p1 = inB_2_Dout_A[9:0];

assign trunc_ln870_3_fu_6536_p1 = inB_3_Dout_A[9:0];

assign trunc_ln870_4_fu_6540_p1 = inB_4_Dout_A[9:0];

assign trunc_ln870_5_fu_6544_p1 = inB_5_Dout_A[9:0];

assign trunc_ln870_6_fu_6548_p1 = inB_6_Dout_A[9:0];

assign trunc_ln870_7_fu_6552_p1 = inB_7_Dout_A[9:0];

assign trunc_ln870_8_fu_6556_p1 = inB_8_Dout_A[9:0];

assign trunc_ln870_fu_6524_p1 = inB_0_Dout_A[9:0];

always @ (posedge ap_clk) begin
    j_V_cast_reg_9500[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    j_V_cast_reg_9500_pp0_iter1_reg[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //arr_mult_1d
