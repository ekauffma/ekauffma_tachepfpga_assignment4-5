-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity arr_mult_1d is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    inA_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_0_EN_A : OUT STD_LOGIC;
    inA_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_0_Clk_A : OUT STD_LOGIC;
    inA_0_Rst_A : OUT STD_LOGIC;
    inA_0_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_0_EN_B : OUT STD_LOGIC;
    inA_0_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_0_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_0_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_0_Clk_B : OUT STD_LOGIC;
    inA_0_Rst_B : OUT STD_LOGIC;
    inA_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_1_EN_A : OUT STD_LOGIC;
    inA_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_1_Clk_A : OUT STD_LOGIC;
    inA_1_Rst_A : OUT STD_LOGIC;
    inA_1_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_1_EN_B : OUT STD_LOGIC;
    inA_1_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_1_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_1_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_1_Clk_B : OUT STD_LOGIC;
    inA_1_Rst_B : OUT STD_LOGIC;
    inA_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_2_EN_A : OUT STD_LOGIC;
    inA_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_2_Clk_A : OUT STD_LOGIC;
    inA_2_Rst_A : OUT STD_LOGIC;
    inA_2_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_2_EN_B : OUT STD_LOGIC;
    inA_2_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_2_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_2_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_2_Clk_B : OUT STD_LOGIC;
    inA_2_Rst_B : OUT STD_LOGIC;
    inA_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_3_EN_A : OUT STD_LOGIC;
    inA_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_3_Clk_A : OUT STD_LOGIC;
    inA_3_Rst_A : OUT STD_LOGIC;
    inA_3_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_3_EN_B : OUT STD_LOGIC;
    inA_3_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_3_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_3_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_3_Clk_B : OUT STD_LOGIC;
    inA_3_Rst_B : OUT STD_LOGIC;
    inA_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_4_EN_A : OUT STD_LOGIC;
    inA_4_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_4_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_4_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_4_Clk_A : OUT STD_LOGIC;
    inA_4_Rst_A : OUT STD_LOGIC;
    inA_4_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_4_EN_B : OUT STD_LOGIC;
    inA_4_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_4_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_4_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_4_Clk_B : OUT STD_LOGIC;
    inA_4_Rst_B : OUT STD_LOGIC;
    inA_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_5_EN_A : OUT STD_LOGIC;
    inA_5_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_5_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_5_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_5_Clk_A : OUT STD_LOGIC;
    inA_5_Rst_A : OUT STD_LOGIC;
    inA_5_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_5_EN_B : OUT STD_LOGIC;
    inA_5_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_5_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_5_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_5_Clk_B : OUT STD_LOGIC;
    inA_5_Rst_B : OUT STD_LOGIC;
    inA_6_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_6_EN_A : OUT STD_LOGIC;
    inA_6_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_6_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_6_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_6_Clk_A : OUT STD_LOGIC;
    inA_6_Rst_A : OUT STD_LOGIC;
    inA_6_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_6_EN_B : OUT STD_LOGIC;
    inA_6_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_6_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_6_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_6_Clk_B : OUT STD_LOGIC;
    inA_6_Rst_B : OUT STD_LOGIC;
    inA_7_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_7_EN_A : OUT STD_LOGIC;
    inA_7_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_7_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_7_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_7_Clk_A : OUT STD_LOGIC;
    inA_7_Rst_A : OUT STD_LOGIC;
    inA_7_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_7_EN_B : OUT STD_LOGIC;
    inA_7_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_7_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_7_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_7_Clk_B : OUT STD_LOGIC;
    inA_7_Rst_B : OUT STD_LOGIC;
    inA_8_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_8_EN_A : OUT STD_LOGIC;
    inA_8_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_8_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_8_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_8_Clk_A : OUT STD_LOGIC;
    inA_8_Rst_A : OUT STD_LOGIC;
    inA_8_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_8_EN_B : OUT STD_LOGIC;
    inA_8_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_8_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_8_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_8_Clk_B : OUT STD_LOGIC;
    inA_8_Rst_B : OUT STD_LOGIC;
    inA_9_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_9_EN_A : OUT STD_LOGIC;
    inA_9_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_9_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_9_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_9_Clk_A : OUT STD_LOGIC;
    inA_9_Rst_A : OUT STD_LOGIC;
    inA_9_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_9_EN_B : OUT STD_LOGIC;
    inA_9_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_9_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_9_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_9_Clk_B : OUT STD_LOGIC;
    inA_9_Rst_B : OUT STD_LOGIC;
    inA_10_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_10_EN_A : OUT STD_LOGIC;
    inA_10_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_10_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_10_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_10_Clk_A : OUT STD_LOGIC;
    inA_10_Rst_A : OUT STD_LOGIC;
    inA_10_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_10_EN_B : OUT STD_LOGIC;
    inA_10_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_10_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_10_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_10_Clk_B : OUT STD_LOGIC;
    inA_10_Rst_B : OUT STD_LOGIC;
    inA_11_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_11_EN_A : OUT STD_LOGIC;
    inA_11_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_11_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_11_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_11_Clk_A : OUT STD_LOGIC;
    inA_11_Rst_A : OUT STD_LOGIC;
    inA_11_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_11_EN_B : OUT STD_LOGIC;
    inA_11_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_11_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_11_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_11_Clk_B : OUT STD_LOGIC;
    inA_11_Rst_B : OUT STD_LOGIC;
    inA_12_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_12_EN_A : OUT STD_LOGIC;
    inA_12_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_12_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_12_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_12_Clk_A : OUT STD_LOGIC;
    inA_12_Rst_A : OUT STD_LOGIC;
    inA_12_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_12_EN_B : OUT STD_LOGIC;
    inA_12_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_12_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_12_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_12_Clk_B : OUT STD_LOGIC;
    inA_12_Rst_B : OUT STD_LOGIC;
    inA_13_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_13_EN_A : OUT STD_LOGIC;
    inA_13_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_13_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_13_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_13_Clk_A : OUT STD_LOGIC;
    inA_13_Rst_A : OUT STD_LOGIC;
    inA_13_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_13_EN_B : OUT STD_LOGIC;
    inA_13_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_13_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_13_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_13_Clk_B : OUT STD_LOGIC;
    inA_13_Rst_B : OUT STD_LOGIC;
    inA_14_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_14_EN_A : OUT STD_LOGIC;
    inA_14_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_14_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_14_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_14_Clk_A : OUT STD_LOGIC;
    inA_14_Rst_A : OUT STD_LOGIC;
    inA_14_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_14_EN_B : OUT STD_LOGIC;
    inA_14_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_14_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_14_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_14_Clk_B : OUT STD_LOGIC;
    inA_14_Rst_B : OUT STD_LOGIC;
    inA_15_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_15_EN_A : OUT STD_LOGIC;
    inA_15_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_15_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_15_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_15_Clk_A : OUT STD_LOGIC;
    inA_15_Rst_A : OUT STD_LOGIC;
    inA_15_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_15_EN_B : OUT STD_LOGIC;
    inA_15_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_15_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_15_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_15_Clk_B : OUT STD_LOGIC;
    inA_15_Rst_B : OUT STD_LOGIC;
    inA_16_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_16_EN_A : OUT STD_LOGIC;
    inA_16_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_16_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_16_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_16_Clk_A : OUT STD_LOGIC;
    inA_16_Rst_A : OUT STD_LOGIC;
    inA_16_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_16_EN_B : OUT STD_LOGIC;
    inA_16_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_16_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_16_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_16_Clk_B : OUT STD_LOGIC;
    inA_16_Rst_B : OUT STD_LOGIC;
    inA_17_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_17_EN_A : OUT STD_LOGIC;
    inA_17_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_17_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_17_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_17_Clk_A : OUT STD_LOGIC;
    inA_17_Rst_A : OUT STD_LOGIC;
    inA_17_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_17_EN_B : OUT STD_LOGIC;
    inA_17_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_17_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_17_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_17_Clk_B : OUT STD_LOGIC;
    inA_17_Rst_B : OUT STD_LOGIC;
    inA_18_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_18_EN_A : OUT STD_LOGIC;
    inA_18_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_18_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_18_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_18_Clk_A : OUT STD_LOGIC;
    inA_18_Rst_A : OUT STD_LOGIC;
    inA_18_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_18_EN_B : OUT STD_LOGIC;
    inA_18_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_18_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_18_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_18_Clk_B : OUT STD_LOGIC;
    inA_18_Rst_B : OUT STD_LOGIC;
    inA_19_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_19_EN_A : OUT STD_LOGIC;
    inA_19_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_19_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_19_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_19_Clk_A : OUT STD_LOGIC;
    inA_19_Rst_A : OUT STD_LOGIC;
    inA_19_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_19_EN_B : OUT STD_LOGIC;
    inA_19_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    inA_19_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    inA_19_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    inA_19_Clk_B : OUT STD_LOGIC;
    inA_19_Rst_B : OUT STD_LOGIC;
    inB_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_0_EN_A : OUT STD_LOGIC;
    inB_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_0_Clk_A : OUT STD_LOGIC;
    inB_0_Rst_A : OUT STD_LOGIC;
    inB_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_1_EN_A : OUT STD_LOGIC;
    inB_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_1_Clk_A : OUT STD_LOGIC;
    inB_1_Rst_A : OUT STD_LOGIC;
    inB_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_2_EN_A : OUT STD_LOGIC;
    inB_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_2_Clk_A : OUT STD_LOGIC;
    inB_2_Rst_A : OUT STD_LOGIC;
    inB_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_3_EN_A : OUT STD_LOGIC;
    inB_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_3_Clk_A : OUT STD_LOGIC;
    inB_3_Rst_A : OUT STD_LOGIC;
    inB_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_4_EN_A : OUT STD_LOGIC;
    inB_4_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_4_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_4_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_4_Clk_A : OUT STD_LOGIC;
    inB_4_Rst_A : OUT STD_LOGIC;
    inB_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_5_EN_A : OUT STD_LOGIC;
    inB_5_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_5_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_5_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_5_Clk_A : OUT STD_LOGIC;
    inB_5_Rst_A : OUT STD_LOGIC;
    inB_6_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_6_EN_A : OUT STD_LOGIC;
    inB_6_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_6_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_6_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_6_Clk_A : OUT STD_LOGIC;
    inB_6_Rst_A : OUT STD_LOGIC;
    inB_7_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_7_EN_A : OUT STD_LOGIC;
    inB_7_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_7_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_7_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_7_Clk_A : OUT STD_LOGIC;
    inB_7_Rst_A : OUT STD_LOGIC;
    inB_8_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_8_EN_A : OUT STD_LOGIC;
    inB_8_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_8_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_8_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_8_Clk_A : OUT STD_LOGIC;
    inB_8_Rst_A : OUT STD_LOGIC;
    inB_9_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_9_EN_A : OUT STD_LOGIC;
    inB_9_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_9_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_9_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_9_Clk_A : OUT STD_LOGIC;
    inB_9_Rst_A : OUT STD_LOGIC;
    inB_10_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_10_EN_A : OUT STD_LOGIC;
    inB_10_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_10_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_10_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_10_Clk_A : OUT STD_LOGIC;
    inB_10_Rst_A : OUT STD_LOGIC;
    inB_11_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_11_EN_A : OUT STD_LOGIC;
    inB_11_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_11_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_11_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_11_Clk_A : OUT STD_LOGIC;
    inB_11_Rst_A : OUT STD_LOGIC;
    inB_12_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_12_EN_A : OUT STD_LOGIC;
    inB_12_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_12_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_12_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_12_Clk_A : OUT STD_LOGIC;
    inB_12_Rst_A : OUT STD_LOGIC;
    inB_13_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_13_EN_A : OUT STD_LOGIC;
    inB_13_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_13_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_13_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_13_Clk_A : OUT STD_LOGIC;
    inB_13_Rst_A : OUT STD_LOGIC;
    inB_14_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_14_EN_A : OUT STD_LOGIC;
    inB_14_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_14_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_14_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_14_Clk_A : OUT STD_LOGIC;
    inB_14_Rst_A : OUT STD_LOGIC;
    inB_15_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_15_EN_A : OUT STD_LOGIC;
    inB_15_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_15_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_15_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_15_Clk_A : OUT STD_LOGIC;
    inB_15_Rst_A : OUT STD_LOGIC;
    inB_16_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_16_EN_A : OUT STD_LOGIC;
    inB_16_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_16_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_16_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_16_Clk_A : OUT STD_LOGIC;
    inB_16_Rst_A : OUT STD_LOGIC;
    inB_17_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_17_EN_A : OUT STD_LOGIC;
    inB_17_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_17_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_17_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_17_Clk_A : OUT STD_LOGIC;
    inB_17_Rst_A : OUT STD_LOGIC;
    inB_18_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_18_EN_A : OUT STD_LOGIC;
    inB_18_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_18_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_18_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_18_Clk_A : OUT STD_LOGIC;
    inB_18_Rst_A : OUT STD_LOGIC;
    inB_19_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_19_EN_A : OUT STD_LOGIC;
    inB_19_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_19_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_19_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_19_Clk_A : OUT STD_LOGIC;
    inB_19_Rst_A : OUT STD_LOGIC;
    inB_20_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_20_EN_A : OUT STD_LOGIC;
    inB_20_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_20_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_20_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_20_Clk_A : OUT STD_LOGIC;
    inB_20_Rst_A : OUT STD_LOGIC;
    inB_21_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_21_EN_A : OUT STD_LOGIC;
    inB_21_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_21_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_21_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_21_Clk_A : OUT STD_LOGIC;
    inB_21_Rst_A : OUT STD_LOGIC;
    inB_22_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_22_EN_A : OUT STD_LOGIC;
    inB_22_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_22_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_22_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_22_Clk_A : OUT STD_LOGIC;
    inB_22_Rst_A : OUT STD_LOGIC;
    inB_23_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_23_EN_A : OUT STD_LOGIC;
    inB_23_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    inB_23_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    inB_23_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    inB_23_Clk_A : OUT STD_LOGIC;
    inB_23_Rst_A : OUT STD_LOGIC;
    out_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_0_EN_A : OUT STD_LOGIC;
    out_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_0_Clk_A : OUT STD_LOGIC;
    out_0_Rst_A : OUT STD_LOGIC;
    out_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_1_EN_A : OUT STD_LOGIC;
    out_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_1_Clk_A : OUT STD_LOGIC;
    out_1_Rst_A : OUT STD_LOGIC;
    out_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_2_EN_A : OUT STD_LOGIC;
    out_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_2_Clk_A : OUT STD_LOGIC;
    out_2_Rst_A : OUT STD_LOGIC;
    out_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_3_EN_A : OUT STD_LOGIC;
    out_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_3_Clk_A : OUT STD_LOGIC;
    out_3_Rst_A : OUT STD_LOGIC;
    out_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_4_EN_A : OUT STD_LOGIC;
    out_4_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_4_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_4_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_4_Clk_A : OUT STD_LOGIC;
    out_4_Rst_A : OUT STD_LOGIC;
    out_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_5_EN_A : OUT STD_LOGIC;
    out_5_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_5_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_5_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_5_Clk_A : OUT STD_LOGIC;
    out_5_Rst_A : OUT STD_LOGIC;
    out_6_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_6_EN_A : OUT STD_LOGIC;
    out_6_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_6_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_6_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_6_Clk_A : OUT STD_LOGIC;
    out_6_Rst_A : OUT STD_LOGIC;
    out_7_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_7_EN_A : OUT STD_LOGIC;
    out_7_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_7_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_7_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_7_Clk_A : OUT STD_LOGIC;
    out_7_Rst_A : OUT STD_LOGIC;
    out_8_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_8_EN_A : OUT STD_LOGIC;
    out_8_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_8_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_8_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_8_Clk_A : OUT STD_LOGIC;
    out_8_Rst_A : OUT STD_LOGIC;
    out_9_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_9_EN_A : OUT STD_LOGIC;
    out_9_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_9_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_9_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_9_Clk_A : OUT STD_LOGIC;
    out_9_Rst_A : OUT STD_LOGIC;
    out_10_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_10_EN_A : OUT STD_LOGIC;
    out_10_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_10_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_10_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_10_Clk_A : OUT STD_LOGIC;
    out_10_Rst_A : OUT STD_LOGIC;
    out_11_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_11_EN_A : OUT STD_LOGIC;
    out_11_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_11_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_11_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_11_Clk_A : OUT STD_LOGIC;
    out_11_Rst_A : OUT STD_LOGIC;
    out_12_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_12_EN_A : OUT STD_LOGIC;
    out_12_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_12_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_12_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_12_Clk_A : OUT STD_LOGIC;
    out_12_Rst_A : OUT STD_LOGIC;
    out_13_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_13_EN_A : OUT STD_LOGIC;
    out_13_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_13_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_13_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_13_Clk_A : OUT STD_LOGIC;
    out_13_Rst_A : OUT STD_LOGIC;
    out_14_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_14_EN_A : OUT STD_LOGIC;
    out_14_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_14_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_14_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_14_Clk_A : OUT STD_LOGIC;
    out_14_Rst_A : OUT STD_LOGIC;
    out_15_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_15_EN_A : OUT STD_LOGIC;
    out_15_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_15_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_15_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_15_Clk_A : OUT STD_LOGIC;
    out_15_Rst_A : OUT STD_LOGIC;
    out_16_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_16_EN_A : OUT STD_LOGIC;
    out_16_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_16_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_16_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_16_Clk_A : OUT STD_LOGIC;
    out_16_Rst_A : OUT STD_LOGIC;
    out_17_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_17_EN_A : OUT STD_LOGIC;
    out_17_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_17_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_17_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_17_Clk_A : OUT STD_LOGIC;
    out_17_Rst_A : OUT STD_LOGIC;
    out_18_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_18_EN_A : OUT STD_LOGIC;
    out_18_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_18_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_18_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_18_Clk_A : OUT STD_LOGIC;
    out_18_Rst_A : OUT STD_LOGIC;
    out_19_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_19_EN_A : OUT STD_LOGIC;
    out_19_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    out_19_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_19_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    out_19_Clk_A : OUT STD_LOGIC;
    out_19_Rst_A : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of arr_mult_1d is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "arr_mult_1d_arr_mult_1d,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7v585t-ffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.901250,HLS_SYN_LAT=2403,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=673,HLS_SYN_LUT=6703,HLS_VERSION=2021_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv8_C8 : STD_LOGIC_VECTOR (7 downto 0) := "11001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_ready : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal icmp_ln1057_reg_9481 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1057_fu_6450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1057_fu_6456_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln1057_reg_9485 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln18_fu_6474_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln18_reg_9490 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln1057_fu_6488_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1057_reg_9495 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln1057_reg_9495_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal j_V_cast_fu_6496_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_V_cast_reg_9500 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_V_cast_reg_9500_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal inB_23_load_reg_9644 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal trunc_ln870_fu_6524_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_reg_9649 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_1_fu_6528_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_1_reg_9654 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_2_fu_6532_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_2_reg_9659 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_3_fu_6536_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_3_reg_9664 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_4_fu_6540_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_4_reg_9669 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_5_fu_6544_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_5_reg_9674 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_6_fu_6548_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_6_reg_9679 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_7_fu_6552_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_7_reg_9684 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_8_fu_6556_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_8_reg_9689 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_9_fu_6568_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_9_reg_9694 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_10_fu_6574_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_10_reg_9699 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_11_fu_6578_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_11_reg_9704 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_12_fu_6582_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_12_reg_9709 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_13_fu_6586_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_13_reg_9714 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_14_fu_6590_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_14_reg_9719 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_15_fu_6594_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_15_reg_9724 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_16_fu_6598_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_16_reg_9729 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_17_fu_6602_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_17_reg_9734 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_18_fu_6606_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_18_reg_9739 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_19_fu_6610_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_19_reg_9744 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_20_fu_6614_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_20_reg_9749 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_21_fu_6618_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_21_reg_9754 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_22_fu_6622_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln870_22_reg_9759 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_fu_6648_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_reg_9864 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal mul_ln870_1_fu_6657_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_1_reg_9869 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_2_fu_6673_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_2_reg_9884 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal mul_ln870_3_fu_6682_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_3_reg_9889 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_4_fu_6691_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_4_reg_9894 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal mul_ln870_5_fu_6700_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_5_reg_9899 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_14_fu_6709_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_14_reg_9904 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_6_fu_6718_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_6_reg_9909 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal mul_ln870_7_fu_6727_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_7_reg_9914 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_16_fu_6736_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_16_reg_9919 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_7053_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_20_reg_9924 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_18_fu_6759_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_18_reg_9929 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal add_ln870_21_fu_6764_p2 : STD_LOGIC_VECTOR (9 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln870_21_fu_6764_p2 : signal is "no";
    signal add_ln870_21_reg_9934 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_11_fu_6773_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_11_reg_9939 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal mul_ln870_12_fu_6782_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_12_reg_9944 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_23_fu_6800_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_23_reg_9949 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_14_fu_6819_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_14_reg_9954 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal add_ln870_7_fu_6824_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_7_reg_9959 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_15_fu_6833_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_15_reg_9964 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal mul_ln870_16_fu_6842_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_16_reg_9969 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_17_fu_6851_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_17_reg_9974 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal mul_ln870_18_fu_6860_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_18_reg_9979 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_11_fu_6878_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_11_reg_9984 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_19_fu_6888_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_19_reg_9989 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal mul_ln870_20_fu_6897_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_20_reg_9994 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_21_fu_6906_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_21_reg_9999 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_2_fu_6920_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_2_reg_10004 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_5_fu_6929_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_5_reg_10009 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_phi_fu_4960_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_reg_4957 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal j_V_fu_268 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln870_1_fu_6626_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_V_load : STD_LOGIC_VECTOR (3 downto 0);
    signal i_V_fu_272 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_i_V_load : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_fu_276 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (7 downto 0);
    signal inB_23_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_4_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_5_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_6_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_7_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_8_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_9_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_10_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_11_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_12_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_13_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_14_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_15_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_16_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_17_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_18_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_19_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_20_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_21_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inB_22_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_18_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_18_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal inA_17_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_17_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_16_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_16_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_15_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_15_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_14_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_14_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_13_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_13_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_12_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_12_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_11_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_11_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_10_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_10_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_9_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_9_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_8_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_8_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_7_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_7_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_6_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_6_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_5_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_5_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_4_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_4_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_3_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_2_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_1_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_0_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_19_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal inA_19_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_18_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_17_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_16_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_15_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_14_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_13_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_12_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_11_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_10_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_9_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_8_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_7_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_6_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_5_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_4_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal out_19_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1057_1_fu_6468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln870_fu_6482_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln870_9_fu_6568_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_9_fu_6568_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_fu_6648_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_1_fu_6657_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_2_fu_6673_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_3_fu_6682_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_4_fu_6691_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_5_fu_6700_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_13_fu_6705_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_6_fu_6718_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_7_fu_6727_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_15_fu_6732_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_8_fu_6745_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_10_fu_6754_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_8_fu_6745_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_10_fu_6754_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_11_fu_6773_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_12_fu_6782_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_19_fu_6791_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_22_fu_6795_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_17_fu_6787_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_13_fu_6810_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_14_fu_6819_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_13_fu_6810_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_15_fu_6833_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_16_fu_6842_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_17_fu_6851_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_18_fu_6860_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_9_fu_6869_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_10_fu_6873_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_8_fu_6865_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_19_fu_6888_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_20_fu_6897_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_21_fu_6906_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_22_fu_6915_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln870_22_fu_6915_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_4_fu_6925_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_3_fu_6934_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_6_fu_6938_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_12_fu_6943_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln870_24_fu_6948_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_7053_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_7053_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_3492 : BOOLEAN;
    signal ap_condition_2766 : BOOLEAN;
    signal ap_condition_1940 : BOOLEAN;
    signal ap_condition_3501 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component arr_mult_1d_mul_10s_10s_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component arr_mult_1d_mac_muladd_10s_10s_10ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component arr_mult_1d_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component arr_mult_1d_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    control_s_axi_U : component arr_mult_1d_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mul_10s_10s_10_1_1_U1 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => mul_ln870_9_fu_6568_p0,
        din1 => mul_ln870_9_fu_6568_p1,
        dout => mul_ln870_9_fu_6568_p2);

    mul_10s_10s_10_1_1_U2 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_reg_9649,
        din1 => mul_ln870_fu_6648_p1,
        dout => mul_ln870_fu_6648_p2);

    mul_10s_10s_10_1_1_U3 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_1_reg_9654,
        din1 => mul_ln870_1_fu_6657_p1,
        dout => mul_ln870_1_fu_6657_p2);

    mul_10s_10s_10_1_1_U4 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_2_reg_9659,
        din1 => mul_ln870_2_fu_6673_p1,
        dout => mul_ln870_2_fu_6673_p2);

    mul_10s_10s_10_1_1_U5 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_3_reg_9664,
        din1 => mul_ln870_3_fu_6682_p1,
        dout => mul_ln870_3_fu_6682_p2);

    mul_10s_10s_10_1_1_U6 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_4_reg_9669,
        din1 => mul_ln870_4_fu_6691_p1,
        dout => mul_ln870_4_fu_6691_p2);

    mul_10s_10s_10_1_1_U7 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_5_reg_9674,
        din1 => mul_ln870_5_fu_6700_p1,
        dout => mul_ln870_5_fu_6700_p2);

    mul_10s_10s_10_1_1_U8 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_6_reg_9679,
        din1 => mul_ln870_6_fu_6718_p1,
        dout => mul_ln870_6_fu_6718_p2);

    mul_10s_10s_10_1_1_U9 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_7_reg_9684,
        din1 => mul_ln870_7_fu_6727_p1,
        dout => mul_ln870_7_fu_6727_p2);

    mul_10s_10s_10_1_1_U10 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_8_reg_9689,
        din1 => mul_ln870_8_fu_6745_p1,
        dout => mul_ln870_8_fu_6745_p2);

    mul_10s_10s_10_1_1_U11 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_10_reg_9699,
        din1 => mul_ln870_10_fu_6754_p1,
        dout => mul_ln870_10_fu_6754_p2);

    mul_10s_10s_10_1_1_U12 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_11_reg_9704,
        din1 => mul_ln870_11_fu_6773_p1,
        dout => mul_ln870_11_fu_6773_p2);

    mul_10s_10s_10_1_1_U13 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_12_reg_9709,
        din1 => mul_ln870_12_fu_6782_p1,
        dout => mul_ln870_12_fu_6782_p2);

    mul_10s_10s_10_1_1_U14 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_13_reg_9714,
        din1 => mul_ln870_13_fu_6810_p1,
        dout => mul_ln870_13_fu_6810_p2);

    mul_10s_10s_10_1_1_U15 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_14_reg_9719,
        din1 => mul_ln870_14_fu_6819_p1,
        dout => mul_ln870_14_fu_6819_p2);

    mul_10s_10s_10_1_1_U16 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_15_reg_9724,
        din1 => mul_ln870_15_fu_6833_p1,
        dout => mul_ln870_15_fu_6833_p2);

    mul_10s_10s_10_1_1_U17 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_16_reg_9729,
        din1 => mul_ln870_16_fu_6842_p1,
        dout => mul_ln870_16_fu_6842_p2);

    mul_10s_10s_10_1_1_U18 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_17_reg_9734,
        din1 => mul_ln870_17_fu_6851_p1,
        dout => mul_ln870_17_fu_6851_p2);

    mul_10s_10s_10_1_1_U19 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_18_reg_9739,
        din1 => mul_ln870_18_fu_6860_p1,
        dout => mul_ln870_18_fu_6860_p2);

    mul_10s_10s_10_1_1_U20 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_19_reg_9744,
        din1 => mul_ln870_19_fu_6888_p1,
        dout => mul_ln870_19_fu_6888_p2);

    mul_10s_10s_10_1_1_U21 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_20_reg_9749,
        din1 => mul_ln870_20_fu_6897_p1,
        dout => mul_ln870_20_fu_6897_p2);

    mul_10s_10s_10_1_1_U22 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_21_reg_9754,
        din1 => mul_ln870_21_fu_6906_p1,
        dout => mul_ln870_21_fu_6906_p2);

    mul_10s_10s_10_1_1_U23 : component arr_mult_1d_mul_10s_10s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        din0 => trunc_ln870_22_reg_9759,
        din1 => mul_ln870_22_fu_6915_p1,
        dout => mul_ln870_22_fu_6915_p2);

    mac_muladd_10s_10s_10ns_10_4_1_U24 : component arr_mult_1d_mac_muladd_10s_10s_10ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_7053_p0,
        din1 => grp_fu_7053_p1,
        din2 => mul_ln870_9_reg_9694,
        ce => ap_const_logic_1,
        dout => grp_fu_7053_p3);

    flow_control_loop_pipe_U : component arr_mult_1d_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_const_logic_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_2766)) then
                if ((ap_const_boolean_1 = ap_condition_3492)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_19_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_18_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_17_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_16_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_15_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_14_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_13_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_12_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_11_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_10_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_9_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_8_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_7_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_6_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_5_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_4_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_3_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_2_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_1_Dout_A;
                elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                    ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087 <= inA_0_Dout_A;
                end if;
            end if; 
        end if;
    end process;

    i_V_fu_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_3501)) then 
                    i_V_fu_272 <= ap_const_lv5_0;
                elsif ((ap_const_boolean_1 = ap_condition_1940)) then 
                    i_V_fu_272 <= select_ln1057_reg_9495;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_276_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_3501)) then 
                    indvar_flatten_fu_276 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_condition_1940)) then 
                    indvar_flatten_fu_276 <= add_ln1057_reg_9485;
                end if;
            end if; 
        end if;
    end process;

    j_V_fu_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
                if ((ap_const_boolean_1 = ap_condition_3501)) then 
                    j_V_fu_268 <= ap_const_lv4_0;
                elsif ((ap_const_boolean_1 = ap_condition_1940)) then 
                    j_V_fu_268 <= add_ln870_1_fu_6626_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln1057_reg_9485 <= add_ln1057_fu_6456_p2;
                add_ln870_2_reg_10004 <= add_ln870_2_fu_6920_p2;
                add_ln870_5_reg_10009 <= add_ln870_5_fu_6929_p2;
                icmp_ln1057_reg_9481 <= icmp_ln1057_fu_6450_p2;
                    j_V_cast_reg_9500_pp0_iter1_reg(3 downto 0) <= j_V_cast_reg_9500(3 downto 0);
                mul_ln870_21_reg_9999 <= mul_ln870_21_fu_6906_p2;
                select_ln1057_reg_9495_pp0_iter1_reg <= select_ln1057_reg_9495;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then
                add_ln870_11_reg_9984 <= add_ln870_11_fu_6878_p2;
                mul_ln870_17_reg_9974 <= mul_ln870_17_fu_6851_p2;
                mul_ln870_18_reg_9979 <= mul_ln870_18_fu_6860_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                add_ln870_14_reg_9904 <= add_ln870_14_fu_6709_p2;
                mul_ln870_4_reg_9894 <= mul_ln870_4_fu_6691_p2;
                mul_ln870_5_reg_9899 <= mul_ln870_5_fu_6700_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add_ln870_16_reg_9919 <= add_ln870_16_fu_6736_p2;
                mul_ln870_6_reg_9909 <= mul_ln870_6_fu_6718_p2;
                mul_ln870_7_reg_9914 <= mul_ln870_7_fu_6727_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                add_ln870_18_reg_9929 <= add_ln870_18_fu_6759_p2;
                add_ln870_21_reg_9934 <= add_ln870_21_fu_6764_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                add_ln870_20_reg_9924 <= grp_fu_7053_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                add_ln870_23_reg_9949 <= add_ln870_23_fu_6800_p2;
                mul_ln870_11_reg_9939 <= mul_ln870_11_fu_6773_p2;
                mul_ln870_12_reg_9944 <= mul_ln870_12_fu_6782_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then
                add_ln870_7_reg_9959 <= add_ln870_7_fu_6824_p2;
                mul_ln870_14_reg_9954 <= mul_ln870_14_fu_6819_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                inB_23_load_reg_9644 <= inB_23_Dout_A;
                mul_ln870_9_reg_9694 <= mul_ln870_9_fu_6568_p2;
                trunc_ln870_10_reg_9699 <= trunc_ln870_10_fu_6574_p1;
                trunc_ln870_11_reg_9704 <= trunc_ln870_11_fu_6578_p1;
                trunc_ln870_12_reg_9709 <= trunc_ln870_12_fu_6582_p1;
                trunc_ln870_13_reg_9714 <= trunc_ln870_13_fu_6586_p1;
                trunc_ln870_14_reg_9719 <= trunc_ln870_14_fu_6590_p1;
                trunc_ln870_15_reg_9724 <= trunc_ln870_15_fu_6594_p1;
                trunc_ln870_16_reg_9729 <= trunc_ln870_16_fu_6598_p1;
                trunc_ln870_17_reg_9734 <= trunc_ln870_17_fu_6602_p1;
                trunc_ln870_18_reg_9739 <= trunc_ln870_18_fu_6606_p1;
                trunc_ln870_19_reg_9744 <= trunc_ln870_19_fu_6610_p1;
                trunc_ln870_1_reg_9654 <= trunc_ln870_1_fu_6528_p1;
                trunc_ln870_20_reg_9749 <= trunc_ln870_20_fu_6614_p1;
                trunc_ln870_21_reg_9754 <= trunc_ln870_21_fu_6618_p1;
                trunc_ln870_22_reg_9759 <= trunc_ln870_22_fu_6622_p1;
                trunc_ln870_2_reg_9659 <= trunc_ln870_2_fu_6532_p1;
                trunc_ln870_3_reg_9664 <= trunc_ln870_3_fu_6536_p1;
                trunc_ln870_4_reg_9669 <= trunc_ln870_4_fu_6540_p1;
                trunc_ln870_5_reg_9674 <= trunc_ln870_5_fu_6544_p1;
                trunc_ln870_6_reg_9679 <= trunc_ln870_6_fu_6548_p1;
                trunc_ln870_7_reg_9684 <= trunc_ln870_7_fu_6552_p1;
                trunc_ln870_8_reg_9689 <= trunc_ln870_8_fu_6556_p1;
                trunc_ln870_reg_9649 <= trunc_ln870_fu_6524_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1057_fu_6450_p2 = ap_const_lv1_0))) then
                    j_V_cast_reg_9500(3 downto 0) <= j_V_cast_fu_6496_p1(3 downto 0);
                select_ln1057_reg_9495 <= select_ln1057_fu_6488_p3;
                select_ln18_reg_9490 <= select_ln18_fu_6474_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then
                mul_ln870_15_reg_9964 <= mul_ln870_15_fu_6833_p2;
                mul_ln870_16_reg_9969 <= mul_ln870_16_fu_6842_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then
                mul_ln870_19_reg_9989 <= mul_ln870_19_fu_6888_p2;
                mul_ln870_20_reg_9994 <= mul_ln870_20_fu_6897_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_ln870_1_reg_9869 <= mul_ln870_1_fu_6657_p2;
                mul_ln870_reg_9864 <= mul_ln870_fu_6648_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_ln870_2_reg_9884 <= mul_ln870_2_fu_6673_p2;
                mul_ln870_3_reg_9889 <= mul_ln870_3_fu_6682_p2;
            end if;
        end if;
    end process;
    j_V_cast_reg_9500(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    j_V_cast_reg_9500_pp0_iter1_reg(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter0_stage1, ap_block_pp0_stage11_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln1057_fu_6456_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv8_1));
    add_ln870_10_fu_6873_p2 <= std_logic_vector(unsigned(add_ln870_9_fu_6869_p2) + unsigned(mul_ln870_14_reg_9954));
    add_ln870_11_fu_6878_p2 <= std_logic_vector(unsigned(add_ln870_10_fu_6873_p2) + unsigned(add_ln870_8_fu_6865_p2));
    add_ln870_12_fu_6943_p2 <= std_logic_vector(unsigned(add_ln870_11_reg_9984) + unsigned(add_ln870_6_fu_6938_p2));
    add_ln870_13_fu_6705_p2 <= std_logic_vector(unsigned(mul_ln870_1_reg_9869) + unsigned(mul_ln870_2_reg_9884));
    add_ln870_14_fu_6709_p2 <= std_logic_vector(unsigned(add_ln870_13_fu_6705_p2) + unsigned(mul_ln870_reg_9864));
    add_ln870_15_fu_6732_p2 <= std_logic_vector(unsigned(mul_ln870_3_reg_9889) + unsigned(mul_ln870_5_reg_9899));
    add_ln870_16_fu_6736_p2 <= std_logic_vector(unsigned(add_ln870_15_fu_6732_p2) + unsigned(mul_ln870_4_reg_9894));
    add_ln870_17_fu_6787_p2 <= std_logic_vector(unsigned(add_ln870_16_reg_9919) + unsigned(add_ln870_14_reg_9904));
    add_ln870_18_fu_6759_p2 <= std_logic_vector(unsigned(mul_ln870_6_reg_9909) + unsigned(mul_ln870_8_fu_6745_p2));
    add_ln870_19_fu_6791_p2 <= std_logic_vector(unsigned(add_ln870_18_reg_9929) + unsigned(mul_ln870_7_reg_9914));
    add_ln870_1_fu_6626_p2 <= std_logic_vector(unsigned(select_ln18_reg_9490) + unsigned(ap_const_lv4_1));
    add_ln870_21_fu_6764_p2 <= std_logic_vector(signed(add_ln870_20_reg_9924) + signed(mul_ln870_10_fu_6754_p2));
    add_ln870_22_fu_6795_p2 <= std_logic_vector(unsigned(add_ln870_21_reg_9934) + unsigned(add_ln870_19_fu_6791_p2));
    add_ln870_23_fu_6800_p2 <= std_logic_vector(unsigned(add_ln870_22_fu_6795_p2) + unsigned(add_ln870_17_fu_6787_p2));
    add_ln870_24_fu_6948_p2 <= std_logic_vector(unsigned(add_ln870_23_reg_9949) + unsigned(add_ln870_12_fu_6943_p2));
    add_ln870_2_fu_6920_p2 <= std_logic_vector(unsigned(mul_ln870_22_fu_6915_p2) + unsigned(mul_ln870_20_reg_9994));
    add_ln870_3_fu_6934_p2 <= std_logic_vector(unsigned(add_ln870_2_reg_10004) + unsigned(mul_ln870_21_reg_9999));
    add_ln870_4_fu_6925_p2 <= std_logic_vector(unsigned(mul_ln870_19_reg_9989) + unsigned(mul_ln870_18_reg_9979));
    add_ln870_5_fu_6929_p2 <= std_logic_vector(unsigned(add_ln870_4_fu_6925_p2) + unsigned(mul_ln870_17_reg_9974));
    add_ln870_6_fu_6938_p2 <= std_logic_vector(unsigned(add_ln870_5_reg_10009) + unsigned(add_ln870_3_fu_6934_p2));
    add_ln870_7_fu_6824_p2 <= std_logic_vector(unsigned(mul_ln870_13_fu_6810_p2) + unsigned(mul_ln870_12_reg_9944));
    add_ln870_8_fu_6865_p2 <= std_logic_vector(unsigned(add_ln870_7_reg_9959) + unsigned(mul_ln870_11_reg_9939));
    add_ln870_9_fu_6869_p2 <= std_logic_vector(unsigned(mul_ln870_16_reg_9969) + unsigned(mul_ln870_15_reg_9964));
    add_ln870_fu_6482_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_V_load) + unsigned(ap_const_lv5_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1940_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln1057_reg_9481, ap_block_pp0_stage1_11001)
    begin
                ap_condition_1940 <= ((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_2766_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, icmp_ln1057_reg_9481, ap_block_pp0_stage1_11001)
    begin
                ap_condition_2766 <= ((icmp_ln1057_reg_9481 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_3492_assign_proc : process(select_ln1057_reg_9495)
    begin
                ap_condition_3492 <= (not((select_ln1057_reg_9495 = ap_const_lv5_0)) and not((select_ln1057_reg_9495 = ap_const_lv5_1)) and not((select_ln1057_reg_9495 = ap_const_lv5_2)) and not((select_ln1057_reg_9495 = ap_const_lv5_3)) and not((select_ln1057_reg_9495 = ap_const_lv5_4)) and not((select_ln1057_reg_9495 = ap_const_lv5_5)) and not((select_ln1057_reg_9495 = ap_const_lv5_6)) and not((select_ln1057_reg_9495 = ap_const_lv5_7)) and not((select_ln1057_reg_9495 = ap_const_lv5_8)) and not((select_ln1057_reg_9495 = ap_const_lv5_9)) and not((select_ln1057_reg_9495 = ap_const_lv5_A)) and not((select_ln1057_reg_9495 = ap_const_lv5_B)) and not((select_ln1057_reg_9495 = ap_const_lv5_C)) and not((select_ln1057_reg_9495 = ap_const_lv5_D)) and not((select_ln1057_reg_9495 = ap_const_lv5_E)) and not((select_ln1057_reg_9495 = ap_const_lv5_F)) and not((select_ln1057_reg_9495 = ap_const_lv5_10)) and not((select_ln1057_reg_9495 = ap_const_lv5_11)) and not((select_ln1057_reg_9495 = ap_const_lv5_12)));
    end process;


    ap_condition_3501_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_loop_init)
    begin
                ap_condition_3501 <= ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, icmp_ln1057_reg_9481)
    begin
        if (((icmp_ln1057_reg_9481 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;

    ap_phi_mux_phi_ln870_10_phi_fu_5590_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587;
            end if;
        else 
            ap_phi_mux_phi_ln870_10_phi_fu_5590_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_11_phi_fu_5655_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652;
            end if;
        else 
            ap_phi_mux_phi_ln870_11_phi_fu_5655_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_12_phi_fu_5720_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717;
            end if;
        else 
            ap_phi_mux_phi_ln870_12_phi_fu_5720_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_13_phi_fu_5785_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782;
            end if;
        else 
            ap_phi_mux_phi_ln870_13_phi_fu_5785_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_14_phi_fu_5850_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847;
            end if;
        else 
            ap_phi_mux_phi_ln870_14_phi_fu_5850_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_15_phi_fu_5915_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912;
            end if;
        else 
            ap_phi_mux_phi_ln870_15_phi_fu_5915_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_16_phi_fu_5980_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977;
            end if;
        else 
            ap_phi_mux_phi_ln870_16_phi_fu_5980_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_17_phi_fu_6045_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042;
            end if;
        else 
            ap_phi_mux_phi_ln870_17_phi_fu_6045_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_18_phi_fu_6110_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107;
            end if;
        else 
            ap_phi_mux_phi_ln870_18_phi_fu_6110_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_19_phi_fu_6175_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172;
            end if;
        else 
            ap_phi_mux_phi_ln870_19_phi_fu_6175_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_1_phi_fu_5025_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022;
            end if;
        else 
            ap_phi_mux_phi_ln870_1_phi_fu_5025_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_20_phi_fu_6240_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237;
            end if;
        else 
            ap_phi_mux_phi_ln870_20_phi_fu_6240_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_21_phi_fu_6305_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302;
            end if;
        else 
            ap_phi_mux_phi_ln870_21_phi_fu_6305_p40 <= ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_22_phi_fu_6370_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367;
            end if;
        else 
            ap_phi_mux_phi_ln870_22_phi_fu_6370_p40 <= ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_2_phi_fu_5135_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132;
            end if;
        else 
            ap_phi_mux_phi_ln870_2_phi_fu_5135_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_3_phi_fu_5200_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197;
            end if;
        else 
            ap_phi_mux_phi_ln870_3_phi_fu_5200_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_4_phi_fu_5265_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262;
            end if;
        else 
            ap_phi_mux_phi_ln870_4_phi_fu_5265_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_5_phi_fu_5330_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327;
            end if;
        else 
            ap_phi_mux_phi_ln870_5_phi_fu_5330_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_6_phi_fu_5395_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392;
            end if;
        else 
            ap_phi_mux_phi_ln870_6_phi_fu_5395_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_7_phi_fu_5460_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_A, inA_1_Dout_A, inA_2_Dout_A, inA_3_Dout_A, inA_4_Dout_A, inA_5_Dout_A, inA_6_Dout_A, inA_7_Dout_A, inA_8_Dout_A, inA_9_Dout_A, inA_10_Dout_A, inA_11_Dout_A, inA_12_Dout_A, inA_13_Dout_A, inA_14_Dout_A, inA_15_Dout_A, inA_16_Dout_A, inA_17_Dout_A, inA_18_Dout_A, inA_19_Dout_A, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_19_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_18_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_17_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_16_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_15_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_14_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_13_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_12_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_11_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_10_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_9_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_8_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_7_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_6_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_5_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_4_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_3_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_2_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_1_Dout_A;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= inA_0_Dout_A;
            else 
                ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457;
            end if;
        else 
            ap_phi_mux_phi_ln870_7_phi_fu_5460_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_8_phi_fu_5525_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522;
            end if;
        else 
            ap_phi_mux_phi_ln870_8_phi_fu_5525_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_9_phi_fu_4895_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892;
            end if;
        else 
            ap_phi_mux_phi_ln870_9_phi_fu_4895_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892;
        end if; 
    end process;


    ap_phi_mux_phi_ln870_phi_fu_4960_p40_assign_proc : process(icmp_ln1057_reg_9481, inA_0_Dout_B, inA_1_Dout_B, inA_2_Dout_B, inA_3_Dout_B, inA_4_Dout_B, inA_5_Dout_B, inA_6_Dout_B, inA_7_Dout_B, inA_8_Dout_B, inA_9_Dout_B, inA_10_Dout_B, inA_11_Dout_B, inA_12_Dout_B, inA_13_Dout_B, inA_14_Dout_B, inA_15_Dout_B, inA_16_Dout_B, inA_17_Dout_B, inA_18_Dout_B, inA_19_Dout_B, select_ln1057_reg_9495, ap_phi_reg_pp0_iter0_phi_ln870_reg_4957, ap_condition_3492)
    begin
        if ((icmp_ln1057_reg_9481 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_3492)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_19_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_12)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_18_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_11)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_17_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_10)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_16_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_F)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_15_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_E)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_14_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_D)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_13_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_C)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_12_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_B)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_11_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_A)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_10_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_9)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_9_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_8)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_8_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_7)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_7_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_6)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_6_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_5)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_5_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_4)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_4_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_3)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_3_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_2)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_2_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_1)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_1_Dout_B;
            elsif ((select_ln1057_reg_9495 = ap_const_lv5_0)) then 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= inA_0_Dout_B;
            else 
                ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_reg_4957;
            end if;
        else 
            ap_phi_mux_phi_ln870_phi_fu_4960_p40 <= ap_phi_reg_pp0_iter0_phi_ln870_reg_4957;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_phi_ln870_10_reg_5587 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_11_reg_5652 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_12_reg_5717 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_13_reg_5782 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_14_reg_5847 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_15_reg_5912 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_16_reg_5977 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_17_reg_6042 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_18_reg_6107 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_19_reg_6172 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_1_reg_5022 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_20_reg_6237 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_2_reg_5132 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_3_reg_5197 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_4_reg_5262 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_5_reg_5327 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_6_reg_5392 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_7_reg_5457 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_8_reg_5522 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_9_reg_4892 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln870_reg_4957 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_phi_ln870_21_reg_6302 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_phi_ln870_22_reg_6367 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage11_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_i_V_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, i_V_fu_272)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_V_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_i_V_load <= i_V_fu_272;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_276)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv8_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_276;
        end if; 
    end process;


    ap_sig_allocacmp_j_V_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0, j_V_fu_268, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_V_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_j_V_load <= j_V_fu_268;
        end if; 
    end process;

    grp_fu_7053_p0 <= inB_23_load_reg_9644(10 - 1 downto 0);
    grp_fu_7053_p1 <= ap_phi_reg_pp0_iter0_phi_ln870_23_reg_5087(10 - 1 downto 0);
    icmp_ln1057_1_fu_6468_p2 <= "1" when (ap_sig_allocacmp_j_V_load = ap_const_lv4_A) else "0";
    icmp_ln1057_fu_6450_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv8_C8) else "0";
    inA_0_Addr_A <= std_logic_vector(shift_left(unsigned(inA_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_0_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_0_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_0_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_0_Addr_B <= std_logic_vector(shift_left(unsigned(inA_0_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_0_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_0_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_0_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_0_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_0_Clk_A <= ap_clk;
    inA_0_Clk_B <= ap_clk;
    inA_0_Din_A <= ap_const_lv32_0;
    inA_0_Din_B <= ap_const_lv32_0;

    inA_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_0_EN_A <= ap_const_logic_1;
        else 
            inA_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_0_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_0_EN_B <= ap_const_logic_1;
        else 
            inA_0_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_0_Rst_A <= ap_rst_n_inv;
    inA_0_Rst_B <= ap_rst_n_inv;
    inA_0_WEN_A <= ap_const_lv4_0;
    inA_0_WEN_B <= ap_const_lv4_0;
    inA_10_Addr_A <= std_logic_vector(shift_left(unsigned(inA_10_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_10_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_10_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_10_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_10_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_10_Addr_B <= std_logic_vector(shift_left(unsigned(inA_10_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_10_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_10_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_10_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_10_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_10_Clk_A <= ap_clk;
    inA_10_Clk_B <= ap_clk;
    inA_10_Din_A <= ap_const_lv32_0;
    inA_10_Din_B <= ap_const_lv32_0;

    inA_10_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_10_EN_A <= ap_const_logic_1;
        else 
            inA_10_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_10_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_10_EN_B <= ap_const_logic_1;
        else 
            inA_10_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_10_Rst_A <= ap_rst_n_inv;
    inA_10_Rst_B <= ap_rst_n_inv;
    inA_10_WEN_A <= ap_const_lv4_0;
    inA_10_WEN_B <= ap_const_lv4_0;
    inA_11_Addr_A <= std_logic_vector(shift_left(unsigned(inA_11_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_11_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_11_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_11_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_11_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_11_Addr_B <= std_logic_vector(shift_left(unsigned(inA_11_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_11_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_11_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_11_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_11_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_11_Clk_A <= ap_clk;
    inA_11_Clk_B <= ap_clk;
    inA_11_Din_A <= ap_const_lv32_0;
    inA_11_Din_B <= ap_const_lv32_0;

    inA_11_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_11_EN_A <= ap_const_logic_1;
        else 
            inA_11_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_11_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_11_EN_B <= ap_const_logic_1;
        else 
            inA_11_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_11_Rst_A <= ap_rst_n_inv;
    inA_11_Rst_B <= ap_rst_n_inv;
    inA_11_WEN_A <= ap_const_lv4_0;
    inA_11_WEN_B <= ap_const_lv4_0;
    inA_12_Addr_A <= std_logic_vector(shift_left(unsigned(inA_12_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_12_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_12_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_12_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_12_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_12_Addr_B <= std_logic_vector(shift_left(unsigned(inA_12_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_12_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_12_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_12_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_12_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_12_Clk_A <= ap_clk;
    inA_12_Clk_B <= ap_clk;
    inA_12_Din_A <= ap_const_lv32_0;
    inA_12_Din_B <= ap_const_lv32_0;

    inA_12_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_12_EN_A <= ap_const_logic_1;
        else 
            inA_12_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_12_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_12_EN_B <= ap_const_logic_1;
        else 
            inA_12_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_12_Rst_A <= ap_rst_n_inv;
    inA_12_Rst_B <= ap_rst_n_inv;
    inA_12_WEN_A <= ap_const_lv4_0;
    inA_12_WEN_B <= ap_const_lv4_0;
    inA_13_Addr_A <= std_logic_vector(shift_left(unsigned(inA_13_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_13_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_13_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_13_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_13_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_13_Addr_B <= std_logic_vector(shift_left(unsigned(inA_13_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_13_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_13_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_13_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_13_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_13_Clk_A <= ap_clk;
    inA_13_Clk_B <= ap_clk;
    inA_13_Din_A <= ap_const_lv32_0;
    inA_13_Din_B <= ap_const_lv32_0;

    inA_13_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_13_EN_A <= ap_const_logic_1;
        else 
            inA_13_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_13_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_13_EN_B <= ap_const_logic_1;
        else 
            inA_13_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_13_Rst_A <= ap_rst_n_inv;
    inA_13_Rst_B <= ap_rst_n_inv;
    inA_13_WEN_A <= ap_const_lv4_0;
    inA_13_WEN_B <= ap_const_lv4_0;
    inA_14_Addr_A <= std_logic_vector(shift_left(unsigned(inA_14_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_14_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_14_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_14_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_14_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_14_Addr_B <= std_logic_vector(shift_left(unsigned(inA_14_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_14_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_14_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_14_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_14_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_14_Clk_A <= ap_clk;
    inA_14_Clk_B <= ap_clk;
    inA_14_Din_A <= ap_const_lv32_0;
    inA_14_Din_B <= ap_const_lv32_0;

    inA_14_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_14_EN_A <= ap_const_logic_1;
        else 
            inA_14_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_14_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_14_EN_B <= ap_const_logic_1;
        else 
            inA_14_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_14_Rst_A <= ap_rst_n_inv;
    inA_14_Rst_B <= ap_rst_n_inv;
    inA_14_WEN_A <= ap_const_lv4_0;
    inA_14_WEN_B <= ap_const_lv4_0;
    inA_15_Addr_A <= std_logic_vector(shift_left(unsigned(inA_15_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_15_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_15_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_15_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_15_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_15_Addr_B <= std_logic_vector(shift_left(unsigned(inA_15_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_15_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_15_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_15_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_15_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_15_Clk_A <= ap_clk;
    inA_15_Clk_B <= ap_clk;
    inA_15_Din_A <= ap_const_lv32_0;
    inA_15_Din_B <= ap_const_lv32_0;

    inA_15_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_15_EN_A <= ap_const_logic_1;
        else 
            inA_15_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_15_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_15_EN_B <= ap_const_logic_1;
        else 
            inA_15_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_15_Rst_A <= ap_rst_n_inv;
    inA_15_Rst_B <= ap_rst_n_inv;
    inA_15_WEN_A <= ap_const_lv4_0;
    inA_15_WEN_B <= ap_const_lv4_0;
    inA_16_Addr_A <= std_logic_vector(shift_left(unsigned(inA_16_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_16_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_16_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_16_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_16_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_16_Addr_B <= std_logic_vector(shift_left(unsigned(inA_16_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_16_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_16_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_16_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_16_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_16_Clk_A <= ap_clk;
    inA_16_Clk_B <= ap_clk;
    inA_16_Din_A <= ap_const_lv32_0;
    inA_16_Din_B <= ap_const_lv32_0;

    inA_16_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_16_EN_A <= ap_const_logic_1;
        else 
            inA_16_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_16_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_16_EN_B <= ap_const_logic_1;
        else 
            inA_16_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_16_Rst_A <= ap_rst_n_inv;
    inA_16_Rst_B <= ap_rst_n_inv;
    inA_16_WEN_A <= ap_const_lv4_0;
    inA_16_WEN_B <= ap_const_lv4_0;
    inA_17_Addr_A <= std_logic_vector(shift_left(unsigned(inA_17_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_17_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_17_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_17_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_17_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_17_Addr_B <= std_logic_vector(shift_left(unsigned(inA_17_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_17_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_17_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_17_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_17_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_17_Clk_A <= ap_clk;
    inA_17_Clk_B <= ap_clk;
    inA_17_Din_A <= ap_const_lv32_0;
    inA_17_Din_B <= ap_const_lv32_0;

    inA_17_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_17_EN_A <= ap_const_logic_1;
        else 
            inA_17_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_17_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_17_EN_B <= ap_const_logic_1;
        else 
            inA_17_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_17_Rst_A <= ap_rst_n_inv;
    inA_17_Rst_B <= ap_rst_n_inv;
    inA_17_WEN_A <= ap_const_lv4_0;
    inA_17_WEN_B <= ap_const_lv4_0;
    inA_18_Addr_A <= std_logic_vector(shift_left(unsigned(inA_18_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_18_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_18_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_18_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_18_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_18_Addr_B <= std_logic_vector(shift_left(unsigned(inA_18_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_18_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_18_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_18_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_18_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_18_Clk_A <= ap_clk;
    inA_18_Clk_B <= ap_clk;
    inA_18_Din_A <= ap_const_lv32_0;
    inA_18_Din_B <= ap_const_lv32_0;

    inA_18_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_18_EN_A <= ap_const_logic_1;
        else 
            inA_18_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_18_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_18_EN_B <= ap_const_logic_1;
        else 
            inA_18_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_18_Rst_A <= ap_rst_n_inv;
    inA_18_Rst_B <= ap_rst_n_inv;
    inA_18_WEN_A <= ap_const_lv4_0;
    inA_18_WEN_B <= ap_const_lv4_0;
    inA_19_Addr_A <= std_logic_vector(shift_left(unsigned(inA_19_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_19_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_19_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_19_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_19_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_19_Addr_B <= std_logic_vector(shift_left(unsigned(inA_19_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_19_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_19_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_19_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_19_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_19_Clk_A <= ap_clk;
    inA_19_Clk_B <= ap_clk;
    inA_19_Din_A <= ap_const_lv32_0;
    inA_19_Din_B <= ap_const_lv32_0;

    inA_19_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_19_EN_A <= ap_const_logic_1;
        else 
            inA_19_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_19_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_19_EN_B <= ap_const_logic_1;
        else 
            inA_19_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_19_Rst_A <= ap_rst_n_inv;
    inA_19_Rst_B <= ap_rst_n_inv;
    inA_19_WEN_A <= ap_const_lv4_0;
    inA_19_WEN_B <= ap_const_lv4_0;
    inA_1_Addr_A <= std_logic_vector(shift_left(unsigned(inA_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_1_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_1_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_1_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_1_Addr_B <= std_logic_vector(shift_left(unsigned(inA_1_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_1_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_1_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_1_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_1_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_1_Clk_A <= ap_clk;
    inA_1_Clk_B <= ap_clk;
    inA_1_Din_A <= ap_const_lv32_0;
    inA_1_Din_B <= ap_const_lv32_0;

    inA_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_1_EN_A <= ap_const_logic_1;
        else 
            inA_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_1_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_1_EN_B <= ap_const_logic_1;
        else 
            inA_1_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_1_Rst_A <= ap_rst_n_inv;
    inA_1_Rst_B <= ap_rst_n_inv;
    inA_1_WEN_A <= ap_const_lv4_0;
    inA_1_WEN_B <= ap_const_lv4_0;
    inA_2_Addr_A <= std_logic_vector(shift_left(unsigned(inA_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_2_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_2_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_2_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_2_Addr_B <= std_logic_vector(shift_left(unsigned(inA_2_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_2_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_2_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_2_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_2_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_2_Clk_A <= ap_clk;
    inA_2_Clk_B <= ap_clk;
    inA_2_Din_A <= ap_const_lv32_0;
    inA_2_Din_B <= ap_const_lv32_0;

    inA_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_2_EN_A <= ap_const_logic_1;
        else 
            inA_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_2_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_2_EN_B <= ap_const_logic_1;
        else 
            inA_2_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_2_Rst_A <= ap_rst_n_inv;
    inA_2_Rst_B <= ap_rst_n_inv;
    inA_2_WEN_A <= ap_const_lv4_0;
    inA_2_WEN_B <= ap_const_lv4_0;
    inA_3_Addr_A <= std_logic_vector(shift_left(unsigned(inA_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_3_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_3_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_3_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_3_Addr_B <= std_logic_vector(shift_left(unsigned(inA_3_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_3_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_3_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_3_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_3_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_3_Clk_A <= ap_clk;
    inA_3_Clk_B <= ap_clk;
    inA_3_Din_A <= ap_const_lv32_0;
    inA_3_Din_B <= ap_const_lv32_0;

    inA_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_3_EN_A <= ap_const_logic_1;
        else 
            inA_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_3_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_3_EN_B <= ap_const_logic_1;
        else 
            inA_3_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_3_Rst_A <= ap_rst_n_inv;
    inA_3_Rst_B <= ap_rst_n_inv;
    inA_3_WEN_A <= ap_const_lv4_0;
    inA_3_WEN_B <= ap_const_lv4_0;
    inA_4_Addr_A <= std_logic_vector(shift_left(unsigned(inA_4_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_4_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_4_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_4_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_4_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_4_Addr_B <= std_logic_vector(shift_left(unsigned(inA_4_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_4_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_4_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_4_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_4_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_4_Clk_A <= ap_clk;
    inA_4_Clk_B <= ap_clk;
    inA_4_Din_A <= ap_const_lv32_0;
    inA_4_Din_B <= ap_const_lv32_0;

    inA_4_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_4_EN_A <= ap_const_logic_1;
        else 
            inA_4_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_4_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_4_EN_B <= ap_const_logic_1;
        else 
            inA_4_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_4_Rst_A <= ap_rst_n_inv;
    inA_4_Rst_B <= ap_rst_n_inv;
    inA_4_WEN_A <= ap_const_lv4_0;
    inA_4_WEN_B <= ap_const_lv4_0;
    inA_5_Addr_A <= std_logic_vector(shift_left(unsigned(inA_5_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_5_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_5_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_5_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_5_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_5_Addr_B <= std_logic_vector(shift_left(unsigned(inA_5_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_5_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_5_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_5_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_5_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_5_Clk_A <= ap_clk;
    inA_5_Clk_B <= ap_clk;
    inA_5_Din_A <= ap_const_lv32_0;
    inA_5_Din_B <= ap_const_lv32_0;

    inA_5_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_5_EN_A <= ap_const_logic_1;
        else 
            inA_5_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_5_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_5_EN_B <= ap_const_logic_1;
        else 
            inA_5_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_5_Rst_A <= ap_rst_n_inv;
    inA_5_Rst_B <= ap_rst_n_inv;
    inA_5_WEN_A <= ap_const_lv4_0;
    inA_5_WEN_B <= ap_const_lv4_0;
    inA_6_Addr_A <= std_logic_vector(shift_left(unsigned(inA_6_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_6_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_6_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_6_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_6_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_6_Addr_B <= std_logic_vector(shift_left(unsigned(inA_6_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_6_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_6_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_6_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_6_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_6_Clk_A <= ap_clk;
    inA_6_Clk_B <= ap_clk;
    inA_6_Din_A <= ap_const_lv32_0;
    inA_6_Din_B <= ap_const_lv32_0;

    inA_6_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_6_EN_A <= ap_const_logic_1;
        else 
            inA_6_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_6_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_6_EN_B <= ap_const_logic_1;
        else 
            inA_6_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_6_Rst_A <= ap_rst_n_inv;
    inA_6_Rst_B <= ap_rst_n_inv;
    inA_6_WEN_A <= ap_const_lv4_0;
    inA_6_WEN_B <= ap_const_lv4_0;
    inA_7_Addr_A <= std_logic_vector(shift_left(unsigned(inA_7_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_7_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_7_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_7_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_7_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_7_Addr_B <= std_logic_vector(shift_left(unsigned(inA_7_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_7_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_7_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_7_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_7_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_7_Clk_A <= ap_clk;
    inA_7_Clk_B <= ap_clk;
    inA_7_Din_A <= ap_const_lv32_0;
    inA_7_Din_B <= ap_const_lv32_0;

    inA_7_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_7_EN_A <= ap_const_logic_1;
        else 
            inA_7_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_7_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_7_EN_B <= ap_const_logic_1;
        else 
            inA_7_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_7_Rst_A <= ap_rst_n_inv;
    inA_7_Rst_B <= ap_rst_n_inv;
    inA_7_WEN_A <= ap_const_lv4_0;
    inA_7_WEN_B <= ap_const_lv4_0;
    inA_8_Addr_A <= std_logic_vector(shift_left(unsigned(inA_8_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_8_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_8_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_8_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_8_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_8_Addr_B <= std_logic_vector(shift_left(unsigned(inA_8_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_8_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_8_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_8_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_8_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_8_Clk_A <= ap_clk;
    inA_8_Clk_B <= ap_clk;
    inA_8_Din_A <= ap_const_lv32_0;
    inA_8_Din_B <= ap_const_lv32_0;

    inA_8_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_8_EN_A <= ap_const_logic_1;
        else 
            inA_8_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_8_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_8_EN_B <= ap_const_logic_1;
        else 
            inA_8_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_8_Rst_A <= ap_rst_n_inv;
    inA_8_Rst_B <= ap_rst_n_inv;
    inA_8_WEN_A <= ap_const_lv4_0;
    inA_8_WEN_B <= ap_const_lv4_0;
    inA_9_Addr_A <= std_logic_vector(shift_left(unsigned(inA_9_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_9_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_16(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_14(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_12(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_10(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_E(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_C(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_A(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_7(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_5(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_3(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_1(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_9_Addr_A_orig <= ap_const_lv64_17(32 - 1 downto 0);
            else 
                inA_9_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_9_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_9_Addr_B <= std_logic_vector(shift_left(unsigned(inA_9_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    inA_9_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage8, ap_block_pp0_stage9, ap_block_pp0_stage10, ap_block_pp0_stage11)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_15(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_13(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_11(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_F(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_D(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_B(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_8(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_6(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_4(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_2(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_0(32 - 1 downto 0);
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                inA_9_Addr_B_orig <= ap_const_lv64_9(32 - 1 downto 0);
            else 
                inA_9_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            inA_9_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    inA_9_Clk_A <= ap_clk;
    inA_9_Clk_B <= ap_clk;
    inA_9_Din_A <= ap_const_lv32_0;
    inA_9_Din_B <= ap_const_lv32_0;

    inA_9_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_9_EN_A <= ap_const_logic_1;
        else 
            inA_9_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    inA_9_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11)) or ((ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10)) or ((ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9)) or ((ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            inA_9_EN_B <= ap_const_logic_1;
        else 
            inA_9_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    inA_9_Rst_A <= ap_rst_n_inv;
    inA_9_Rst_B <= ap_rst_n_inv;
    inA_9_WEN_A <= ap_const_lv4_0;
    inA_9_WEN_B <= ap_const_lv4_0;
    inB_0_Addr_A <= std_logic_vector(shift_left(unsigned(inB_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_0_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_0_Clk_A <= ap_clk;
    inB_0_Din_A <= ap_const_lv32_0;

    inB_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_0_EN_A <= ap_const_logic_1;
        else 
            inB_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_0_Rst_A <= ap_rst_n_inv;
    inB_0_WEN_A <= ap_const_lv4_0;
    inB_10_Addr_A <= std_logic_vector(shift_left(unsigned(inB_10_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_10_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_10_Clk_A <= ap_clk;
    inB_10_Din_A <= ap_const_lv32_0;

    inB_10_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_10_EN_A <= ap_const_logic_1;
        else 
            inB_10_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_10_Rst_A <= ap_rst_n_inv;
    inB_10_WEN_A <= ap_const_lv4_0;
    inB_11_Addr_A <= std_logic_vector(shift_left(unsigned(inB_11_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_11_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_11_Clk_A <= ap_clk;
    inB_11_Din_A <= ap_const_lv32_0;

    inB_11_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_11_EN_A <= ap_const_logic_1;
        else 
            inB_11_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_11_Rst_A <= ap_rst_n_inv;
    inB_11_WEN_A <= ap_const_lv4_0;
    inB_12_Addr_A <= std_logic_vector(shift_left(unsigned(inB_12_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_12_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_12_Clk_A <= ap_clk;
    inB_12_Din_A <= ap_const_lv32_0;

    inB_12_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_12_EN_A <= ap_const_logic_1;
        else 
            inB_12_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_12_Rst_A <= ap_rst_n_inv;
    inB_12_WEN_A <= ap_const_lv4_0;
    inB_13_Addr_A <= std_logic_vector(shift_left(unsigned(inB_13_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_13_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_13_Clk_A <= ap_clk;
    inB_13_Din_A <= ap_const_lv32_0;

    inB_13_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_13_EN_A <= ap_const_logic_1;
        else 
            inB_13_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_13_Rst_A <= ap_rst_n_inv;
    inB_13_WEN_A <= ap_const_lv4_0;
    inB_14_Addr_A <= std_logic_vector(shift_left(unsigned(inB_14_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_14_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_14_Clk_A <= ap_clk;
    inB_14_Din_A <= ap_const_lv32_0;

    inB_14_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_14_EN_A <= ap_const_logic_1;
        else 
            inB_14_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_14_Rst_A <= ap_rst_n_inv;
    inB_14_WEN_A <= ap_const_lv4_0;
    inB_15_Addr_A <= std_logic_vector(shift_left(unsigned(inB_15_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_15_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_15_Clk_A <= ap_clk;
    inB_15_Din_A <= ap_const_lv32_0;

    inB_15_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_15_EN_A <= ap_const_logic_1;
        else 
            inB_15_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_15_Rst_A <= ap_rst_n_inv;
    inB_15_WEN_A <= ap_const_lv4_0;
    inB_16_Addr_A <= std_logic_vector(shift_left(unsigned(inB_16_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_16_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_16_Clk_A <= ap_clk;
    inB_16_Din_A <= ap_const_lv32_0;

    inB_16_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_16_EN_A <= ap_const_logic_1;
        else 
            inB_16_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_16_Rst_A <= ap_rst_n_inv;
    inB_16_WEN_A <= ap_const_lv4_0;
    inB_17_Addr_A <= std_logic_vector(shift_left(unsigned(inB_17_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_17_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_17_Clk_A <= ap_clk;
    inB_17_Din_A <= ap_const_lv32_0;

    inB_17_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_17_EN_A <= ap_const_logic_1;
        else 
            inB_17_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_17_Rst_A <= ap_rst_n_inv;
    inB_17_WEN_A <= ap_const_lv4_0;
    inB_18_Addr_A <= std_logic_vector(shift_left(unsigned(inB_18_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_18_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_18_Clk_A <= ap_clk;
    inB_18_Din_A <= ap_const_lv32_0;

    inB_18_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_18_EN_A <= ap_const_logic_1;
        else 
            inB_18_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_18_Rst_A <= ap_rst_n_inv;
    inB_18_WEN_A <= ap_const_lv4_0;
    inB_19_Addr_A <= std_logic_vector(shift_left(unsigned(inB_19_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_19_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_19_Clk_A <= ap_clk;
    inB_19_Din_A <= ap_const_lv32_0;

    inB_19_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_19_EN_A <= ap_const_logic_1;
        else 
            inB_19_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_19_Rst_A <= ap_rst_n_inv;
    inB_19_WEN_A <= ap_const_lv4_0;
    inB_1_Addr_A <= std_logic_vector(shift_left(unsigned(inB_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_1_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_1_Clk_A <= ap_clk;
    inB_1_Din_A <= ap_const_lv32_0;

    inB_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_1_EN_A <= ap_const_logic_1;
        else 
            inB_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_1_Rst_A <= ap_rst_n_inv;
    inB_1_WEN_A <= ap_const_lv4_0;
    inB_20_Addr_A <= std_logic_vector(shift_left(unsigned(inB_20_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_20_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_20_Clk_A <= ap_clk;
    inB_20_Din_A <= ap_const_lv32_0;

    inB_20_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_20_EN_A <= ap_const_logic_1;
        else 
            inB_20_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_20_Rst_A <= ap_rst_n_inv;
    inB_20_WEN_A <= ap_const_lv4_0;
    inB_21_Addr_A <= std_logic_vector(shift_left(unsigned(inB_21_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_21_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_21_Clk_A <= ap_clk;
    inB_21_Din_A <= ap_const_lv32_0;

    inB_21_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_21_EN_A <= ap_const_logic_1;
        else 
            inB_21_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_21_Rst_A <= ap_rst_n_inv;
    inB_21_WEN_A <= ap_const_lv4_0;
    inB_22_Addr_A <= std_logic_vector(shift_left(unsigned(inB_22_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_22_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_22_Clk_A <= ap_clk;
    inB_22_Din_A <= ap_const_lv32_0;

    inB_22_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_22_EN_A <= ap_const_logic_1;
        else 
            inB_22_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_22_Rst_A <= ap_rst_n_inv;
    inB_22_WEN_A <= ap_const_lv4_0;
    inB_23_Addr_A <= std_logic_vector(shift_left(unsigned(inB_23_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_23_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_23_Clk_A <= ap_clk;
    inB_23_Din_A <= ap_const_lv32_0;

    inB_23_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_23_EN_A <= ap_const_logic_1;
        else 
            inB_23_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_23_Rst_A <= ap_rst_n_inv;
    inB_23_WEN_A <= ap_const_lv4_0;
    inB_2_Addr_A <= std_logic_vector(shift_left(unsigned(inB_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_2_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_2_Clk_A <= ap_clk;
    inB_2_Din_A <= ap_const_lv32_0;

    inB_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_2_EN_A <= ap_const_logic_1;
        else 
            inB_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_2_Rst_A <= ap_rst_n_inv;
    inB_2_WEN_A <= ap_const_lv4_0;
    inB_3_Addr_A <= std_logic_vector(shift_left(unsigned(inB_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_3_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_3_Clk_A <= ap_clk;
    inB_3_Din_A <= ap_const_lv32_0;

    inB_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_3_EN_A <= ap_const_logic_1;
        else 
            inB_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_3_Rst_A <= ap_rst_n_inv;
    inB_3_WEN_A <= ap_const_lv4_0;
    inB_4_Addr_A <= std_logic_vector(shift_left(unsigned(inB_4_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_4_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_4_Clk_A <= ap_clk;
    inB_4_Din_A <= ap_const_lv32_0;

    inB_4_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_4_EN_A <= ap_const_logic_1;
        else 
            inB_4_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_4_Rst_A <= ap_rst_n_inv;
    inB_4_WEN_A <= ap_const_lv4_0;
    inB_5_Addr_A <= std_logic_vector(shift_left(unsigned(inB_5_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_5_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_5_Clk_A <= ap_clk;
    inB_5_Din_A <= ap_const_lv32_0;

    inB_5_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_5_EN_A <= ap_const_logic_1;
        else 
            inB_5_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_5_Rst_A <= ap_rst_n_inv;
    inB_5_WEN_A <= ap_const_lv4_0;
    inB_6_Addr_A <= std_logic_vector(shift_left(unsigned(inB_6_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_6_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_6_Clk_A <= ap_clk;
    inB_6_Din_A <= ap_const_lv32_0;

    inB_6_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_6_EN_A <= ap_const_logic_1;
        else 
            inB_6_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_6_Rst_A <= ap_rst_n_inv;
    inB_6_WEN_A <= ap_const_lv4_0;
    inB_7_Addr_A <= std_logic_vector(shift_left(unsigned(inB_7_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_7_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_7_Clk_A <= ap_clk;
    inB_7_Din_A <= ap_const_lv32_0;

    inB_7_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_7_EN_A <= ap_const_logic_1;
        else 
            inB_7_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_7_Rst_A <= ap_rst_n_inv;
    inB_7_WEN_A <= ap_const_lv4_0;
    inB_8_Addr_A <= std_logic_vector(shift_left(unsigned(inB_8_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_8_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_8_Clk_A <= ap_clk;
    inB_8_Din_A <= ap_const_lv32_0;

    inB_8_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_8_EN_A <= ap_const_logic_1;
        else 
            inB_8_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_8_Rst_A <= ap_rst_n_inv;
    inB_8_WEN_A <= ap_const_lv4_0;
    inB_9_Addr_A <= std_logic_vector(shift_left(unsigned(inB_9_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    inB_9_Addr_A_orig <= j_V_cast_fu_6496_p1(32 - 1 downto 0);
    inB_9_Clk_A <= ap_clk;
    inB_9_Din_A <= ap_const_lv32_0;

    inB_9_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            inB_9_EN_A <= ap_const_logic_1;
        else 
            inB_9_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    inB_9_Rst_A <= ap_rst_n_inv;
    inB_9_WEN_A <= ap_const_lv4_0;
    j_V_cast_fu_6496_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln18_fu_6474_p3),64));
    mul_ln870_10_fu_6754_p1 <= ap_phi_mux_phi_ln870_10_phi_fu_5590_p40(10 - 1 downto 0);
    mul_ln870_11_fu_6773_p1 <= ap_phi_mux_phi_ln870_11_phi_fu_5655_p40(10 - 1 downto 0);
    mul_ln870_12_fu_6782_p1 <= ap_phi_mux_phi_ln870_12_phi_fu_5720_p40(10 - 1 downto 0);
    mul_ln870_13_fu_6810_p1 <= ap_phi_mux_phi_ln870_13_phi_fu_5785_p40(10 - 1 downto 0);
    mul_ln870_14_fu_6819_p1 <= ap_phi_mux_phi_ln870_14_phi_fu_5850_p40(10 - 1 downto 0);
    mul_ln870_15_fu_6833_p1 <= ap_phi_mux_phi_ln870_15_phi_fu_5915_p40(10 - 1 downto 0);
    mul_ln870_16_fu_6842_p1 <= ap_phi_mux_phi_ln870_16_phi_fu_5980_p40(10 - 1 downto 0);
    mul_ln870_17_fu_6851_p1 <= ap_phi_mux_phi_ln870_17_phi_fu_6045_p40(10 - 1 downto 0);
    mul_ln870_18_fu_6860_p1 <= ap_phi_mux_phi_ln870_18_phi_fu_6110_p40(10 - 1 downto 0);
    mul_ln870_19_fu_6888_p1 <= ap_phi_mux_phi_ln870_19_phi_fu_6175_p40(10 - 1 downto 0);
    mul_ln870_1_fu_6657_p1 <= ap_phi_mux_phi_ln870_1_phi_fu_5025_p40(10 - 1 downto 0);
    mul_ln870_20_fu_6897_p1 <= ap_phi_mux_phi_ln870_20_phi_fu_6240_p40(10 - 1 downto 0);
    mul_ln870_21_fu_6906_p1 <= ap_phi_mux_phi_ln870_21_phi_fu_6305_p40(10 - 1 downto 0);
    mul_ln870_22_fu_6915_p1 <= ap_phi_mux_phi_ln870_22_phi_fu_6370_p40(10 - 1 downto 0);
    mul_ln870_2_fu_6673_p1 <= ap_phi_mux_phi_ln870_2_phi_fu_5135_p40(10 - 1 downto 0);
    mul_ln870_3_fu_6682_p1 <= ap_phi_mux_phi_ln870_3_phi_fu_5200_p40(10 - 1 downto 0);
    mul_ln870_4_fu_6691_p1 <= ap_phi_mux_phi_ln870_4_phi_fu_5265_p40(10 - 1 downto 0);
    mul_ln870_5_fu_6700_p1 <= ap_phi_mux_phi_ln870_5_phi_fu_5330_p40(10 - 1 downto 0);
    mul_ln870_6_fu_6718_p1 <= ap_phi_mux_phi_ln870_6_phi_fu_5395_p40(10 - 1 downto 0);
    mul_ln870_7_fu_6727_p1 <= ap_phi_mux_phi_ln870_7_phi_fu_5460_p40(10 - 1 downto 0);
    mul_ln870_8_fu_6745_p1 <= ap_phi_mux_phi_ln870_8_phi_fu_5525_p40(10 - 1 downto 0);
    mul_ln870_9_fu_6568_p0 <= inB_9_Dout_A(10 - 1 downto 0);
    mul_ln870_9_fu_6568_p1 <= ap_phi_mux_phi_ln870_9_phi_fu_4895_p40(10 - 1 downto 0);
    mul_ln870_fu_6648_p1 <= ap_phi_mux_phi_ln870_phi_fu_4960_p40(10 - 1 downto 0);
    out_0_Addr_A <= std_logic_vector(shift_left(unsigned(out_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_0_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_0_Clk_A <= ap_clk;
    out_0_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_0_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_0_EN_A <= ap_const_logic_1;
        else 
            out_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_0_Rst_A <= ap_rst_n_inv;

    out_0_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_0))) then 
            out_0_WEN_A <= ap_const_lv4_7;
        else 
            out_0_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_10_Addr_A <= std_logic_vector(shift_left(unsigned(out_10_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_10_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_10_Clk_A <= ap_clk;
    out_10_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_10_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_10_EN_A <= ap_const_logic_1;
        else 
            out_10_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_10_Rst_A <= ap_rst_n_inv;

    out_10_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_A))) then 
            out_10_WEN_A <= ap_const_lv4_7;
        else 
            out_10_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_11_Addr_A <= std_logic_vector(shift_left(unsigned(out_11_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_11_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_11_Clk_A <= ap_clk;
    out_11_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_11_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_11_EN_A <= ap_const_logic_1;
        else 
            out_11_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_11_Rst_A <= ap_rst_n_inv;

    out_11_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_B))) then 
            out_11_WEN_A <= ap_const_lv4_7;
        else 
            out_11_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_12_Addr_A <= std_logic_vector(shift_left(unsigned(out_12_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_12_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_12_Clk_A <= ap_clk;
    out_12_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_12_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_12_EN_A <= ap_const_logic_1;
        else 
            out_12_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_12_Rst_A <= ap_rst_n_inv;

    out_12_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_C))) then 
            out_12_WEN_A <= ap_const_lv4_7;
        else 
            out_12_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_13_Addr_A <= std_logic_vector(shift_left(unsigned(out_13_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_13_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_13_Clk_A <= ap_clk;
    out_13_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_13_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_13_EN_A <= ap_const_logic_1;
        else 
            out_13_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_13_Rst_A <= ap_rst_n_inv;

    out_13_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_D))) then 
            out_13_WEN_A <= ap_const_lv4_7;
        else 
            out_13_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_14_Addr_A <= std_logic_vector(shift_left(unsigned(out_14_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_14_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_14_Clk_A <= ap_clk;
    out_14_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_14_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_14_EN_A <= ap_const_logic_1;
        else 
            out_14_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_14_Rst_A <= ap_rst_n_inv;

    out_14_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_E))) then 
            out_14_WEN_A <= ap_const_lv4_7;
        else 
            out_14_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_15_Addr_A <= std_logic_vector(shift_left(unsigned(out_15_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_15_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_15_Clk_A <= ap_clk;
    out_15_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_15_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_15_EN_A <= ap_const_logic_1;
        else 
            out_15_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_15_Rst_A <= ap_rst_n_inv;

    out_15_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_F))) then 
            out_15_WEN_A <= ap_const_lv4_7;
        else 
            out_15_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_16_Addr_A <= std_logic_vector(shift_left(unsigned(out_16_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_16_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_16_Clk_A <= ap_clk;
    out_16_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_16_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_16_EN_A <= ap_const_logic_1;
        else 
            out_16_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_16_Rst_A <= ap_rst_n_inv;

    out_16_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_10))) then 
            out_16_WEN_A <= ap_const_lv4_7;
        else 
            out_16_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_17_Addr_A <= std_logic_vector(shift_left(unsigned(out_17_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_17_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_17_Clk_A <= ap_clk;
    out_17_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_17_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_17_EN_A <= ap_const_logic_1;
        else 
            out_17_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_17_Rst_A <= ap_rst_n_inv;

    out_17_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_11))) then 
            out_17_WEN_A <= ap_const_lv4_7;
        else 
            out_17_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_18_Addr_A <= std_logic_vector(shift_left(unsigned(out_18_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_18_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_18_Clk_A <= ap_clk;
    out_18_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_18_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_18_EN_A <= ap_const_logic_1;
        else 
            out_18_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_18_Rst_A <= ap_rst_n_inv;

    out_18_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_12))) then 
            out_18_WEN_A <= ap_const_lv4_7;
        else 
            out_18_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_19_Addr_A <= std_logic_vector(shift_left(unsigned(out_19_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_19_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_19_Clk_A <= ap_clk;
    out_19_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_19_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_19_EN_A <= ap_const_logic_1;
        else 
            out_19_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_19_Rst_A <= ap_rst_n_inv;

    out_19_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_13) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_14) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_15) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_16) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_17) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_18) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_19) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_1A) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_1B) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_1C) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_1D) or ((select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_1E) or (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_1F))))))))))))))) then 
            out_19_WEN_A <= ap_const_lv4_7;
        else 
            out_19_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_1_Addr_A <= std_logic_vector(shift_left(unsigned(out_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_1_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_1_Clk_A <= ap_clk;
    out_1_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_1_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_1_EN_A <= ap_const_logic_1;
        else 
            out_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_1_Rst_A <= ap_rst_n_inv;

    out_1_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_1))) then 
            out_1_WEN_A <= ap_const_lv4_7;
        else 
            out_1_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_2_Addr_A <= std_logic_vector(shift_left(unsigned(out_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_2_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_2_Clk_A <= ap_clk;
    out_2_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_2_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_2_EN_A <= ap_const_logic_1;
        else 
            out_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_2_Rst_A <= ap_rst_n_inv;

    out_2_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_2))) then 
            out_2_WEN_A <= ap_const_lv4_7;
        else 
            out_2_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_3_Addr_A <= std_logic_vector(shift_left(unsigned(out_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_3_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_3_Clk_A <= ap_clk;
    out_3_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_3_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_3_EN_A <= ap_const_logic_1;
        else 
            out_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_3_Rst_A <= ap_rst_n_inv;

    out_3_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_3))) then 
            out_3_WEN_A <= ap_const_lv4_7;
        else 
            out_3_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_4_Addr_A <= std_logic_vector(shift_left(unsigned(out_4_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_4_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_4_Clk_A <= ap_clk;
    out_4_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_4_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_4_EN_A <= ap_const_logic_1;
        else 
            out_4_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_4_Rst_A <= ap_rst_n_inv;

    out_4_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_4))) then 
            out_4_WEN_A <= ap_const_lv4_7;
        else 
            out_4_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_5_Addr_A <= std_logic_vector(shift_left(unsigned(out_5_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_5_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_5_Clk_A <= ap_clk;
    out_5_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_5_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_5_EN_A <= ap_const_logic_1;
        else 
            out_5_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_5_Rst_A <= ap_rst_n_inv;

    out_5_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_5))) then 
            out_5_WEN_A <= ap_const_lv4_7;
        else 
            out_5_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_6_Addr_A <= std_logic_vector(shift_left(unsigned(out_6_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_6_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_6_Clk_A <= ap_clk;
    out_6_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_6_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_6_EN_A <= ap_const_logic_1;
        else 
            out_6_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_6_Rst_A <= ap_rst_n_inv;

    out_6_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_6))) then 
            out_6_WEN_A <= ap_const_lv4_7;
        else 
            out_6_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_7_Addr_A <= std_logic_vector(shift_left(unsigned(out_7_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_7_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_7_Clk_A <= ap_clk;
    out_7_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_7_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_7_EN_A <= ap_const_logic_1;
        else 
            out_7_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_7_Rst_A <= ap_rst_n_inv;

    out_7_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_7))) then 
            out_7_WEN_A <= ap_const_lv4_7;
        else 
            out_7_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_8_Addr_A <= std_logic_vector(shift_left(unsigned(out_8_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_8_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_8_Clk_A <= ap_clk;
    out_8_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_8_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_8_EN_A <= ap_const_logic_1;
        else 
            out_8_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_8_Rst_A <= ap_rst_n_inv;

    out_8_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_8))) then 
            out_8_WEN_A <= ap_const_lv4_7;
        else 
            out_8_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    out_9_Addr_A <= std_logic_vector(shift_left(unsigned(out_9_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    out_9_Addr_A_orig <= j_V_cast_reg_9500_pp0_iter1_reg(32 - 1 downto 0);
    out_9_Clk_A <= ap_clk;
    out_9_Din_A <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln870_24_fu_6948_p2),32));

    out_9_EN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            out_9_EN_A <= ap_const_logic_1;
        else 
            out_9_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    out_9_Rst_A <= ap_rst_n_inv;

    out_9_WEN_A_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, select_ln1057_reg_9495_pp0_iter1_reg, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln1057_reg_9495_pp0_iter1_reg = ap_const_lv5_9))) then 
            out_9_WEN_A <= ap_const_lv4_7;
        else 
            out_9_WEN_A <= ap_const_lv4_0;
        end if; 
    end process;

    select_ln1057_fu_6488_p3 <= 
        add_ln870_fu_6482_p2 when (icmp_ln1057_1_fu_6468_p2(0) = '1') else 
        ap_sig_allocacmp_i_V_load;
    select_ln18_fu_6474_p3 <= 
        ap_const_lv4_0 when (icmp_ln1057_1_fu_6468_p2(0) = '1') else 
        ap_sig_allocacmp_j_V_load;
    trunc_ln870_10_fu_6574_p1 <= inB_10_Dout_A(10 - 1 downto 0);
    trunc_ln870_11_fu_6578_p1 <= inB_11_Dout_A(10 - 1 downto 0);
    trunc_ln870_12_fu_6582_p1 <= inB_12_Dout_A(10 - 1 downto 0);
    trunc_ln870_13_fu_6586_p1 <= inB_13_Dout_A(10 - 1 downto 0);
    trunc_ln870_14_fu_6590_p1 <= inB_14_Dout_A(10 - 1 downto 0);
    trunc_ln870_15_fu_6594_p1 <= inB_15_Dout_A(10 - 1 downto 0);
    trunc_ln870_16_fu_6598_p1 <= inB_16_Dout_A(10 - 1 downto 0);
    trunc_ln870_17_fu_6602_p1 <= inB_17_Dout_A(10 - 1 downto 0);
    trunc_ln870_18_fu_6606_p1 <= inB_18_Dout_A(10 - 1 downto 0);
    trunc_ln870_19_fu_6610_p1 <= inB_19_Dout_A(10 - 1 downto 0);
    trunc_ln870_1_fu_6528_p1 <= inB_1_Dout_A(10 - 1 downto 0);
    trunc_ln870_20_fu_6614_p1 <= inB_20_Dout_A(10 - 1 downto 0);
    trunc_ln870_21_fu_6618_p1 <= inB_21_Dout_A(10 - 1 downto 0);
    trunc_ln870_22_fu_6622_p1 <= inB_22_Dout_A(10 - 1 downto 0);
    trunc_ln870_2_fu_6532_p1 <= inB_2_Dout_A(10 - 1 downto 0);
    trunc_ln870_3_fu_6536_p1 <= inB_3_Dout_A(10 - 1 downto 0);
    trunc_ln870_4_fu_6540_p1 <= inB_4_Dout_A(10 - 1 downto 0);
    trunc_ln870_5_fu_6544_p1 <= inB_5_Dout_A(10 - 1 downto 0);
    trunc_ln870_6_fu_6548_p1 <= inB_6_Dout_A(10 - 1 downto 0);
    trunc_ln870_7_fu_6552_p1 <= inB_7_Dout_A(10 - 1 downto 0);
    trunc_ln870_8_fu_6556_p1 <= inB_8_Dout_A(10 - 1 downto 0);
    trunc_ln870_fu_6524_p1 <= inB_0_Dout_A(10 - 1 downto 0);
end behav;
