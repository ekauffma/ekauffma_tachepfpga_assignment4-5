// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="arr_mult_2d_arr_mult_2d,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7v585t-ffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.976643,HLS_SYN_LAT=2403,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=602,HLS_SYN_LUT=4186,HLS_VERSION=2021_1}" *)

module arr_mult_2d (
        ap_clk,
        ap_rst_n,
        inA_0_Addr_A,
        inA_0_EN_A,
        inA_0_WEN_A,
        inA_0_Din_A,
        inA_0_Dout_A,
        inA_0_Clk_A,
        inA_0_Rst_A,
        inA_1_Addr_A,
        inA_1_EN_A,
        inA_1_WEN_A,
        inA_1_Din_A,
        inA_1_Dout_A,
        inA_1_Clk_A,
        inA_1_Rst_A,
        inA_2_Addr_A,
        inA_2_EN_A,
        inA_2_WEN_A,
        inA_2_Din_A,
        inA_2_Dout_A,
        inA_2_Clk_A,
        inA_2_Rst_A,
        inA_3_Addr_A,
        inA_3_EN_A,
        inA_3_WEN_A,
        inA_3_Din_A,
        inA_3_Dout_A,
        inA_3_Clk_A,
        inA_3_Rst_A,
        inA_4_Addr_A,
        inA_4_EN_A,
        inA_4_WEN_A,
        inA_4_Din_A,
        inA_4_Dout_A,
        inA_4_Clk_A,
        inA_4_Rst_A,
        inA_5_Addr_A,
        inA_5_EN_A,
        inA_5_WEN_A,
        inA_5_Din_A,
        inA_5_Dout_A,
        inA_5_Clk_A,
        inA_5_Rst_A,
        inA_6_Addr_A,
        inA_6_EN_A,
        inA_6_WEN_A,
        inA_6_Din_A,
        inA_6_Dout_A,
        inA_6_Clk_A,
        inA_6_Rst_A,
        inA_7_Addr_A,
        inA_7_EN_A,
        inA_7_WEN_A,
        inA_7_Din_A,
        inA_7_Dout_A,
        inA_7_Clk_A,
        inA_7_Rst_A,
        inA_8_Addr_A,
        inA_8_EN_A,
        inA_8_WEN_A,
        inA_8_Din_A,
        inA_8_Dout_A,
        inA_8_Clk_A,
        inA_8_Rst_A,
        inA_9_Addr_A,
        inA_9_EN_A,
        inA_9_WEN_A,
        inA_9_Din_A,
        inA_9_Dout_A,
        inA_9_Clk_A,
        inA_9_Rst_A,
        inA_10_Addr_A,
        inA_10_EN_A,
        inA_10_WEN_A,
        inA_10_Din_A,
        inA_10_Dout_A,
        inA_10_Clk_A,
        inA_10_Rst_A,
        inA_11_Addr_A,
        inA_11_EN_A,
        inA_11_WEN_A,
        inA_11_Din_A,
        inA_11_Dout_A,
        inA_11_Clk_A,
        inA_11_Rst_A,
        inA_12_Addr_A,
        inA_12_EN_A,
        inA_12_WEN_A,
        inA_12_Din_A,
        inA_12_Dout_A,
        inA_12_Clk_A,
        inA_12_Rst_A,
        inA_13_Addr_A,
        inA_13_EN_A,
        inA_13_WEN_A,
        inA_13_Din_A,
        inA_13_Dout_A,
        inA_13_Clk_A,
        inA_13_Rst_A,
        inA_14_Addr_A,
        inA_14_EN_A,
        inA_14_WEN_A,
        inA_14_Din_A,
        inA_14_Dout_A,
        inA_14_Clk_A,
        inA_14_Rst_A,
        inA_15_Addr_A,
        inA_15_EN_A,
        inA_15_WEN_A,
        inA_15_Din_A,
        inA_15_Dout_A,
        inA_15_Clk_A,
        inA_15_Rst_A,
        inA_16_Addr_A,
        inA_16_EN_A,
        inA_16_WEN_A,
        inA_16_Din_A,
        inA_16_Dout_A,
        inA_16_Clk_A,
        inA_16_Rst_A,
        inA_17_Addr_A,
        inA_17_EN_A,
        inA_17_WEN_A,
        inA_17_Din_A,
        inA_17_Dout_A,
        inA_17_Clk_A,
        inA_17_Rst_A,
        inA_18_Addr_A,
        inA_18_EN_A,
        inA_18_WEN_A,
        inA_18_Din_A,
        inA_18_Dout_A,
        inA_18_Clk_A,
        inA_18_Rst_A,
        inA_19_Addr_A,
        inA_19_EN_A,
        inA_19_WEN_A,
        inA_19_Din_A,
        inA_19_Dout_A,
        inA_19_Clk_A,
        inA_19_Rst_A,
        inA_20_Addr_A,
        inA_20_EN_A,
        inA_20_WEN_A,
        inA_20_Din_A,
        inA_20_Dout_A,
        inA_20_Clk_A,
        inA_20_Rst_A,
        inA_21_Addr_A,
        inA_21_EN_A,
        inA_21_WEN_A,
        inA_21_Din_A,
        inA_21_Dout_A,
        inA_21_Clk_A,
        inA_21_Rst_A,
        inA_22_Addr_A,
        inA_22_EN_A,
        inA_22_WEN_A,
        inA_22_Din_A,
        inA_22_Dout_A,
        inA_22_Clk_A,
        inA_22_Rst_A,
        inA_23_Addr_A,
        inA_23_EN_A,
        inA_23_WEN_A,
        inA_23_Din_A,
        inA_23_Dout_A,
        inA_23_Clk_A,
        inA_23_Rst_A,
        inB_0_Addr_A,
        inB_0_EN_A,
        inB_0_WEN_A,
        inB_0_Din_A,
        inB_0_Dout_A,
        inB_0_Clk_A,
        inB_0_Rst_A,
        inB_0_Addr_B,
        inB_0_EN_B,
        inB_0_WEN_B,
        inB_0_Din_B,
        inB_0_Dout_B,
        inB_0_Clk_B,
        inB_0_Rst_B,
        inB_1_Addr_A,
        inB_1_EN_A,
        inB_1_WEN_A,
        inB_1_Din_A,
        inB_1_Dout_A,
        inB_1_Clk_A,
        inB_1_Rst_A,
        inB_1_Addr_B,
        inB_1_EN_B,
        inB_1_WEN_B,
        inB_1_Din_B,
        inB_1_Dout_B,
        inB_1_Clk_B,
        inB_1_Rst_B,
        inB_2_Addr_A,
        inB_2_EN_A,
        inB_2_WEN_A,
        inB_2_Din_A,
        inB_2_Dout_A,
        inB_2_Clk_A,
        inB_2_Rst_A,
        inB_2_Addr_B,
        inB_2_EN_B,
        inB_2_WEN_B,
        inB_2_Din_B,
        inB_2_Dout_B,
        inB_2_Clk_B,
        inB_2_Rst_B,
        inB_3_Addr_A,
        inB_3_EN_A,
        inB_3_WEN_A,
        inB_3_Din_A,
        inB_3_Dout_A,
        inB_3_Clk_A,
        inB_3_Rst_A,
        inB_3_Addr_B,
        inB_3_EN_B,
        inB_3_WEN_B,
        inB_3_Din_B,
        inB_3_Dout_B,
        inB_3_Clk_B,
        inB_3_Rst_B,
        inB_4_Addr_A,
        inB_4_EN_A,
        inB_4_WEN_A,
        inB_4_Din_A,
        inB_4_Dout_A,
        inB_4_Clk_A,
        inB_4_Rst_A,
        inB_4_Addr_B,
        inB_4_EN_B,
        inB_4_WEN_B,
        inB_4_Din_B,
        inB_4_Dout_B,
        inB_4_Clk_B,
        inB_4_Rst_B,
        inB_5_Addr_A,
        inB_5_EN_A,
        inB_5_WEN_A,
        inB_5_Din_A,
        inB_5_Dout_A,
        inB_5_Clk_A,
        inB_5_Rst_A,
        inB_5_Addr_B,
        inB_5_EN_B,
        inB_5_WEN_B,
        inB_5_Din_B,
        inB_5_Dout_B,
        inB_5_Clk_B,
        inB_5_Rst_B,
        inB_6_Addr_A,
        inB_6_EN_A,
        inB_6_WEN_A,
        inB_6_Din_A,
        inB_6_Dout_A,
        inB_6_Clk_A,
        inB_6_Rst_A,
        inB_6_Addr_B,
        inB_6_EN_B,
        inB_6_WEN_B,
        inB_6_Din_B,
        inB_6_Dout_B,
        inB_6_Clk_B,
        inB_6_Rst_B,
        inB_7_Addr_A,
        inB_7_EN_A,
        inB_7_WEN_A,
        inB_7_Din_A,
        inB_7_Dout_A,
        inB_7_Clk_A,
        inB_7_Rst_A,
        inB_7_Addr_B,
        inB_7_EN_B,
        inB_7_WEN_B,
        inB_7_Din_B,
        inB_7_Dout_B,
        inB_7_Clk_B,
        inB_7_Rst_B,
        inB_8_Addr_A,
        inB_8_EN_A,
        inB_8_WEN_A,
        inB_8_Din_A,
        inB_8_Dout_A,
        inB_8_Clk_A,
        inB_8_Rst_A,
        inB_8_Addr_B,
        inB_8_EN_B,
        inB_8_WEN_B,
        inB_8_Din_B,
        inB_8_Dout_B,
        inB_8_Clk_B,
        inB_8_Rst_B,
        inB_9_Addr_A,
        inB_9_EN_A,
        inB_9_WEN_A,
        inB_9_Din_A,
        inB_9_Dout_A,
        inB_9_Clk_A,
        inB_9_Rst_A,
        inB_9_Addr_B,
        inB_9_EN_B,
        inB_9_WEN_B,
        inB_9_Din_B,
        inB_9_Dout_B,
        inB_9_Clk_B,
        inB_9_Rst_B,
        out_0_Addr_A,
        out_0_EN_A,
        out_0_WEN_A,
        out_0_Din_A,
        out_0_Dout_A,
        out_0_Clk_A,
        out_0_Rst_A,
        out_1_Addr_A,
        out_1_EN_A,
        out_1_WEN_A,
        out_1_Din_A,
        out_1_Dout_A,
        out_1_Clk_A,
        out_1_Rst_A,
        out_2_Addr_A,
        out_2_EN_A,
        out_2_WEN_A,
        out_2_Din_A,
        out_2_Dout_A,
        out_2_Clk_A,
        out_2_Rst_A,
        out_3_Addr_A,
        out_3_EN_A,
        out_3_WEN_A,
        out_3_Din_A,
        out_3_Dout_A,
        out_3_Clk_A,
        out_3_Rst_A,
        out_4_Addr_A,
        out_4_EN_A,
        out_4_WEN_A,
        out_4_Din_A,
        out_4_Dout_A,
        out_4_Clk_A,
        out_4_Rst_A,
        out_5_Addr_A,
        out_5_EN_A,
        out_5_WEN_A,
        out_5_Din_A,
        out_5_Dout_A,
        out_5_Clk_A,
        out_5_Rst_A,
        out_6_Addr_A,
        out_6_EN_A,
        out_6_WEN_A,
        out_6_Din_A,
        out_6_Dout_A,
        out_6_Clk_A,
        out_6_Rst_A,
        out_7_Addr_A,
        out_7_EN_A,
        out_7_WEN_A,
        out_7_Din_A,
        out_7_Dout_A,
        out_7_Clk_A,
        out_7_Rst_A,
        out_8_Addr_A,
        out_8_EN_A,
        out_8_WEN_A,
        out_8_Din_A,
        out_8_Dout_A,
        out_8_Clk_A,
        out_8_Rst_A,
        out_9_Addr_A,
        out_9_EN_A,
        out_9_WEN_A,
        out_9_Din_A,
        out_9_Dout_A,
        out_9_Clk_A,
        out_9_Rst_A,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_pp0_stage0 = 12'd1;
parameter    ap_ST_fsm_pp0_stage1 = 12'd2;
parameter    ap_ST_fsm_pp0_stage2 = 12'd4;
parameter    ap_ST_fsm_pp0_stage3 = 12'd8;
parameter    ap_ST_fsm_pp0_stage4 = 12'd16;
parameter    ap_ST_fsm_pp0_stage5 = 12'd32;
parameter    ap_ST_fsm_pp0_stage6 = 12'd64;
parameter    ap_ST_fsm_pp0_stage7 = 12'd128;
parameter    ap_ST_fsm_pp0_stage8 = 12'd256;
parameter    ap_ST_fsm_pp0_stage9 = 12'd512;
parameter    ap_ST_fsm_pp0_stage10 = 12'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 12'd2048;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 4;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output  [31:0] inA_0_Addr_A;
output   inA_0_EN_A;
output  [3:0] inA_0_WEN_A;
output  [31:0] inA_0_Din_A;
input  [31:0] inA_0_Dout_A;
output   inA_0_Clk_A;
output   inA_0_Rst_A;
output  [31:0] inA_1_Addr_A;
output   inA_1_EN_A;
output  [3:0] inA_1_WEN_A;
output  [31:0] inA_1_Din_A;
input  [31:0] inA_1_Dout_A;
output   inA_1_Clk_A;
output   inA_1_Rst_A;
output  [31:0] inA_2_Addr_A;
output   inA_2_EN_A;
output  [3:0] inA_2_WEN_A;
output  [31:0] inA_2_Din_A;
input  [31:0] inA_2_Dout_A;
output   inA_2_Clk_A;
output   inA_2_Rst_A;
output  [31:0] inA_3_Addr_A;
output   inA_3_EN_A;
output  [3:0] inA_3_WEN_A;
output  [31:0] inA_3_Din_A;
input  [31:0] inA_3_Dout_A;
output   inA_3_Clk_A;
output   inA_3_Rst_A;
output  [31:0] inA_4_Addr_A;
output   inA_4_EN_A;
output  [3:0] inA_4_WEN_A;
output  [31:0] inA_4_Din_A;
input  [31:0] inA_4_Dout_A;
output   inA_4_Clk_A;
output   inA_4_Rst_A;
output  [31:0] inA_5_Addr_A;
output   inA_5_EN_A;
output  [3:0] inA_5_WEN_A;
output  [31:0] inA_5_Din_A;
input  [31:0] inA_5_Dout_A;
output   inA_5_Clk_A;
output   inA_5_Rst_A;
output  [31:0] inA_6_Addr_A;
output   inA_6_EN_A;
output  [3:0] inA_6_WEN_A;
output  [31:0] inA_6_Din_A;
input  [31:0] inA_6_Dout_A;
output   inA_6_Clk_A;
output   inA_6_Rst_A;
output  [31:0] inA_7_Addr_A;
output   inA_7_EN_A;
output  [3:0] inA_7_WEN_A;
output  [31:0] inA_7_Din_A;
input  [31:0] inA_7_Dout_A;
output   inA_7_Clk_A;
output   inA_7_Rst_A;
output  [31:0] inA_8_Addr_A;
output   inA_8_EN_A;
output  [3:0] inA_8_WEN_A;
output  [31:0] inA_8_Din_A;
input  [31:0] inA_8_Dout_A;
output   inA_8_Clk_A;
output   inA_8_Rst_A;
output  [31:0] inA_9_Addr_A;
output   inA_9_EN_A;
output  [3:0] inA_9_WEN_A;
output  [31:0] inA_9_Din_A;
input  [31:0] inA_9_Dout_A;
output   inA_9_Clk_A;
output   inA_9_Rst_A;
output  [31:0] inA_10_Addr_A;
output   inA_10_EN_A;
output  [3:0] inA_10_WEN_A;
output  [31:0] inA_10_Din_A;
input  [31:0] inA_10_Dout_A;
output   inA_10_Clk_A;
output   inA_10_Rst_A;
output  [31:0] inA_11_Addr_A;
output   inA_11_EN_A;
output  [3:0] inA_11_WEN_A;
output  [31:0] inA_11_Din_A;
input  [31:0] inA_11_Dout_A;
output   inA_11_Clk_A;
output   inA_11_Rst_A;
output  [31:0] inA_12_Addr_A;
output   inA_12_EN_A;
output  [3:0] inA_12_WEN_A;
output  [31:0] inA_12_Din_A;
input  [31:0] inA_12_Dout_A;
output   inA_12_Clk_A;
output   inA_12_Rst_A;
output  [31:0] inA_13_Addr_A;
output   inA_13_EN_A;
output  [3:0] inA_13_WEN_A;
output  [31:0] inA_13_Din_A;
input  [31:0] inA_13_Dout_A;
output   inA_13_Clk_A;
output   inA_13_Rst_A;
output  [31:0] inA_14_Addr_A;
output   inA_14_EN_A;
output  [3:0] inA_14_WEN_A;
output  [31:0] inA_14_Din_A;
input  [31:0] inA_14_Dout_A;
output   inA_14_Clk_A;
output   inA_14_Rst_A;
output  [31:0] inA_15_Addr_A;
output   inA_15_EN_A;
output  [3:0] inA_15_WEN_A;
output  [31:0] inA_15_Din_A;
input  [31:0] inA_15_Dout_A;
output   inA_15_Clk_A;
output   inA_15_Rst_A;
output  [31:0] inA_16_Addr_A;
output   inA_16_EN_A;
output  [3:0] inA_16_WEN_A;
output  [31:0] inA_16_Din_A;
input  [31:0] inA_16_Dout_A;
output   inA_16_Clk_A;
output   inA_16_Rst_A;
output  [31:0] inA_17_Addr_A;
output   inA_17_EN_A;
output  [3:0] inA_17_WEN_A;
output  [31:0] inA_17_Din_A;
input  [31:0] inA_17_Dout_A;
output   inA_17_Clk_A;
output   inA_17_Rst_A;
output  [31:0] inA_18_Addr_A;
output   inA_18_EN_A;
output  [3:0] inA_18_WEN_A;
output  [31:0] inA_18_Din_A;
input  [31:0] inA_18_Dout_A;
output   inA_18_Clk_A;
output   inA_18_Rst_A;
output  [31:0] inA_19_Addr_A;
output   inA_19_EN_A;
output  [3:0] inA_19_WEN_A;
output  [31:0] inA_19_Din_A;
input  [31:0] inA_19_Dout_A;
output   inA_19_Clk_A;
output   inA_19_Rst_A;
output  [31:0] inA_20_Addr_A;
output   inA_20_EN_A;
output  [3:0] inA_20_WEN_A;
output  [31:0] inA_20_Din_A;
input  [31:0] inA_20_Dout_A;
output   inA_20_Clk_A;
output   inA_20_Rst_A;
output  [31:0] inA_21_Addr_A;
output   inA_21_EN_A;
output  [3:0] inA_21_WEN_A;
output  [31:0] inA_21_Din_A;
input  [31:0] inA_21_Dout_A;
output   inA_21_Clk_A;
output   inA_21_Rst_A;
output  [31:0] inA_22_Addr_A;
output   inA_22_EN_A;
output  [3:0] inA_22_WEN_A;
output  [31:0] inA_22_Din_A;
input  [31:0] inA_22_Dout_A;
output   inA_22_Clk_A;
output   inA_22_Rst_A;
output  [31:0] inA_23_Addr_A;
output   inA_23_EN_A;
output  [3:0] inA_23_WEN_A;
output  [31:0] inA_23_Din_A;
input  [31:0] inA_23_Dout_A;
output   inA_23_Clk_A;
output   inA_23_Rst_A;
output  [31:0] inB_0_Addr_A;
output   inB_0_EN_A;
output  [3:0] inB_0_WEN_A;
output  [31:0] inB_0_Din_A;
input  [31:0] inB_0_Dout_A;
output   inB_0_Clk_A;
output   inB_0_Rst_A;
output  [31:0] inB_0_Addr_B;
output   inB_0_EN_B;
output  [3:0] inB_0_WEN_B;
output  [31:0] inB_0_Din_B;
input  [31:0] inB_0_Dout_B;
output   inB_0_Clk_B;
output   inB_0_Rst_B;
output  [31:0] inB_1_Addr_A;
output   inB_1_EN_A;
output  [3:0] inB_1_WEN_A;
output  [31:0] inB_1_Din_A;
input  [31:0] inB_1_Dout_A;
output   inB_1_Clk_A;
output   inB_1_Rst_A;
output  [31:0] inB_1_Addr_B;
output   inB_1_EN_B;
output  [3:0] inB_1_WEN_B;
output  [31:0] inB_1_Din_B;
input  [31:0] inB_1_Dout_B;
output   inB_1_Clk_B;
output   inB_1_Rst_B;
output  [31:0] inB_2_Addr_A;
output   inB_2_EN_A;
output  [3:0] inB_2_WEN_A;
output  [31:0] inB_2_Din_A;
input  [31:0] inB_2_Dout_A;
output   inB_2_Clk_A;
output   inB_2_Rst_A;
output  [31:0] inB_2_Addr_B;
output   inB_2_EN_B;
output  [3:0] inB_2_WEN_B;
output  [31:0] inB_2_Din_B;
input  [31:0] inB_2_Dout_B;
output   inB_2_Clk_B;
output   inB_2_Rst_B;
output  [31:0] inB_3_Addr_A;
output   inB_3_EN_A;
output  [3:0] inB_3_WEN_A;
output  [31:0] inB_3_Din_A;
input  [31:0] inB_3_Dout_A;
output   inB_3_Clk_A;
output   inB_3_Rst_A;
output  [31:0] inB_3_Addr_B;
output   inB_3_EN_B;
output  [3:0] inB_3_WEN_B;
output  [31:0] inB_3_Din_B;
input  [31:0] inB_3_Dout_B;
output   inB_3_Clk_B;
output   inB_3_Rst_B;
output  [31:0] inB_4_Addr_A;
output   inB_4_EN_A;
output  [3:0] inB_4_WEN_A;
output  [31:0] inB_4_Din_A;
input  [31:0] inB_4_Dout_A;
output   inB_4_Clk_A;
output   inB_4_Rst_A;
output  [31:0] inB_4_Addr_B;
output   inB_4_EN_B;
output  [3:0] inB_4_WEN_B;
output  [31:0] inB_4_Din_B;
input  [31:0] inB_4_Dout_B;
output   inB_4_Clk_B;
output   inB_4_Rst_B;
output  [31:0] inB_5_Addr_A;
output   inB_5_EN_A;
output  [3:0] inB_5_WEN_A;
output  [31:0] inB_5_Din_A;
input  [31:0] inB_5_Dout_A;
output   inB_5_Clk_A;
output   inB_5_Rst_A;
output  [31:0] inB_5_Addr_B;
output   inB_5_EN_B;
output  [3:0] inB_5_WEN_B;
output  [31:0] inB_5_Din_B;
input  [31:0] inB_5_Dout_B;
output   inB_5_Clk_B;
output   inB_5_Rst_B;
output  [31:0] inB_6_Addr_A;
output   inB_6_EN_A;
output  [3:0] inB_6_WEN_A;
output  [31:0] inB_6_Din_A;
input  [31:0] inB_6_Dout_A;
output   inB_6_Clk_A;
output   inB_6_Rst_A;
output  [31:0] inB_6_Addr_B;
output   inB_6_EN_B;
output  [3:0] inB_6_WEN_B;
output  [31:0] inB_6_Din_B;
input  [31:0] inB_6_Dout_B;
output   inB_6_Clk_B;
output   inB_6_Rst_B;
output  [31:0] inB_7_Addr_A;
output   inB_7_EN_A;
output  [3:0] inB_7_WEN_A;
output  [31:0] inB_7_Din_A;
input  [31:0] inB_7_Dout_A;
output   inB_7_Clk_A;
output   inB_7_Rst_A;
output  [31:0] inB_7_Addr_B;
output   inB_7_EN_B;
output  [3:0] inB_7_WEN_B;
output  [31:0] inB_7_Din_B;
input  [31:0] inB_7_Dout_B;
output   inB_7_Clk_B;
output   inB_7_Rst_B;
output  [31:0] inB_8_Addr_A;
output   inB_8_EN_A;
output  [3:0] inB_8_WEN_A;
output  [31:0] inB_8_Din_A;
input  [31:0] inB_8_Dout_A;
output   inB_8_Clk_A;
output   inB_8_Rst_A;
output  [31:0] inB_8_Addr_B;
output   inB_8_EN_B;
output  [3:0] inB_8_WEN_B;
output  [31:0] inB_8_Din_B;
input  [31:0] inB_8_Dout_B;
output   inB_8_Clk_B;
output   inB_8_Rst_B;
output  [31:0] inB_9_Addr_A;
output   inB_9_EN_A;
output  [3:0] inB_9_WEN_A;
output  [31:0] inB_9_Din_A;
input  [31:0] inB_9_Dout_A;
output   inB_9_Clk_A;
output   inB_9_Rst_A;
output  [31:0] inB_9_Addr_B;
output   inB_9_EN_B;
output  [3:0] inB_9_WEN_B;
output  [31:0] inB_9_Din_B;
input  [31:0] inB_9_Dout_B;
output   inB_9_Clk_B;
output   inB_9_Rst_B;
output  [31:0] out_0_Addr_A;
output   out_0_EN_A;
output  [3:0] out_0_WEN_A;
output  [31:0] out_0_Din_A;
input  [31:0] out_0_Dout_A;
output   out_0_Clk_A;
output   out_0_Rst_A;
output  [31:0] out_1_Addr_A;
output   out_1_EN_A;
output  [3:0] out_1_WEN_A;
output  [31:0] out_1_Din_A;
input  [31:0] out_1_Dout_A;
output   out_1_Clk_A;
output   out_1_Rst_A;
output  [31:0] out_2_Addr_A;
output   out_2_EN_A;
output  [3:0] out_2_WEN_A;
output  [31:0] out_2_Din_A;
input  [31:0] out_2_Dout_A;
output   out_2_Clk_A;
output   out_2_Rst_A;
output  [31:0] out_3_Addr_A;
output   out_3_EN_A;
output  [3:0] out_3_WEN_A;
output  [31:0] out_3_Din_A;
input  [31:0] out_3_Dout_A;
output   out_3_Clk_A;
output   out_3_Rst_A;
output  [31:0] out_4_Addr_A;
output   out_4_EN_A;
output  [3:0] out_4_WEN_A;
output  [31:0] out_4_Din_A;
input  [31:0] out_4_Dout_A;
output   out_4_Clk_A;
output   out_4_Rst_A;
output  [31:0] out_5_Addr_A;
output   out_5_EN_A;
output  [3:0] out_5_WEN_A;
output  [31:0] out_5_Din_A;
input  [31:0] out_5_Dout_A;
output   out_5_Clk_A;
output   out_5_Rst_A;
output  [31:0] out_6_Addr_A;
output   out_6_EN_A;
output  [3:0] out_6_WEN_A;
output  [31:0] out_6_Din_A;
input  [31:0] out_6_Dout_A;
output   out_6_Clk_A;
output   out_6_Rst_A;
output  [31:0] out_7_Addr_A;
output   out_7_EN_A;
output  [3:0] out_7_WEN_A;
output  [31:0] out_7_Din_A;
input  [31:0] out_7_Dout_A;
output   out_7_Clk_A;
output   out_7_Rst_A;
output  [31:0] out_8_Addr_A;
output   out_8_EN_A;
output  [3:0] out_8_WEN_A;
output  [31:0] out_8_Din_A;
input  [31:0] out_8_Dout_A;
output   out_8_Clk_A;
output   out_8_Rst_A;
output  [31:0] out_9_Addr_A;
output   out_9_EN_A;
output  [3:0] out_9_WEN_A;
output  [31:0] out_9_Din_A;
input  [31:0] out_9_Dout_A;
output   out_9_Clk_A;
output   out_9_Rst_A;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

reg inA_0_EN_A;
reg inA_1_EN_A;
reg inA_2_EN_A;
reg inA_3_EN_A;
reg inA_4_EN_A;
reg inA_5_EN_A;
reg inA_6_EN_A;
reg inA_7_EN_A;
reg inA_8_EN_A;
reg inA_9_EN_A;
reg inA_10_EN_A;
reg inA_11_EN_A;
reg inA_12_EN_A;
reg inA_13_EN_A;
reg inA_14_EN_A;
reg inA_15_EN_A;
reg inA_16_EN_A;
reg inA_17_EN_A;
reg inA_18_EN_A;
reg inA_19_EN_A;
reg inA_20_EN_A;
reg inA_21_EN_A;
reg inA_22_EN_A;
reg inA_23_EN_A;
reg inB_0_EN_A;
reg inB_0_EN_B;
reg inB_1_EN_A;
reg inB_1_EN_B;
reg inB_2_EN_A;
reg inB_2_EN_B;
reg inB_3_EN_A;
reg inB_3_EN_B;
reg inB_4_EN_A;
reg inB_4_EN_B;
reg inB_5_EN_A;
reg inB_5_EN_B;
reg inB_6_EN_A;
reg inB_6_EN_B;
reg inB_7_EN_A;
reg inB_7_EN_B;
reg inB_8_EN_A;
reg inB_8_EN_B;
reg inB_9_EN_A;
reg inB_9_EN_B;
reg out_0_EN_A;
reg[3:0] out_0_WEN_A;
reg out_1_EN_A;
reg[3:0] out_1_WEN_A;
reg out_2_EN_A;
reg[3:0] out_2_WEN_A;
reg out_3_EN_A;
reg[3:0] out_3_WEN_A;
reg out_4_EN_A;
reg[3:0] out_4_WEN_A;
reg out_5_EN_A;
reg[3:0] out_5_WEN_A;
reg out_6_EN_A;
reg[3:0] out_6_WEN_A;
reg out_7_EN_A;
reg[3:0] out_7_WEN_A;
reg out_8_EN_A;
reg[3:0] out_8_WEN_A;
reg out_9_EN_A;
reg[3:0] out_9_WEN_A;

 reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_ready;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state14_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln1057_reg_5314;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln1057_fu_3528_p2;
wire   [7:0] add_ln1057_fu_3534_p2;
reg   [7:0] add_ln1057_reg_5318;
wire   [3:0] select_ln1057_fu_3552_p3;
reg   [3:0] select_ln1057_reg_5323;
reg   [3:0] select_ln1057_reg_5323_pp0_iter1_reg;
wire   [4:0] select_ln1057_1_fu_3566_p3;
reg   [4:0] select_ln1057_1_reg_5328;
wire   [63:0] zext_ln1057_fu_3574_p1;
reg   [63:0] zext_ln1057_reg_5333;
reg   [63:0] zext_ln1057_reg_5333_pp0_iter1_reg;
wire  signed [9:0] trunc_ln870_fu_3602_p1;
reg  signed [9:0] trunc_ln870_reg_5467;
wire    ap_block_pp0_stage1_11001;
wire  signed [9:0] trunc_ln870_1_fu_3606_p1;
reg  signed [9:0] trunc_ln870_1_reg_5472;
wire  signed [9:0] trunc_ln870_2_fu_3610_p1;
reg  signed [9:0] trunc_ln870_2_reg_5477;
wire  signed [9:0] trunc_ln870_3_fu_3614_p1;
reg  signed [9:0] trunc_ln870_3_reg_5482;
wire  signed [9:0] trunc_ln870_4_fu_3618_p1;
reg  signed [9:0] trunc_ln870_4_reg_5487;
wire  signed [9:0] trunc_ln870_5_fu_3622_p1;
reg  signed [9:0] trunc_ln870_5_reg_5492;
wire  signed [9:0] trunc_ln870_6_fu_3626_p1;
reg  signed [9:0] trunc_ln870_6_reg_5497;
wire  signed [9:0] trunc_ln870_7_fu_3630_p1;
reg  signed [9:0] trunc_ln870_7_reg_5502;
wire  signed [9:0] trunc_ln870_8_fu_3634_p1;
reg  signed [9:0] trunc_ln870_8_reg_5507;
wire   [9:0] mul_ln870_9_fu_3646_p2;
reg   [9:0] mul_ln870_9_reg_5512;
wire  signed [9:0] trunc_ln870_10_fu_3652_p1;
reg  signed [9:0] trunc_ln870_10_reg_5517;
wire  signed [9:0] trunc_ln870_11_fu_3656_p1;
reg  signed [9:0] trunc_ln870_11_reg_5522;
wire  signed [9:0] trunc_ln870_12_fu_3660_p1;
reg  signed [9:0] trunc_ln870_12_reg_5527;
wire  signed [9:0] trunc_ln870_13_fu_3664_p1;
reg  signed [9:0] trunc_ln870_13_reg_5532;
wire  signed [9:0] trunc_ln870_14_fu_3668_p1;
reg  signed [9:0] trunc_ln870_14_reg_5537;
wire  signed [9:0] trunc_ln870_15_fu_3672_p1;
reg  signed [9:0] trunc_ln870_15_reg_5542;
wire  signed [9:0] trunc_ln870_16_fu_3676_p1;
reg  signed [9:0] trunc_ln870_16_reg_5547;
wire  signed [9:0] trunc_ln870_17_fu_3680_p1;
reg  signed [9:0] trunc_ln870_17_reg_5552;
wire  signed [9:0] trunc_ln870_18_fu_3684_p1;
reg  signed [9:0] trunc_ln870_18_reg_5557;
wire  signed [9:0] trunc_ln870_19_fu_3688_p1;
reg  signed [9:0] trunc_ln870_19_reg_5562;
wire  signed [9:0] trunc_ln870_20_fu_3692_p1;
reg  signed [9:0] trunc_ln870_20_reg_5567;
wire  signed [9:0] trunc_ln870_21_fu_3696_p1;
reg  signed [9:0] trunc_ln870_21_reg_5572;
wire  signed [9:0] trunc_ln870_22_fu_3700_p1;
reg  signed [9:0] trunc_ln870_22_reg_5577;
wire  signed [9:0] trunc_ln870_23_fu_3704_p1;
reg  signed [9:0] trunc_ln870_23_reg_5582;
wire   [9:0] mul_ln870_fu_3730_p2;
reg   [9:0] mul_ln870_reg_5637;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire   [9:0] mul_ln870_1_fu_3739_p2;
reg   [9:0] mul_ln870_1_reg_5642;
wire   [9:0] mul_ln870_3_fu_3761_p2;
reg   [9:0] mul_ln870_3_reg_5652;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [9:0] add_ln870_14_fu_3771_p2;
reg   [9:0] add_ln870_14_reg_5657;
wire   [9:0] add_ln870_16_fu_3799_p2;
reg   [9:0] add_ln870_16_reg_5662;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [9:0] mul_ln870_6_fu_3809_p2;
reg   [9:0] mul_ln870_6_reg_5667;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [9:0] mul_ln870_7_fu_3818_p2;
reg   [9:0] mul_ln870_7_reg_5672;
wire   [9:0] grp_fu_4087_p3;
reg  signed [9:0] add_ln870_20_reg_5677;
wire   [9:0] add_ln870_18_fu_3841_p2;
reg   [9:0] add_ln870_18_reg_5682;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
(* use_dsp48 = "no" *) wire   [9:0] add_ln870_21_fu_3846_p2;
reg   [9:0] add_ln870_21_reg_5687;
wire   [9:0] mul_ln870_11_fu_3855_p2;
reg   [9:0] mul_ln870_11_reg_5692;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [9:0] mul_ln870_12_fu_3864_p2;
reg   [9:0] mul_ln870_12_reg_5697;
wire   [9:0] add_ln870_23_fu_3882_p2;
reg   [9:0] add_ln870_23_reg_5702;
wire   [9:0] mul_ln870_14_fu_3901_p2;
reg   [9:0] mul_ln870_14_reg_5707;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire   [9:0] add_ln870_7_fu_3906_p2;
reg   [9:0] add_ln870_7_reg_5712;
wire   [9:0] add_ln870_10_fu_3935_p2;
reg   [9:0] add_ln870_10_reg_5717;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire   [9:0] mul_ln870_17_fu_3944_p2;
reg   [9:0] mul_ln870_17_reg_5722;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [9:0] mul_ln870_18_fu_3953_p2;
reg   [9:0] mul_ln870_18_reg_5727;
wire   [9:0] add_ln870_11_fu_3962_p2;
reg   [9:0] add_ln870_11_reg_5732;
wire   [9:0] mul_ln870_20_fu_3980_p2;
reg   [9:0] mul_ln870_20_reg_5737;
wire    ap_block_pp0_stage11_11001;
wire   [9:0] add_ln870_5_fu_3990_p2;
reg   [9:0] add_ln870_5_reg_5742;
wire   [9:0] mul_ln870_21_fu_3999_p2;
reg   [9:0] mul_ln870_21_reg_5747;
wire   [9:0] add_ln870_2_fu_4013_p2;
reg   [9:0] add_ln870_2_reg_5752;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [31:0] ap_phi_mux_phi_ln870_9_phi_fu_2683_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_9_reg_2680;
reg   [31:0] ap_phi_mux_phi_ln870_phi_fu_2718_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_reg_2715;
reg   [31:0] ap_phi_mux_phi_ln870_1_phi_fu_2753_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_1_reg_2750;
reg   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785;
reg   [31:0] ap_phi_mux_phi_ln870_2_phi_fu_2813_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_2_reg_2810;
reg   [31:0] ap_phi_mux_phi_ln870_3_phi_fu_2848_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_3_reg_2845;
reg   [31:0] ap_phi_mux_phi_ln870_4_phi_fu_2883_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_4_reg_2880;
reg   [31:0] ap_phi_mux_phi_ln870_5_phi_fu_2918_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_5_reg_2915;
reg   [31:0] ap_phi_mux_phi_ln870_6_phi_fu_2953_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_6_reg_2950;
reg   [31:0] ap_phi_mux_phi_ln870_7_phi_fu_2988_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_7_reg_2985;
reg   [31:0] ap_phi_mux_phi_ln870_8_phi_fu_3023_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_8_reg_3020;
reg   [31:0] ap_phi_mux_phi_ln870_10_phi_fu_3058_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_10_reg_3055;
reg   [31:0] ap_phi_mux_phi_ln870_11_phi_fu_3093_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_11_reg_3090;
reg   [31:0] ap_phi_mux_phi_ln870_12_phi_fu_3128_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_12_reg_3125;
reg   [31:0] ap_phi_mux_phi_ln870_13_phi_fu_3163_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_13_reg_3160;
reg   [31:0] ap_phi_mux_phi_ln870_14_phi_fu_3198_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_14_reg_3195;
reg   [31:0] ap_phi_mux_phi_ln870_15_phi_fu_3233_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_15_reg_3230;
reg   [31:0] ap_phi_mux_phi_ln870_16_phi_fu_3268_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_16_reg_3265;
reg   [31:0] ap_phi_mux_phi_ln870_17_phi_fu_3303_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_17_reg_3300;
reg   [31:0] ap_phi_mux_phi_ln870_18_phi_fu_3338_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_18_reg_3335;
reg   [31:0] ap_phi_mux_phi_ln870_19_phi_fu_3373_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_19_reg_3370;
reg   [31:0] ap_phi_mux_phi_ln870_20_phi_fu_3408_p20;
wire   [31:0] ap_phi_reg_pp0_iter0_phi_ln870_20_reg_3405;
reg   [31:0] ap_phi_mux_phi_ln870_21_phi_fu_3443_p20;
wire   [31:0] ap_phi_reg_pp0_iter1_phi_ln870_21_reg_3440;
reg   [31:0] ap_phi_mux_phi_ln870_22_phi_fu_3478_p20;
wire   [31:0] ap_phi_reg_pp0_iter1_phi_ln870_22_reg_3475;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
reg   [3:0] j_V_fu_206;
wire   [3:0] add_ln870_1_fu_3708_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_V_load;
reg   [4:0] i_V_fu_210;
reg   [4:0] ap_sig_allocacmp_i_V_load;
reg   [7:0] indvar_flatten_fu_214;
reg   [7:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [31:0] inA_23_Addr_A_orig;
wire   [31:0] inA_0_Addr_A_orig;
wire   [31:0] inA_1_Addr_A_orig;
wire   [31:0] inA_2_Addr_A_orig;
wire   [31:0] inA_3_Addr_A_orig;
wire   [31:0] inA_4_Addr_A_orig;
wire   [31:0] inA_5_Addr_A_orig;
wire   [31:0] inA_6_Addr_A_orig;
wire   [31:0] inA_7_Addr_A_orig;
wire   [31:0] inA_8_Addr_A_orig;
wire   [31:0] inA_9_Addr_A_orig;
wire   [31:0] inA_10_Addr_A_orig;
wire   [31:0] inA_11_Addr_A_orig;
wire   [31:0] inA_12_Addr_A_orig;
wire   [31:0] inA_13_Addr_A_orig;
wire   [31:0] inA_14_Addr_A_orig;
wire   [31:0] inA_15_Addr_A_orig;
wire   [31:0] inA_16_Addr_A_orig;
wire   [31:0] inA_17_Addr_A_orig;
wire   [31:0] inA_18_Addr_A_orig;
wire   [31:0] inA_19_Addr_A_orig;
wire   [31:0] inA_20_Addr_A_orig;
wire   [31:0] inA_21_Addr_A_orig;
wire   [31:0] inA_22_Addr_A_orig;
reg   [31:0] inB_8_Addr_B_orig;
reg   [31:0] inB_8_Addr_A_orig;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
reg   [31:0] inB_7_Addr_B_orig;
reg   [31:0] inB_7_Addr_A_orig;
reg   [31:0] inB_6_Addr_B_orig;
reg   [31:0] inB_6_Addr_A_orig;
reg   [31:0] inB_5_Addr_B_orig;
reg   [31:0] inB_5_Addr_A_orig;
reg   [31:0] inB_4_Addr_B_orig;
reg   [31:0] inB_4_Addr_A_orig;
reg   [31:0] inB_3_Addr_B_orig;
reg   [31:0] inB_3_Addr_A_orig;
reg   [31:0] inB_2_Addr_B_orig;
reg   [31:0] inB_2_Addr_A_orig;
reg   [31:0] inB_1_Addr_B_orig;
reg   [31:0] inB_1_Addr_A_orig;
reg   [31:0] inB_0_Addr_B_orig;
reg   [31:0] inB_0_Addr_A_orig;
reg   [31:0] inB_9_Addr_B_orig;
reg   [31:0] inB_9_Addr_A_orig;
wire   [31:0] out_8_Addr_A_orig;
wire   [31:0] out_7_Addr_A_orig;
wire   [31:0] out_6_Addr_A_orig;
wire   [31:0] out_5_Addr_A_orig;
wire   [31:0] out_4_Addr_A_orig;
wire   [31:0] out_3_Addr_A_orig;
wire   [31:0] out_2_Addr_A_orig;
wire   [31:0] out_1_Addr_A_orig;
wire   [31:0] out_0_Addr_A_orig;
wire   [31:0] out_9_Addr_A_orig;
wire   [0:0] icmp_ln1057_1_fu_3546_p2;
wire   [4:0] add_ln870_fu_3560_p2;
wire  signed [9:0] mul_ln870_9_fu_3646_p0;
wire  signed [9:0] mul_ln870_9_fu_3646_p1;
wire  signed [9:0] mul_ln870_fu_3730_p0;
wire  signed [9:0] mul_ln870_1_fu_3739_p0;
wire  signed [9:0] mul_ln870_2_fu_3752_p0;
wire  signed [9:0] mul_ln870_3_fu_3761_p0;
wire   [9:0] mul_ln870_2_fu_3752_p2;
wire   [9:0] add_ln870_13_fu_3766_p2;
wire  signed [9:0] mul_ln870_4_fu_3780_p0;
wire  signed [9:0] mul_ln870_5_fu_3789_p0;
wire   [9:0] mul_ln870_5_fu_3789_p2;
wire   [9:0] add_ln870_15_fu_3794_p2;
wire   [9:0] mul_ln870_4_fu_3780_p2;
wire  signed [9:0] mul_ln870_6_fu_3809_p0;
wire  signed [9:0] mul_ln870_7_fu_3818_p0;
wire  signed [9:0] mul_ln870_8_fu_3827_p0;
wire  signed [9:0] mul_ln870_10_fu_3836_p0;
wire   [9:0] mul_ln870_8_fu_3827_p2;
wire   [9:0] mul_ln870_10_fu_3836_p2;
wire  signed [9:0] mul_ln870_11_fu_3855_p0;
wire  signed [9:0] mul_ln870_12_fu_3864_p0;
wire   [9:0] add_ln870_19_fu_3873_p2;
wire   [9:0] add_ln870_22_fu_3877_p2;
wire   [9:0] add_ln870_17_fu_3869_p2;
wire  signed [9:0] mul_ln870_13_fu_3892_p0;
wire  signed [9:0] mul_ln870_14_fu_3901_p0;
wire   [9:0] mul_ln870_13_fu_3892_p2;
wire  signed [9:0] mul_ln870_15_fu_3915_p0;
wire  signed [9:0] mul_ln870_16_fu_3924_p0;
wire   [9:0] mul_ln870_16_fu_3924_p2;
wire   [9:0] mul_ln870_15_fu_3915_p2;
wire   [9:0] add_ln870_9_fu_3929_p2;
wire  signed [9:0] mul_ln870_17_fu_3944_p0;
wire  signed [9:0] mul_ln870_18_fu_3953_p0;
wire   [9:0] add_ln870_8_fu_3958_p2;
wire  signed [9:0] mul_ln870_19_fu_3971_p0;
wire  signed [9:0] mul_ln870_20_fu_3980_p0;
wire   [9:0] mul_ln870_19_fu_3971_p2;
wire   [9:0] add_ln870_4_fu_3985_p2;
wire  signed [9:0] mul_ln870_21_fu_3999_p0;
wire  signed [9:0] mul_ln870_22_fu_4008_p0;
wire   [9:0] mul_ln870_22_fu_4008_p2;
wire   [9:0] add_ln870_3_fu_4018_p2;
wire   [9:0] add_ln870_6_fu_4022_p2;
wire   [9:0] add_ln870_12_fu_4027_p2;
wire   [9:0] add_ln870_24_fu_4032_p2;
wire  signed [9:0] grp_fu_4087_p0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_2396;
reg    ap_condition_1777;
reg    ap_condition_1191;
reg    ap_condition_2404;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

arr_mult_2d_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U1(
    .din0(mul_ln870_9_fu_3646_p0),
    .din1(mul_ln870_9_fu_3646_p1),
    .dout(mul_ln870_9_fu_3646_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U2(
    .din0(mul_ln870_fu_3730_p0),
    .din1(trunc_ln870_reg_5467),
    .dout(mul_ln870_fu_3730_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U3(
    .din0(mul_ln870_1_fu_3739_p0),
    .din1(trunc_ln870_1_reg_5472),
    .dout(mul_ln870_1_fu_3739_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U4(
    .din0(mul_ln870_2_fu_3752_p0),
    .din1(trunc_ln870_2_reg_5477),
    .dout(mul_ln870_2_fu_3752_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U5(
    .din0(mul_ln870_3_fu_3761_p0),
    .din1(trunc_ln870_3_reg_5482),
    .dout(mul_ln870_3_fu_3761_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U6(
    .din0(mul_ln870_4_fu_3780_p0),
    .din1(trunc_ln870_4_reg_5487),
    .dout(mul_ln870_4_fu_3780_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U7(
    .din0(mul_ln870_5_fu_3789_p0),
    .din1(trunc_ln870_5_reg_5492),
    .dout(mul_ln870_5_fu_3789_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U8(
    .din0(mul_ln870_6_fu_3809_p0),
    .din1(trunc_ln870_6_reg_5497),
    .dout(mul_ln870_6_fu_3809_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U9(
    .din0(mul_ln870_7_fu_3818_p0),
    .din1(trunc_ln870_7_reg_5502),
    .dout(mul_ln870_7_fu_3818_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U10(
    .din0(mul_ln870_8_fu_3827_p0),
    .din1(trunc_ln870_8_reg_5507),
    .dout(mul_ln870_8_fu_3827_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U11(
    .din0(mul_ln870_10_fu_3836_p0),
    .din1(trunc_ln870_10_reg_5517),
    .dout(mul_ln870_10_fu_3836_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U12(
    .din0(mul_ln870_11_fu_3855_p0),
    .din1(trunc_ln870_11_reg_5522),
    .dout(mul_ln870_11_fu_3855_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U13(
    .din0(mul_ln870_12_fu_3864_p0),
    .din1(trunc_ln870_12_reg_5527),
    .dout(mul_ln870_12_fu_3864_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U14(
    .din0(mul_ln870_13_fu_3892_p0),
    .din1(trunc_ln870_13_reg_5532),
    .dout(mul_ln870_13_fu_3892_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U15(
    .din0(mul_ln870_14_fu_3901_p0),
    .din1(trunc_ln870_14_reg_5537),
    .dout(mul_ln870_14_fu_3901_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U16(
    .din0(mul_ln870_15_fu_3915_p0),
    .din1(trunc_ln870_15_reg_5542),
    .dout(mul_ln870_15_fu_3915_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U17(
    .din0(mul_ln870_16_fu_3924_p0),
    .din1(trunc_ln870_16_reg_5547),
    .dout(mul_ln870_16_fu_3924_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U18(
    .din0(mul_ln870_17_fu_3944_p0),
    .din1(trunc_ln870_17_reg_5552),
    .dout(mul_ln870_17_fu_3944_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U19(
    .din0(mul_ln870_18_fu_3953_p0),
    .din1(trunc_ln870_18_reg_5557),
    .dout(mul_ln870_18_fu_3953_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U20(
    .din0(mul_ln870_19_fu_3971_p0),
    .din1(trunc_ln870_19_reg_5562),
    .dout(mul_ln870_19_fu_3971_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U21(
    .din0(mul_ln870_20_fu_3980_p0),
    .din1(trunc_ln870_20_reg_5567),
    .dout(mul_ln870_20_fu_3980_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U22(
    .din0(mul_ln870_21_fu_3999_p0),
    .din1(trunc_ln870_21_reg_5572),
    .dout(mul_ln870_21_fu_3999_p2)
);

arr_mult_2d_mul_10s_10s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mul_10s_10s_10_1_1_U23(
    .din0(mul_ln870_22_fu_4008_p0),
    .din1(trunc_ln870_22_reg_5577),
    .dout(mul_ln870_22_fu_4008_p2)
);

arr_mult_2d_mac_muladd_10s_10s_10ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_10s_10s_10ns_10_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_4087_p0),
    .din1(trunc_ln870_23_reg_5582),
    .din2(mul_ln870_9_reg_5512),
    .ce(1'b1),
    .dout(grp_fu_4087_p3)
);

arr_mult_2d_flow_control_loop_pipe flow_control_loop_pipe_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int),
    .ap_continue(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1777)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785 <= inB_0_Dout_A;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_2404)) begin
            i_V_fu_210 <= 5'd0;
        end else if ((1'b1 == ap_condition_1191)) begin
            i_V_fu_210 <= select_ln1057_1_reg_5328;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_2404)) begin
            indvar_flatten_fu_214 <= 8'd0;
        end else if ((1'b1 == ap_condition_1191)) begin
            indvar_flatten_fu_214 <= add_ln1057_reg_5318;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_2404)) begin
            j_V_fu_206 <= 4'd0;
        end else if ((1'b1 == ap_condition_1191)) begin
            j_V_fu_206 <= add_ln870_1_fu_3708_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln1057_reg_5318 <= add_ln1057_fu_3534_p2;
        add_ln870_2_reg_5752 <= add_ln870_2_fu_4013_p2;
        icmp_ln1057_reg_5314 <= icmp_ln1057_fu_3528_p2;
        mul_ln870_21_reg_5747 <= mul_ln870_21_fu_3999_p2;
        select_ln1057_reg_5323_pp0_iter1_reg <= select_ln1057_reg_5323;
        zext_ln1057_reg_5333_pp0_iter1_reg[4 : 0] <= zext_ln1057_reg_5333[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        add_ln870_10_reg_5717 <= add_ln870_10_fu_3935_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln870_11_reg_5732 <= add_ln870_11_fu_3962_p2;
        mul_ln870_17_reg_5722 <= mul_ln870_17_fu_3944_p2;
        mul_ln870_18_reg_5727 <= mul_ln870_18_fu_3953_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln870_14_reg_5657 <= add_ln870_14_fu_3771_p2;
        mul_ln870_3_reg_5652 <= mul_ln870_3_fu_3761_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln870_16_reg_5662 <= add_ln870_16_fu_3799_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln870_18_reg_5682 <= add_ln870_18_fu_3841_p2;
        add_ln870_21_reg_5687 <= add_ln870_21_fu_3846_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln870_20_reg_5677 <= grp_fu_4087_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add_ln870_23_reg_5702 <= add_ln870_23_fu_3882_p2;
        mul_ln870_11_reg_5692 <= mul_ln870_11_fu_3855_p2;
        mul_ln870_12_reg_5697 <= mul_ln870_12_fu_3864_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add_ln870_5_reg_5742 <= add_ln870_5_fu_3990_p2;
        mul_ln870_20_reg_5737 <= mul_ln870_20_fu_3980_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        add_ln870_7_reg_5712 <= add_ln870_7_fu_3906_p2;
        mul_ln870_14_reg_5707 <= mul_ln870_14_fu_3901_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln870_1_reg_5642 <= mul_ln870_1_fu_3739_p2;
        mul_ln870_reg_5637 <= mul_ln870_fu_3730_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_ln870_6_reg_5667 <= mul_ln870_6_fu_3809_p2;
        mul_ln870_7_reg_5672 <= mul_ln870_7_fu_3818_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln870_9_reg_5512 <= mul_ln870_9_fu_3646_p2;
        trunc_ln870_10_reg_5517 <= trunc_ln870_10_fu_3652_p1;
        trunc_ln870_11_reg_5522 <= trunc_ln870_11_fu_3656_p1;
        trunc_ln870_12_reg_5527 <= trunc_ln870_12_fu_3660_p1;
        trunc_ln870_13_reg_5532 <= trunc_ln870_13_fu_3664_p1;
        trunc_ln870_14_reg_5537 <= trunc_ln870_14_fu_3668_p1;
        trunc_ln870_15_reg_5542 <= trunc_ln870_15_fu_3672_p1;
        trunc_ln870_16_reg_5547 <= trunc_ln870_16_fu_3676_p1;
        trunc_ln870_17_reg_5552 <= trunc_ln870_17_fu_3680_p1;
        trunc_ln870_18_reg_5557 <= trunc_ln870_18_fu_3684_p1;
        trunc_ln870_19_reg_5562 <= trunc_ln870_19_fu_3688_p1;
        trunc_ln870_1_reg_5472 <= trunc_ln870_1_fu_3606_p1;
        trunc_ln870_20_reg_5567 <= trunc_ln870_20_fu_3692_p1;
        trunc_ln870_21_reg_5572 <= trunc_ln870_21_fu_3696_p1;
        trunc_ln870_22_reg_5577 <= trunc_ln870_22_fu_3700_p1;
        trunc_ln870_23_reg_5582 <= trunc_ln870_23_fu_3704_p1;
        trunc_ln870_2_reg_5477 <= trunc_ln870_2_fu_3610_p1;
        trunc_ln870_3_reg_5482 <= trunc_ln870_3_fu_3614_p1;
        trunc_ln870_4_reg_5487 <= trunc_ln870_4_fu_3618_p1;
        trunc_ln870_5_reg_5492 <= trunc_ln870_5_fu_3622_p1;
        trunc_ln870_6_reg_5497 <= trunc_ln870_6_fu_3626_p1;
        trunc_ln870_7_reg_5502 <= trunc_ln870_7_fu_3630_p1;
        trunc_ln870_8_reg_5507 <= trunc_ln870_8_fu_3634_p1;
        trunc_ln870_reg_5467 <= trunc_ln870_fu_3602_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1057_fu_3528_p2 == 1'd0))) begin
        select_ln1057_1_reg_5328 <= select_ln1057_1_fu_3566_p3;
        select_ln1057_reg_5323 <= select_ln1057_fu_3552_p3;
        zext_ln1057_reg_5333[4 : 0] <= zext_ln1057_fu_3574_p1[4 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln1057_reg_5314 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = ap_phi_reg_pp0_iter0_phi_ln870_10_reg_3055;
        end
    end else begin
        ap_phi_mux_phi_ln870_10_phi_fu_3058_p20 = ap_phi_reg_pp0_iter0_phi_ln870_10_reg_3055;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = ap_phi_reg_pp0_iter0_phi_ln870_11_reg_3090;
        end
    end else begin
        ap_phi_mux_phi_ln870_11_phi_fu_3093_p20 = ap_phi_reg_pp0_iter0_phi_ln870_11_reg_3090;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = ap_phi_reg_pp0_iter0_phi_ln870_12_reg_3125;
        end
    end else begin
        ap_phi_mux_phi_ln870_12_phi_fu_3128_p20 = ap_phi_reg_pp0_iter0_phi_ln870_12_reg_3125;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = ap_phi_reg_pp0_iter0_phi_ln870_13_reg_3160;
        end
    end else begin
        ap_phi_mux_phi_ln870_13_phi_fu_3163_p20 = ap_phi_reg_pp0_iter0_phi_ln870_13_reg_3160;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = ap_phi_reg_pp0_iter0_phi_ln870_14_reg_3195;
        end
    end else begin
        ap_phi_mux_phi_ln870_14_phi_fu_3198_p20 = ap_phi_reg_pp0_iter0_phi_ln870_14_reg_3195;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = ap_phi_reg_pp0_iter0_phi_ln870_15_reg_3230;
        end
    end else begin
        ap_phi_mux_phi_ln870_15_phi_fu_3233_p20 = ap_phi_reg_pp0_iter0_phi_ln870_15_reg_3230;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = ap_phi_reg_pp0_iter0_phi_ln870_16_reg_3265;
        end
    end else begin
        ap_phi_mux_phi_ln870_16_phi_fu_3268_p20 = ap_phi_reg_pp0_iter0_phi_ln870_16_reg_3265;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = ap_phi_reg_pp0_iter0_phi_ln870_17_reg_3300;
        end
    end else begin
        ap_phi_mux_phi_ln870_17_phi_fu_3303_p20 = ap_phi_reg_pp0_iter0_phi_ln870_17_reg_3300;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = ap_phi_reg_pp0_iter0_phi_ln870_18_reg_3335;
        end
    end else begin
        ap_phi_mux_phi_ln870_18_phi_fu_3338_p20 = ap_phi_reg_pp0_iter0_phi_ln870_18_reg_3335;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = ap_phi_reg_pp0_iter0_phi_ln870_19_reg_3370;
        end
    end else begin
        ap_phi_mux_phi_ln870_19_phi_fu_3373_p20 = ap_phi_reg_pp0_iter0_phi_ln870_19_reg_3370;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = ap_phi_reg_pp0_iter0_phi_ln870_1_reg_2750;
        end
    end else begin
        ap_phi_mux_phi_ln870_1_phi_fu_2753_p20 = ap_phi_reg_pp0_iter0_phi_ln870_1_reg_2750;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = ap_phi_reg_pp0_iter0_phi_ln870_20_reg_3405;
        end
    end else begin
        ap_phi_mux_phi_ln870_20_phi_fu_3408_p20 = ap_phi_reg_pp0_iter0_phi_ln870_20_reg_3405;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = ap_phi_reg_pp0_iter1_phi_ln870_21_reg_3440;
        end
    end else begin
        ap_phi_mux_phi_ln870_21_phi_fu_3443_p20 = ap_phi_reg_pp0_iter1_phi_ln870_21_reg_3440;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = ap_phi_reg_pp0_iter1_phi_ln870_22_reg_3475;
        end
    end else begin
        ap_phi_mux_phi_ln870_22_phi_fu_3478_p20 = ap_phi_reg_pp0_iter1_phi_ln870_22_reg_3475;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = ap_phi_reg_pp0_iter0_phi_ln870_2_reg_2810;
        end
    end else begin
        ap_phi_mux_phi_ln870_2_phi_fu_2813_p20 = ap_phi_reg_pp0_iter0_phi_ln870_2_reg_2810;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = ap_phi_reg_pp0_iter0_phi_ln870_3_reg_2845;
        end
    end else begin
        ap_phi_mux_phi_ln870_3_phi_fu_2848_p20 = ap_phi_reg_pp0_iter0_phi_ln870_3_reg_2845;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = ap_phi_reg_pp0_iter0_phi_ln870_4_reg_2880;
        end
    end else begin
        ap_phi_mux_phi_ln870_4_phi_fu_2883_p20 = ap_phi_reg_pp0_iter0_phi_ln870_4_reg_2880;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = ap_phi_reg_pp0_iter0_phi_ln870_5_reg_2915;
        end
    end else begin
        ap_phi_mux_phi_ln870_5_phi_fu_2918_p20 = ap_phi_reg_pp0_iter0_phi_ln870_5_reg_2915;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = ap_phi_reg_pp0_iter0_phi_ln870_6_reg_2950;
        end
    end else begin
        ap_phi_mux_phi_ln870_6_phi_fu_2953_p20 = ap_phi_reg_pp0_iter0_phi_ln870_6_reg_2950;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_9_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_8_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_7_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_6_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_5_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_4_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_3_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_2_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_1_Dout_A;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = inB_0_Dout_A;
        end else begin
            ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = ap_phi_reg_pp0_iter0_phi_ln870_7_reg_2985;
        end
    end else begin
        ap_phi_mux_phi_ln870_7_phi_fu_2988_p20 = ap_phi_reg_pp0_iter0_phi_ln870_7_reg_2985;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = ap_phi_reg_pp0_iter0_phi_ln870_8_reg_3020;
        end
    end else begin
        ap_phi_mux_phi_ln870_8_phi_fu_3023_p20 = ap_phi_reg_pp0_iter0_phi_ln870_8_reg_3020;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = ap_phi_reg_pp0_iter0_phi_ln870_9_reg_2680;
        end
    end else begin
        ap_phi_mux_phi_ln870_9_phi_fu_2683_p20 = ap_phi_reg_pp0_iter0_phi_ln870_9_reg_2680;
    end
end

always @ (*) begin
    if ((icmp_ln1057_reg_5314 == 1'd0)) begin
        if ((1'b1 == ap_condition_2396)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_9_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd8)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_8_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd7)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_7_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd6)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_6_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd5)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_5_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd4)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_4_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd3)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_3_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd2)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_2_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd1)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_1_Dout_B;
        end else if ((select_ln1057_reg_5323 == 4'd0)) begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = inB_0_Dout_B;
        end else begin
            ap_phi_mux_phi_ln870_phi_fu_2718_p20 = ap_phi_reg_pp0_iter0_phi_ln870_reg_2715;
        end
    end else begin
        ap_phi_mux_phi_ln870_phi_fu_2718_p20 = ap_phi_reg_pp0_iter0_phi_ln870_reg_2715;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_V_load = 5'd0;
    end else begin
        ap_sig_allocacmp_i_V_load = i_V_fu_210;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_214;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_V_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_V_load = j_V_fu_206;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_0_EN_A = 1'b1;
    end else begin
        inA_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_10_EN_A = 1'b1;
    end else begin
        inA_10_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_11_EN_A = 1'b1;
    end else begin
        inA_11_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_12_EN_A = 1'b1;
    end else begin
        inA_12_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_13_EN_A = 1'b1;
    end else begin
        inA_13_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_14_EN_A = 1'b1;
    end else begin
        inA_14_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_15_EN_A = 1'b1;
    end else begin
        inA_15_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_16_EN_A = 1'b1;
    end else begin
        inA_16_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_17_EN_A = 1'b1;
    end else begin
        inA_17_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_18_EN_A = 1'b1;
    end else begin
        inA_18_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_19_EN_A = 1'b1;
    end else begin
        inA_19_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_1_EN_A = 1'b1;
    end else begin
        inA_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_20_EN_A = 1'b1;
    end else begin
        inA_20_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_21_EN_A = 1'b1;
    end else begin
        inA_21_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_22_EN_A = 1'b1;
    end else begin
        inA_22_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_23_EN_A = 1'b1;
    end else begin
        inA_23_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_2_EN_A = 1'b1;
    end else begin
        inA_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_3_EN_A = 1'b1;
    end else begin
        inA_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_4_EN_A = 1'b1;
    end else begin
        inA_4_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_5_EN_A = 1'b1;
    end else begin
        inA_5_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_6_EN_A = 1'b1;
    end else begin
        inA_6_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_7_EN_A = 1'b1;
    end else begin
        inA_7_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_8_EN_A = 1'b1;
    end else begin
        inA_8_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inA_9_EN_A = 1'b1;
    end else begin
        inA_9_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_0_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_0_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_0_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_0_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_0_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_0_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_0_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_0_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_0_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_0_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_0_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_0_Addr_A_orig = 64'd23;
        end else begin
            inB_0_Addr_A_orig = 'bx;
        end
    end else begin
        inB_0_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_0_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_0_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_0_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_0_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_0_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_0_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_0_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_0_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_0_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_0_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_0_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_0_Addr_B_orig = 64'd9;
        end else begin
            inB_0_Addr_B_orig = 'bx;
        end
    end else begin
        inB_0_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_0_EN_A = 1'b1;
    end else begin
        inB_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_0_EN_B = 1'b1;
    end else begin
        inB_0_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_1_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_1_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_1_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_1_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_1_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_1_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_1_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_1_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_1_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_1_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_1_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_1_Addr_A_orig = 64'd23;
        end else begin
            inB_1_Addr_A_orig = 'bx;
        end
    end else begin
        inB_1_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_1_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_1_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_1_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_1_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_1_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_1_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_1_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_1_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_1_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_1_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_1_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_1_Addr_B_orig = 64'd9;
        end else begin
            inB_1_Addr_B_orig = 'bx;
        end
    end else begin
        inB_1_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_1_EN_A = 1'b1;
    end else begin
        inB_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_1_EN_B = 1'b1;
    end else begin
        inB_1_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_2_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_2_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_2_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_2_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_2_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_2_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_2_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_2_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_2_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_2_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_2_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_2_Addr_A_orig = 64'd23;
        end else begin
            inB_2_Addr_A_orig = 'bx;
        end
    end else begin
        inB_2_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_2_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_2_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_2_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_2_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_2_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_2_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_2_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_2_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_2_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_2_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_2_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_2_Addr_B_orig = 64'd9;
        end else begin
            inB_2_Addr_B_orig = 'bx;
        end
    end else begin
        inB_2_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_2_EN_A = 1'b1;
    end else begin
        inB_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_2_EN_B = 1'b1;
    end else begin
        inB_2_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_3_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_3_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_3_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_3_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_3_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_3_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_3_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_3_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_3_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_3_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_3_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_3_Addr_A_orig = 64'd23;
        end else begin
            inB_3_Addr_A_orig = 'bx;
        end
    end else begin
        inB_3_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_3_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_3_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_3_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_3_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_3_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_3_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_3_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_3_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_3_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_3_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_3_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_3_Addr_B_orig = 64'd9;
        end else begin
            inB_3_Addr_B_orig = 'bx;
        end
    end else begin
        inB_3_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_3_EN_A = 1'b1;
    end else begin
        inB_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_3_EN_B = 1'b1;
    end else begin
        inB_3_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_4_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_4_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_4_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_4_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_4_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_4_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_4_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_4_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_4_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_4_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_4_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_4_Addr_A_orig = 64'd23;
        end else begin
            inB_4_Addr_A_orig = 'bx;
        end
    end else begin
        inB_4_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_4_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_4_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_4_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_4_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_4_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_4_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_4_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_4_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_4_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_4_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_4_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_4_Addr_B_orig = 64'd9;
        end else begin
            inB_4_Addr_B_orig = 'bx;
        end
    end else begin
        inB_4_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_4_EN_A = 1'b1;
    end else begin
        inB_4_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_4_EN_B = 1'b1;
    end else begin
        inB_4_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_5_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_5_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_5_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_5_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_5_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_5_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_5_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_5_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_5_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_5_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_5_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_5_Addr_A_orig = 64'd23;
        end else begin
            inB_5_Addr_A_orig = 'bx;
        end
    end else begin
        inB_5_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_5_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_5_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_5_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_5_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_5_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_5_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_5_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_5_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_5_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_5_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_5_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_5_Addr_B_orig = 64'd9;
        end else begin
            inB_5_Addr_B_orig = 'bx;
        end
    end else begin
        inB_5_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_5_EN_A = 1'b1;
    end else begin
        inB_5_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_5_EN_B = 1'b1;
    end else begin
        inB_5_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_6_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_6_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_6_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_6_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_6_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_6_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_6_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_6_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_6_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_6_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_6_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_6_Addr_A_orig = 64'd23;
        end else begin
            inB_6_Addr_A_orig = 'bx;
        end
    end else begin
        inB_6_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_6_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_6_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_6_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_6_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_6_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_6_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_6_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_6_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_6_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_6_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_6_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_6_Addr_B_orig = 64'd9;
        end else begin
            inB_6_Addr_B_orig = 'bx;
        end
    end else begin
        inB_6_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_6_EN_A = 1'b1;
    end else begin
        inB_6_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_6_EN_B = 1'b1;
    end else begin
        inB_6_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_7_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_7_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_7_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_7_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_7_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_7_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_7_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_7_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_7_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_7_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_7_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_7_Addr_A_orig = 64'd23;
        end else begin
            inB_7_Addr_A_orig = 'bx;
        end
    end else begin
        inB_7_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_7_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_7_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_7_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_7_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_7_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_7_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_7_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_7_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_7_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_7_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_7_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_7_Addr_B_orig = 64'd9;
        end else begin
            inB_7_Addr_B_orig = 'bx;
        end
    end else begin
        inB_7_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_7_EN_A = 1'b1;
    end else begin
        inB_7_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_7_EN_B = 1'b1;
    end else begin
        inB_7_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_8_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_8_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_8_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_8_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_8_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_8_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_8_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_8_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_8_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_8_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_8_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_8_Addr_A_orig = 64'd23;
        end else begin
            inB_8_Addr_A_orig = 'bx;
        end
    end else begin
        inB_8_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_8_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_8_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_8_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_8_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_8_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_8_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_8_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_8_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_8_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_8_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_8_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_8_Addr_B_orig = 64'd9;
        end else begin
            inB_8_Addr_B_orig = 'bx;
        end
    end else begin
        inB_8_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_8_EN_A = 1'b1;
    end else begin
        inB_8_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_8_EN_B = 1'b1;
    end else begin
        inB_8_EN_B = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_9_Addr_A_orig = 64'd22;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_9_Addr_A_orig = 64'd20;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_9_Addr_A_orig = 64'd18;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_9_Addr_A_orig = 64'd16;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_9_Addr_A_orig = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_9_Addr_A_orig = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_9_Addr_A_orig = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_9_Addr_A_orig = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_9_Addr_A_orig = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_9_Addr_A_orig = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_9_Addr_A_orig = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_9_Addr_A_orig = 64'd23;
        end else begin
            inB_9_Addr_A_orig = 'bx;
        end
    end else begin
        inB_9_Addr_A_orig = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            inB_9_Addr_B_orig = 64'd21;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            inB_9_Addr_B_orig = 64'd19;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            inB_9_Addr_B_orig = 64'd17;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            inB_9_Addr_B_orig = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            inB_9_Addr_B_orig = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            inB_9_Addr_B_orig = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            inB_9_Addr_B_orig = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            inB_9_Addr_B_orig = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            inB_9_Addr_B_orig = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            inB_9_Addr_B_orig = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            inB_9_Addr_B_orig = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            inB_9_Addr_B_orig = 64'd9;
        end else begin
            inB_9_Addr_B_orig = 'bx;
        end
    end else begin
        inB_9_Addr_B_orig = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_9_EN_A = 1'b1;
    end else begin
        inB_9_EN_A = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        inB_9_EN_B = 1'b1;
    end else begin
        inB_9_EN_B = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_0_EN_A = 1'b1;
    end else begin
        out_0_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd0))) begin
        out_0_WEN_A = 4'd7;
    end else begin
        out_0_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_1_EN_A = 1'b1;
    end else begin
        out_1_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd1))) begin
        out_1_WEN_A = 4'd7;
    end else begin
        out_1_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_2_EN_A = 1'b1;
    end else begin
        out_2_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd2))) begin
        out_2_WEN_A = 4'd7;
    end else begin
        out_2_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_3_EN_A = 1'b1;
    end else begin
        out_3_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd3))) begin
        out_3_WEN_A = 4'd7;
    end else begin
        out_3_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_4_EN_A = 1'b1;
    end else begin
        out_4_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd4))) begin
        out_4_WEN_A = 4'd7;
    end else begin
        out_4_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_5_EN_A = 1'b1;
    end else begin
        out_5_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd5))) begin
        out_5_WEN_A = 4'd7;
    end else begin
        out_5_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_6_EN_A = 1'b1;
    end else begin
        out_6_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd6))) begin
        out_6_WEN_A = 4'd7;
    end else begin
        out_6_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_7_EN_A = 1'b1;
    end else begin
        out_7_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd7))) begin
        out_7_WEN_A = 4'd7;
    end else begin
        out_7_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_8_EN_A = 1'b1;
    end else begin
        out_8_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln1057_reg_5323_pp0_iter1_reg == 4'd8))) begin
        out_8_WEN_A = 4'd7;
    end else begin
        out_8_WEN_A = 4'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        out_9_EN_A = 1'b1;
    end else begin
        out_9_EN_A = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & ((select_ln1057_reg_5323_pp0_iter1_reg == 4'd9) | ((select_ln1057_reg_5323_pp0_iter1_reg == 4'd10) | ((select_ln1057_reg_5323_pp0_iter1_reg == 4'd11) | ((select_ln1057_reg_5323_pp0_iter1_reg == 4'd12) | ((select_ln1057_reg_5323_pp0_iter1_reg == 4'd13) | ((select_ln1057_reg_5323_pp0_iter1_reg == 4'd14) | (select_ln1057_reg_5323_pp0_iter1_reg == 4'd15))))))))) begin
        out_9_WEN_A = 4'd7;
    end else begin
        out_9_WEN_A = 4'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1057_fu_3534_p2 = (ap_sig_allocacmp_indvar_flatten_load + 8'd1);

assign add_ln870_10_fu_3935_p2 = (add_ln870_9_fu_3929_p2 + mul_ln870_14_reg_5707);

assign add_ln870_11_fu_3962_p2 = (add_ln870_10_reg_5717 + add_ln870_8_fu_3958_p2);

assign add_ln870_12_fu_4027_p2 = (add_ln870_11_reg_5732 + add_ln870_6_fu_4022_p2);

assign add_ln870_13_fu_3766_p2 = (mul_ln870_1_reg_5642 + mul_ln870_2_fu_3752_p2);

assign add_ln870_14_fu_3771_p2 = (add_ln870_13_fu_3766_p2 + mul_ln870_reg_5637);

assign add_ln870_15_fu_3794_p2 = (mul_ln870_3_reg_5652 + mul_ln870_5_fu_3789_p2);

assign add_ln870_16_fu_3799_p2 = (add_ln870_15_fu_3794_p2 + mul_ln870_4_fu_3780_p2);

assign add_ln870_17_fu_3869_p2 = (add_ln870_16_reg_5662 + add_ln870_14_reg_5657);

assign add_ln870_18_fu_3841_p2 = (mul_ln870_6_reg_5667 + mul_ln870_8_fu_3827_p2);

assign add_ln870_19_fu_3873_p2 = (add_ln870_18_reg_5682 + mul_ln870_7_reg_5672);

assign add_ln870_1_fu_3708_p2 = (select_ln1057_reg_5323 + 4'd1);

assign add_ln870_21_fu_3846_p2 = ($signed(add_ln870_20_reg_5677) + $signed(mul_ln870_10_fu_3836_p2));

assign add_ln870_22_fu_3877_p2 = (add_ln870_21_reg_5687 + add_ln870_19_fu_3873_p2);

assign add_ln870_23_fu_3882_p2 = (add_ln870_22_fu_3877_p2 + add_ln870_17_fu_3869_p2);

assign add_ln870_24_fu_4032_p2 = (add_ln870_23_reg_5702 + add_ln870_12_fu_4027_p2);

assign add_ln870_2_fu_4013_p2 = (mul_ln870_22_fu_4008_p2 + mul_ln870_20_reg_5737);

assign add_ln870_3_fu_4018_p2 = (add_ln870_2_reg_5752 + mul_ln870_21_reg_5747);

assign add_ln870_4_fu_3985_p2 = (mul_ln870_19_fu_3971_p2 + mul_ln870_18_reg_5727);

assign add_ln870_5_fu_3990_p2 = (add_ln870_4_fu_3985_p2 + mul_ln870_17_reg_5722);

assign add_ln870_6_fu_4022_p2 = (add_ln870_5_reg_5742 + add_ln870_3_fu_4018_p2);

assign add_ln870_7_fu_3906_p2 = (mul_ln870_13_fu_3892_p2 + mul_ln870_12_reg_5697);

assign add_ln870_8_fu_3958_p2 = (add_ln870_7_reg_5712 + mul_ln870_11_reg_5692);

assign add_ln870_9_fu_3929_p2 = (mul_ln870_16_fu_3924_p2 + mul_ln870_15_fu_3915_p2);

assign add_ln870_fu_3560_p2 = (ap_sig_allocacmp_i_V_load + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1191 = ((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_1777 = ((icmp_ln1057_reg_5314 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_2396 = (~(select_ln1057_reg_5323 == 4'd0) & ~(select_ln1057_reg_5323 == 4'd1) & ~(select_ln1057_reg_5323 == 4'd2) & ~(select_ln1057_reg_5323 == 4'd3) & ~(select_ln1057_reg_5323 == 4'd4) & ~(select_ln1057_reg_5323 == 4'd5) & ~(select_ln1057_reg_5323 == 4'd6) & ~(select_ln1057_reg_5323 == 4'd7) & ~(select_ln1057_reg_5323 == 4'd8));
end

always @ (*) begin
    ap_condition_2404 = ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_phi_ln870_10_reg_3055 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_11_reg_3090 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_12_reg_3125 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_13_reg_3160 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_14_reg_3195 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_15_reg_3230 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_16_reg_3265 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_17_reg_3300 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_18_reg_3335 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_19_reg_3370 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_1_reg_2750 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_20_reg_3405 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_2_reg_2810 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_3_reg_2845 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_4_reg_2880 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_5_reg_2915 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_6_reg_2950 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_7_reg_2985 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_8_reg_3020 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_9_reg_2680 = 'bx;

assign ap_phi_reg_pp0_iter0_phi_ln870_reg_2715 = 'bx;

assign ap_phi_reg_pp0_iter1_phi_ln870_21_reg_3440 = 'bx;

assign ap_phi_reg_pp0_iter1_phi_ln870_22_reg_3475 = 'bx;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_fu_4087_p0 = ap_phi_reg_pp0_iter0_phi_ln870_23_reg_2785[9:0];

assign icmp_ln1057_1_fu_3546_p2 = ((ap_sig_allocacmp_j_V_load == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln1057_fu_3528_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 8'd200) ? 1'b1 : 1'b0);

assign inA_0_Addr_A = inA_0_Addr_A_orig << 32'd2;

assign inA_0_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_0_Clk_A = ap_clk;

assign inA_0_Din_A = 32'd0;

assign inA_0_Rst_A = ap_rst_n_inv;

assign inA_0_WEN_A = 4'd0;

assign inA_10_Addr_A = inA_10_Addr_A_orig << 32'd2;

assign inA_10_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_10_Clk_A = ap_clk;

assign inA_10_Din_A = 32'd0;

assign inA_10_Rst_A = ap_rst_n_inv;

assign inA_10_WEN_A = 4'd0;

assign inA_11_Addr_A = inA_11_Addr_A_orig << 32'd2;

assign inA_11_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_11_Clk_A = ap_clk;

assign inA_11_Din_A = 32'd0;

assign inA_11_Rst_A = ap_rst_n_inv;

assign inA_11_WEN_A = 4'd0;

assign inA_12_Addr_A = inA_12_Addr_A_orig << 32'd2;

assign inA_12_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_12_Clk_A = ap_clk;

assign inA_12_Din_A = 32'd0;

assign inA_12_Rst_A = ap_rst_n_inv;

assign inA_12_WEN_A = 4'd0;

assign inA_13_Addr_A = inA_13_Addr_A_orig << 32'd2;

assign inA_13_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_13_Clk_A = ap_clk;

assign inA_13_Din_A = 32'd0;

assign inA_13_Rst_A = ap_rst_n_inv;

assign inA_13_WEN_A = 4'd0;

assign inA_14_Addr_A = inA_14_Addr_A_orig << 32'd2;

assign inA_14_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_14_Clk_A = ap_clk;

assign inA_14_Din_A = 32'd0;

assign inA_14_Rst_A = ap_rst_n_inv;

assign inA_14_WEN_A = 4'd0;

assign inA_15_Addr_A = inA_15_Addr_A_orig << 32'd2;

assign inA_15_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_15_Clk_A = ap_clk;

assign inA_15_Din_A = 32'd0;

assign inA_15_Rst_A = ap_rst_n_inv;

assign inA_15_WEN_A = 4'd0;

assign inA_16_Addr_A = inA_16_Addr_A_orig << 32'd2;

assign inA_16_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_16_Clk_A = ap_clk;

assign inA_16_Din_A = 32'd0;

assign inA_16_Rst_A = ap_rst_n_inv;

assign inA_16_WEN_A = 4'd0;

assign inA_17_Addr_A = inA_17_Addr_A_orig << 32'd2;

assign inA_17_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_17_Clk_A = ap_clk;

assign inA_17_Din_A = 32'd0;

assign inA_17_Rst_A = ap_rst_n_inv;

assign inA_17_WEN_A = 4'd0;

assign inA_18_Addr_A = inA_18_Addr_A_orig << 32'd2;

assign inA_18_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_18_Clk_A = ap_clk;

assign inA_18_Din_A = 32'd0;

assign inA_18_Rst_A = ap_rst_n_inv;

assign inA_18_WEN_A = 4'd0;

assign inA_19_Addr_A = inA_19_Addr_A_orig << 32'd2;

assign inA_19_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_19_Clk_A = ap_clk;

assign inA_19_Din_A = 32'd0;

assign inA_19_Rst_A = ap_rst_n_inv;

assign inA_19_WEN_A = 4'd0;

assign inA_1_Addr_A = inA_1_Addr_A_orig << 32'd2;

assign inA_1_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_1_Clk_A = ap_clk;

assign inA_1_Din_A = 32'd0;

assign inA_1_Rst_A = ap_rst_n_inv;

assign inA_1_WEN_A = 4'd0;

assign inA_20_Addr_A = inA_20_Addr_A_orig << 32'd2;

assign inA_20_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_20_Clk_A = ap_clk;

assign inA_20_Din_A = 32'd0;

assign inA_20_Rst_A = ap_rst_n_inv;

assign inA_20_WEN_A = 4'd0;

assign inA_21_Addr_A = inA_21_Addr_A_orig << 32'd2;

assign inA_21_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_21_Clk_A = ap_clk;

assign inA_21_Din_A = 32'd0;

assign inA_21_Rst_A = ap_rst_n_inv;

assign inA_21_WEN_A = 4'd0;

assign inA_22_Addr_A = inA_22_Addr_A_orig << 32'd2;

assign inA_22_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_22_Clk_A = ap_clk;

assign inA_22_Din_A = 32'd0;

assign inA_22_Rst_A = ap_rst_n_inv;

assign inA_22_WEN_A = 4'd0;

assign inA_23_Addr_A = inA_23_Addr_A_orig << 32'd2;

assign inA_23_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_23_Clk_A = ap_clk;

assign inA_23_Din_A = 32'd0;

assign inA_23_Rst_A = ap_rst_n_inv;

assign inA_23_WEN_A = 4'd0;

assign inA_2_Addr_A = inA_2_Addr_A_orig << 32'd2;

assign inA_2_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_2_Clk_A = ap_clk;

assign inA_2_Din_A = 32'd0;

assign inA_2_Rst_A = ap_rst_n_inv;

assign inA_2_WEN_A = 4'd0;

assign inA_3_Addr_A = inA_3_Addr_A_orig << 32'd2;

assign inA_3_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_3_Clk_A = ap_clk;

assign inA_3_Din_A = 32'd0;

assign inA_3_Rst_A = ap_rst_n_inv;

assign inA_3_WEN_A = 4'd0;

assign inA_4_Addr_A = inA_4_Addr_A_orig << 32'd2;

assign inA_4_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_4_Clk_A = ap_clk;

assign inA_4_Din_A = 32'd0;

assign inA_4_Rst_A = ap_rst_n_inv;

assign inA_4_WEN_A = 4'd0;

assign inA_5_Addr_A = inA_5_Addr_A_orig << 32'd2;

assign inA_5_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_5_Clk_A = ap_clk;

assign inA_5_Din_A = 32'd0;

assign inA_5_Rst_A = ap_rst_n_inv;

assign inA_5_WEN_A = 4'd0;

assign inA_6_Addr_A = inA_6_Addr_A_orig << 32'd2;

assign inA_6_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_6_Clk_A = ap_clk;

assign inA_6_Din_A = 32'd0;

assign inA_6_Rst_A = ap_rst_n_inv;

assign inA_6_WEN_A = 4'd0;

assign inA_7_Addr_A = inA_7_Addr_A_orig << 32'd2;

assign inA_7_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_7_Clk_A = ap_clk;

assign inA_7_Din_A = 32'd0;

assign inA_7_Rst_A = ap_rst_n_inv;

assign inA_7_WEN_A = 4'd0;

assign inA_8_Addr_A = inA_8_Addr_A_orig << 32'd2;

assign inA_8_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_8_Clk_A = ap_clk;

assign inA_8_Din_A = 32'd0;

assign inA_8_Rst_A = ap_rst_n_inv;

assign inA_8_WEN_A = 4'd0;

assign inA_9_Addr_A = inA_9_Addr_A_orig << 32'd2;

assign inA_9_Addr_A_orig = zext_ln1057_fu_3574_p1;

assign inA_9_Clk_A = ap_clk;

assign inA_9_Din_A = 32'd0;

assign inA_9_Rst_A = ap_rst_n_inv;

assign inA_9_WEN_A = 4'd0;

assign inB_0_Addr_A = inB_0_Addr_A_orig << 32'd2;

assign inB_0_Addr_B = inB_0_Addr_B_orig << 32'd2;

assign inB_0_Clk_A = ap_clk;

assign inB_0_Clk_B = ap_clk;

assign inB_0_Din_A = 32'd0;

assign inB_0_Din_B = 32'd0;

assign inB_0_Rst_A = ap_rst_n_inv;

assign inB_0_Rst_B = ap_rst_n_inv;

assign inB_0_WEN_A = 4'd0;

assign inB_0_WEN_B = 4'd0;

assign inB_1_Addr_A = inB_1_Addr_A_orig << 32'd2;

assign inB_1_Addr_B = inB_1_Addr_B_orig << 32'd2;

assign inB_1_Clk_A = ap_clk;

assign inB_1_Clk_B = ap_clk;

assign inB_1_Din_A = 32'd0;

assign inB_1_Din_B = 32'd0;

assign inB_1_Rst_A = ap_rst_n_inv;

assign inB_1_Rst_B = ap_rst_n_inv;

assign inB_1_WEN_A = 4'd0;

assign inB_1_WEN_B = 4'd0;

assign inB_2_Addr_A = inB_2_Addr_A_orig << 32'd2;

assign inB_2_Addr_B = inB_2_Addr_B_orig << 32'd2;

assign inB_2_Clk_A = ap_clk;

assign inB_2_Clk_B = ap_clk;

assign inB_2_Din_A = 32'd0;

assign inB_2_Din_B = 32'd0;

assign inB_2_Rst_A = ap_rst_n_inv;

assign inB_2_Rst_B = ap_rst_n_inv;

assign inB_2_WEN_A = 4'd0;

assign inB_2_WEN_B = 4'd0;

assign inB_3_Addr_A = inB_3_Addr_A_orig << 32'd2;

assign inB_3_Addr_B = inB_3_Addr_B_orig << 32'd2;

assign inB_3_Clk_A = ap_clk;

assign inB_3_Clk_B = ap_clk;

assign inB_3_Din_A = 32'd0;

assign inB_3_Din_B = 32'd0;

assign inB_3_Rst_A = ap_rst_n_inv;

assign inB_3_Rst_B = ap_rst_n_inv;

assign inB_3_WEN_A = 4'd0;

assign inB_3_WEN_B = 4'd0;

assign inB_4_Addr_A = inB_4_Addr_A_orig << 32'd2;

assign inB_4_Addr_B = inB_4_Addr_B_orig << 32'd2;

assign inB_4_Clk_A = ap_clk;

assign inB_4_Clk_B = ap_clk;

assign inB_4_Din_A = 32'd0;

assign inB_4_Din_B = 32'd0;

assign inB_4_Rst_A = ap_rst_n_inv;

assign inB_4_Rst_B = ap_rst_n_inv;

assign inB_4_WEN_A = 4'd0;

assign inB_4_WEN_B = 4'd0;

assign inB_5_Addr_A = inB_5_Addr_A_orig << 32'd2;

assign inB_5_Addr_B = inB_5_Addr_B_orig << 32'd2;

assign inB_5_Clk_A = ap_clk;

assign inB_5_Clk_B = ap_clk;

assign inB_5_Din_A = 32'd0;

assign inB_5_Din_B = 32'd0;

assign inB_5_Rst_A = ap_rst_n_inv;

assign inB_5_Rst_B = ap_rst_n_inv;

assign inB_5_WEN_A = 4'd0;

assign inB_5_WEN_B = 4'd0;

assign inB_6_Addr_A = inB_6_Addr_A_orig << 32'd2;

assign inB_6_Addr_B = inB_6_Addr_B_orig << 32'd2;

assign inB_6_Clk_A = ap_clk;

assign inB_6_Clk_B = ap_clk;

assign inB_6_Din_A = 32'd0;

assign inB_6_Din_B = 32'd0;

assign inB_6_Rst_A = ap_rst_n_inv;

assign inB_6_Rst_B = ap_rst_n_inv;

assign inB_6_WEN_A = 4'd0;

assign inB_6_WEN_B = 4'd0;

assign inB_7_Addr_A = inB_7_Addr_A_orig << 32'd2;

assign inB_7_Addr_B = inB_7_Addr_B_orig << 32'd2;

assign inB_7_Clk_A = ap_clk;

assign inB_7_Clk_B = ap_clk;

assign inB_7_Din_A = 32'd0;

assign inB_7_Din_B = 32'd0;

assign inB_7_Rst_A = ap_rst_n_inv;

assign inB_7_Rst_B = ap_rst_n_inv;

assign inB_7_WEN_A = 4'd0;

assign inB_7_WEN_B = 4'd0;

assign inB_8_Addr_A = inB_8_Addr_A_orig << 32'd2;

assign inB_8_Addr_B = inB_8_Addr_B_orig << 32'd2;

assign inB_8_Clk_A = ap_clk;

assign inB_8_Clk_B = ap_clk;

assign inB_8_Din_A = 32'd0;

assign inB_8_Din_B = 32'd0;

assign inB_8_Rst_A = ap_rst_n_inv;

assign inB_8_Rst_B = ap_rst_n_inv;

assign inB_8_WEN_A = 4'd0;

assign inB_8_WEN_B = 4'd0;

assign inB_9_Addr_A = inB_9_Addr_A_orig << 32'd2;

assign inB_9_Addr_B = inB_9_Addr_B_orig << 32'd2;

assign inB_9_Clk_A = ap_clk;

assign inB_9_Clk_B = ap_clk;

assign inB_9_Din_A = 32'd0;

assign inB_9_Din_B = 32'd0;

assign inB_9_Rst_A = ap_rst_n_inv;

assign inB_9_Rst_B = ap_rst_n_inv;

assign inB_9_WEN_A = 4'd0;

assign inB_9_WEN_B = 4'd0;

assign mul_ln870_10_fu_3836_p0 = ap_phi_mux_phi_ln870_10_phi_fu_3058_p20[9:0];

assign mul_ln870_11_fu_3855_p0 = ap_phi_mux_phi_ln870_11_phi_fu_3093_p20[9:0];

assign mul_ln870_12_fu_3864_p0 = ap_phi_mux_phi_ln870_12_phi_fu_3128_p20[9:0];

assign mul_ln870_13_fu_3892_p0 = ap_phi_mux_phi_ln870_13_phi_fu_3163_p20[9:0];

assign mul_ln870_14_fu_3901_p0 = ap_phi_mux_phi_ln870_14_phi_fu_3198_p20[9:0];

assign mul_ln870_15_fu_3915_p0 = ap_phi_mux_phi_ln870_15_phi_fu_3233_p20[9:0];

assign mul_ln870_16_fu_3924_p0 = ap_phi_mux_phi_ln870_16_phi_fu_3268_p20[9:0];

assign mul_ln870_17_fu_3944_p0 = ap_phi_mux_phi_ln870_17_phi_fu_3303_p20[9:0];

assign mul_ln870_18_fu_3953_p0 = ap_phi_mux_phi_ln870_18_phi_fu_3338_p20[9:0];

assign mul_ln870_19_fu_3971_p0 = ap_phi_mux_phi_ln870_19_phi_fu_3373_p20[9:0];

assign mul_ln870_1_fu_3739_p0 = ap_phi_mux_phi_ln870_1_phi_fu_2753_p20[9:0];

assign mul_ln870_20_fu_3980_p0 = ap_phi_mux_phi_ln870_20_phi_fu_3408_p20[9:0];

assign mul_ln870_21_fu_3999_p0 = ap_phi_mux_phi_ln870_21_phi_fu_3443_p20[9:0];

assign mul_ln870_22_fu_4008_p0 = ap_phi_mux_phi_ln870_22_phi_fu_3478_p20[9:0];

assign mul_ln870_2_fu_3752_p0 = ap_phi_mux_phi_ln870_2_phi_fu_2813_p20[9:0];

assign mul_ln870_3_fu_3761_p0 = ap_phi_mux_phi_ln870_3_phi_fu_2848_p20[9:0];

assign mul_ln870_4_fu_3780_p0 = ap_phi_mux_phi_ln870_4_phi_fu_2883_p20[9:0];

assign mul_ln870_5_fu_3789_p0 = ap_phi_mux_phi_ln870_5_phi_fu_2918_p20[9:0];

assign mul_ln870_6_fu_3809_p0 = ap_phi_mux_phi_ln870_6_phi_fu_2953_p20[9:0];

assign mul_ln870_7_fu_3818_p0 = ap_phi_mux_phi_ln870_7_phi_fu_2988_p20[9:0];

assign mul_ln870_8_fu_3827_p0 = ap_phi_mux_phi_ln870_8_phi_fu_3023_p20[9:0];

assign mul_ln870_9_fu_3646_p0 = ap_phi_mux_phi_ln870_9_phi_fu_2683_p20[9:0];

assign mul_ln870_9_fu_3646_p1 = inA_9_Dout_A[9:0];

assign mul_ln870_fu_3730_p0 = ap_phi_mux_phi_ln870_phi_fu_2718_p20[9:0];

assign out_0_Addr_A = out_0_Addr_A_orig << 32'd2;

assign out_0_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_0_Clk_A = ap_clk;

assign out_0_Din_A = add_ln870_24_fu_4032_p2;

assign out_0_Rst_A = ap_rst_n_inv;

assign out_1_Addr_A = out_1_Addr_A_orig << 32'd2;

assign out_1_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_1_Clk_A = ap_clk;

assign out_1_Din_A = add_ln870_24_fu_4032_p2;

assign out_1_Rst_A = ap_rst_n_inv;

assign out_2_Addr_A = out_2_Addr_A_orig << 32'd2;

assign out_2_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_2_Clk_A = ap_clk;

assign out_2_Din_A = add_ln870_24_fu_4032_p2;

assign out_2_Rst_A = ap_rst_n_inv;

assign out_3_Addr_A = out_3_Addr_A_orig << 32'd2;

assign out_3_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_3_Clk_A = ap_clk;

assign out_3_Din_A = add_ln870_24_fu_4032_p2;

assign out_3_Rst_A = ap_rst_n_inv;

assign out_4_Addr_A = out_4_Addr_A_orig << 32'd2;

assign out_4_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_4_Clk_A = ap_clk;

assign out_4_Din_A = add_ln870_24_fu_4032_p2;

assign out_4_Rst_A = ap_rst_n_inv;

assign out_5_Addr_A = out_5_Addr_A_orig << 32'd2;

assign out_5_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_5_Clk_A = ap_clk;

assign out_5_Din_A = add_ln870_24_fu_4032_p2;

assign out_5_Rst_A = ap_rst_n_inv;

assign out_6_Addr_A = out_6_Addr_A_orig << 32'd2;

assign out_6_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_6_Clk_A = ap_clk;

assign out_6_Din_A = add_ln870_24_fu_4032_p2;

assign out_6_Rst_A = ap_rst_n_inv;

assign out_7_Addr_A = out_7_Addr_A_orig << 32'd2;

assign out_7_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_7_Clk_A = ap_clk;

assign out_7_Din_A = add_ln870_24_fu_4032_p2;

assign out_7_Rst_A = ap_rst_n_inv;

assign out_8_Addr_A = out_8_Addr_A_orig << 32'd2;

assign out_8_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_8_Clk_A = ap_clk;

assign out_8_Din_A = add_ln870_24_fu_4032_p2;

assign out_8_Rst_A = ap_rst_n_inv;

assign out_9_Addr_A = out_9_Addr_A_orig << 32'd2;

assign out_9_Addr_A_orig = zext_ln1057_reg_5333_pp0_iter1_reg;

assign out_9_Clk_A = ap_clk;

assign out_9_Din_A = add_ln870_24_fu_4032_p2;

assign out_9_Rst_A = ap_rst_n_inv;

assign select_ln1057_1_fu_3566_p3 = ((icmp_ln1057_1_fu_3546_p2[0:0] == 1'b1) ? add_ln870_fu_3560_p2 : ap_sig_allocacmp_i_V_load);

assign select_ln1057_fu_3552_p3 = ((icmp_ln1057_1_fu_3546_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_V_load);

assign trunc_ln870_10_fu_3652_p1 = inA_10_Dout_A[9:0];

assign trunc_ln870_11_fu_3656_p1 = inA_11_Dout_A[9:0];

assign trunc_ln870_12_fu_3660_p1 = inA_12_Dout_A[9:0];

assign trunc_ln870_13_fu_3664_p1 = inA_13_Dout_A[9:0];

assign trunc_ln870_14_fu_3668_p1 = inA_14_Dout_A[9:0];

assign trunc_ln870_15_fu_3672_p1 = inA_15_Dout_A[9:0];

assign trunc_ln870_16_fu_3676_p1 = inA_16_Dout_A[9:0];

assign trunc_ln870_17_fu_3680_p1 = inA_17_Dout_A[9:0];

assign trunc_ln870_18_fu_3684_p1 = inA_18_Dout_A[9:0];

assign trunc_ln870_19_fu_3688_p1 = inA_19_Dout_A[9:0];

assign trunc_ln870_1_fu_3606_p1 = inA_1_Dout_A[9:0];

assign trunc_ln870_20_fu_3692_p1 = inA_20_Dout_A[9:0];

assign trunc_ln870_21_fu_3696_p1 = inA_21_Dout_A[9:0];

assign trunc_ln870_22_fu_3700_p1 = inA_22_Dout_A[9:0];

assign trunc_ln870_23_fu_3704_p1 = inA_23_Dout_A[9:0];

assign trunc_ln870_2_fu_3610_p1 = inA_2_Dout_A[9:0];

assign trunc_ln870_3_fu_3614_p1 = inA_3_Dout_A[9:0];

assign trunc_ln870_4_fu_3618_p1 = inA_4_Dout_A[9:0];

assign trunc_ln870_5_fu_3622_p1 = inA_5_Dout_A[9:0];

assign trunc_ln870_6_fu_3626_p1 = inA_6_Dout_A[9:0];

assign trunc_ln870_7_fu_3630_p1 = inA_7_Dout_A[9:0];

assign trunc_ln870_8_fu_3634_p1 = inA_8_Dout_A[9:0];

assign trunc_ln870_fu_3602_p1 = inA_0_Dout_A[9:0];

assign zext_ln1057_fu_3574_p1 = select_ln1057_1_fu_3566_p3;

always @ (posedge ap_clk) begin
    zext_ln1057_reg_5333[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln1057_reg_5333_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //arr_mult_2d
